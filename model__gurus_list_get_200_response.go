/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GurusListGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GurusListGet200Response{}

// GurusListGet200Response struct for GurusListGet200Response
type GurusListGet200Response struct {
	Data []GurusListGet200ResponseDataInner `json:"data,omitempty"`
	Page *int32 `json:"page,omitempty"`
	PerPage *int32 `json:"per_page,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewGurusListGet200Response instantiates a new GurusListGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGurusListGet200Response() *GurusListGet200Response {
	this := GurusListGet200Response{}
	return &this
}

// NewGurusListGet200ResponseWithDefaults instantiates a new GurusListGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGurusListGet200ResponseWithDefaults() *GurusListGet200Response {
	this := GurusListGet200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GurusListGet200Response) GetData() []GurusListGet200ResponseDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []GurusListGet200ResponseDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GurusListGet200Response) GetDataOk() ([]GurusListGet200ResponseDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GurusListGet200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []GurusListGet200ResponseDataInner and assigns it to the Data field.
func (o *GurusListGet200Response) SetData(v []GurusListGet200ResponseDataInner) {
	o.Data = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *GurusListGet200Response) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GurusListGet200Response) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *GurusListGet200Response) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *GurusListGet200Response) SetPage(v int32) {
	o.Page = &v
}

// GetPerPage returns the PerPage field value if set, zero value otherwise.
func (o *GurusListGet200Response) GetPerPage() int32 {
	if o == nil || IsNil(o.PerPage) {
		var ret int32
		return ret
	}
	return *o.PerPage
}

// GetPerPageOk returns a tuple with the PerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GurusListGet200Response) GetPerPageOk() (*int32, bool) {
	if o == nil || IsNil(o.PerPage) {
		return nil, false
	}
	return o.PerPage, true
}

// HasPerPage returns a boolean if a field has been set.
func (o *GurusListGet200Response) HasPerPage() bool {
	if o != nil && !IsNil(o.PerPage) {
		return true
	}

	return false
}

// SetPerPage gets a reference to the given int32 and assigns it to the PerPage field.
func (o *GurusListGet200Response) SetPerPage(v int32) {
	o.PerPage = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GurusListGet200Response) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GurusListGet200Response) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GurusListGet200Response) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GurusListGet200Response) SetTotal(v int32) {
	o.Total = &v
}

func (o GurusListGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GurusListGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.PerPage) {
		toSerialize["per_page"] = o.PerPage
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableGurusListGet200Response struct {
	value *GurusListGet200Response
	isSet bool
}

func (v NullableGurusListGet200Response) Get() *GurusListGet200Response {
	return v.value
}

func (v *NullableGurusListGet200Response) Set(val *GurusListGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGurusListGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGurusListGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGurusListGet200Response(val *GurusListGet200Response) *NullableGurusListGet200Response {
	return &NullableGurusListGet200Response{value: val, isSet: true}
}

func (v NullableGurusListGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGurusListGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


