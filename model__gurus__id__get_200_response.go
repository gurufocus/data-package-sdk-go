/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GurusIdGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GurusIdGet200Response{}

// GurusIdGet200Response struct for GurusIdGet200Response
type GurusIdGet200Response struct {
	// Array of guru transactions
	Var13DG []GuruTransaction `json:"13DG,omitempty"`
	// Array of guru transactions
	Var13F []GuruTransaction `json:"13F,omitempty"`
}

// NewGurusIdGet200Response instantiates a new GurusIdGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGurusIdGet200Response() *GurusIdGet200Response {
	this := GurusIdGet200Response{}
	return &this
}

// NewGurusIdGet200ResponseWithDefaults instantiates a new GurusIdGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGurusIdGet200ResponseWithDefaults() *GurusIdGet200Response {
	this := GurusIdGet200Response{}
	return &this
}

// GetVar13DG returns the Var13DG field value if set, zero value otherwise.
func (o *GurusIdGet200Response) GetVar13DG() []GuruTransaction {
	if o == nil || IsNil(o.Var13DG) {
		var ret []GuruTransaction
		return ret
	}
	return o.Var13DG
}

// GetVar13DGOk returns a tuple with the Var13DG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GurusIdGet200Response) GetVar13DGOk() ([]GuruTransaction, bool) {
	if o == nil || IsNil(o.Var13DG) {
		return nil, false
	}
	return o.Var13DG, true
}

// HasVar13DG returns a boolean if a field has been set.
func (o *GurusIdGet200Response) HasVar13DG() bool {
	if o != nil && !IsNil(o.Var13DG) {
		return true
	}

	return false
}

// SetVar13DG gets a reference to the given []GuruTransaction and assigns it to the Var13DG field.
func (o *GurusIdGet200Response) SetVar13DG(v []GuruTransaction) {
	o.Var13DG = v
}

// GetVar13F returns the Var13F field value if set, zero value otherwise.
func (o *GurusIdGet200Response) GetVar13F() []GuruTransaction {
	if o == nil || IsNil(o.Var13F) {
		var ret []GuruTransaction
		return ret
	}
	return o.Var13F
}

// GetVar13FOk returns a tuple with the Var13F field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GurusIdGet200Response) GetVar13FOk() ([]GuruTransaction, bool) {
	if o == nil || IsNil(o.Var13F) {
		return nil, false
	}
	return o.Var13F, true
}

// HasVar13F returns a boolean if a field has been set.
func (o *GurusIdGet200Response) HasVar13F() bool {
	if o != nil && !IsNil(o.Var13F) {
		return true
	}

	return false
}

// SetVar13F gets a reference to the given []GuruTransaction and assigns it to the Var13F field.
func (o *GurusIdGet200Response) SetVar13F(v []GuruTransaction) {
	o.Var13F = v
}

func (o GurusIdGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GurusIdGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var13DG) {
		toSerialize["13DG"] = o.Var13DG
	}
	if !IsNil(o.Var13F) {
		toSerialize["13F"] = o.Var13F
	}
	return toSerialize, nil
}

type NullableGurusIdGet200Response struct {
	value *GurusIdGet200Response
	isSet bool
}

func (v NullableGurusIdGet200Response) Get() *GurusIdGet200Response {
	return v.value
}

func (v *NullableGurusIdGet200Response) Set(val *GurusIdGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGurusIdGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGurusIdGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGurusIdGet200Response(val *GurusIdGet200Response) *NullableGurusIdGet200Response {
	return &NullableGurusIdGet200Response{value: val, isSet: true}
}

func (v NullableGurusIdGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGurusIdGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


