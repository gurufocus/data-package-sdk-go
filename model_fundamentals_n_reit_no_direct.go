/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FundamentalsNREITNODIRECT type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FundamentalsNREITNODIRECT{}

// FundamentalsNREITNODIRECT struct for FundamentalsNREITNODIRECT
type FundamentalsNREITNODIRECT struct {
	BalanceSheet *FundamentalsNREITNODIRECTBalanceSheet `json:"balance_sheet,omitempty"`
	BasicInformation *FundamentalsNREITNODIRECTBasicInformation `json:"basic_information,omitempty"`
	CashflowStatement *FundamentalsNREITNODIRECTCashflowStatement `json:"cashflow_statement,omitempty"`
	IncomeStatement *FundamentalsNREITNODIRECTIncomeStatement `json:"income_statement,omitempty"`
}

// NewFundamentalsNREITNODIRECT instantiates a new FundamentalsNREITNODIRECT object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFundamentalsNREITNODIRECT() *FundamentalsNREITNODIRECT {
	this := FundamentalsNREITNODIRECT{}
	return &this
}

// NewFundamentalsNREITNODIRECTWithDefaults instantiates a new FundamentalsNREITNODIRECT object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFundamentalsNREITNODIRECTWithDefaults() *FundamentalsNREITNODIRECT {
	this := FundamentalsNREITNODIRECT{}
	return &this
}

// GetBalanceSheet returns the BalanceSheet field value if set, zero value otherwise.
func (o *FundamentalsNREITNODIRECT) GetBalanceSheet() FundamentalsNREITNODIRECTBalanceSheet {
	if o == nil || IsNil(o.BalanceSheet) {
		var ret FundamentalsNREITNODIRECTBalanceSheet
		return ret
	}
	return *o.BalanceSheet
}

// GetBalanceSheetOk returns a tuple with the BalanceSheet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsNREITNODIRECT) GetBalanceSheetOk() (*FundamentalsNREITNODIRECTBalanceSheet, bool) {
	if o == nil || IsNil(o.BalanceSheet) {
		return nil, false
	}
	return o.BalanceSheet, true
}

// HasBalanceSheet returns a boolean if a field has been set.
func (o *FundamentalsNREITNODIRECT) HasBalanceSheet() bool {
	if o != nil && !IsNil(o.BalanceSheet) {
		return true
	}

	return false
}

// SetBalanceSheet gets a reference to the given FundamentalsNREITNODIRECTBalanceSheet and assigns it to the BalanceSheet field.
func (o *FundamentalsNREITNODIRECT) SetBalanceSheet(v FundamentalsNREITNODIRECTBalanceSheet) {
	o.BalanceSheet = &v
}

// GetBasicInformation returns the BasicInformation field value if set, zero value otherwise.
func (o *FundamentalsNREITNODIRECT) GetBasicInformation() FundamentalsNREITNODIRECTBasicInformation {
	if o == nil || IsNil(o.BasicInformation) {
		var ret FundamentalsNREITNODIRECTBasicInformation
		return ret
	}
	return *o.BasicInformation
}

// GetBasicInformationOk returns a tuple with the BasicInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsNREITNODIRECT) GetBasicInformationOk() (*FundamentalsNREITNODIRECTBasicInformation, bool) {
	if o == nil || IsNil(o.BasicInformation) {
		return nil, false
	}
	return o.BasicInformation, true
}

// HasBasicInformation returns a boolean if a field has been set.
func (o *FundamentalsNREITNODIRECT) HasBasicInformation() bool {
	if o != nil && !IsNil(o.BasicInformation) {
		return true
	}

	return false
}

// SetBasicInformation gets a reference to the given FundamentalsNREITNODIRECTBasicInformation and assigns it to the BasicInformation field.
func (o *FundamentalsNREITNODIRECT) SetBasicInformation(v FundamentalsNREITNODIRECTBasicInformation) {
	o.BasicInformation = &v
}

// GetCashflowStatement returns the CashflowStatement field value if set, zero value otherwise.
func (o *FundamentalsNREITNODIRECT) GetCashflowStatement() FundamentalsNREITNODIRECTCashflowStatement {
	if o == nil || IsNil(o.CashflowStatement) {
		var ret FundamentalsNREITNODIRECTCashflowStatement
		return ret
	}
	return *o.CashflowStatement
}

// GetCashflowStatementOk returns a tuple with the CashflowStatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsNREITNODIRECT) GetCashflowStatementOk() (*FundamentalsNREITNODIRECTCashflowStatement, bool) {
	if o == nil || IsNil(o.CashflowStatement) {
		return nil, false
	}
	return o.CashflowStatement, true
}

// HasCashflowStatement returns a boolean if a field has been set.
func (o *FundamentalsNREITNODIRECT) HasCashflowStatement() bool {
	if o != nil && !IsNil(o.CashflowStatement) {
		return true
	}

	return false
}

// SetCashflowStatement gets a reference to the given FundamentalsNREITNODIRECTCashflowStatement and assigns it to the CashflowStatement field.
func (o *FundamentalsNREITNODIRECT) SetCashflowStatement(v FundamentalsNREITNODIRECTCashflowStatement) {
	o.CashflowStatement = &v
}

// GetIncomeStatement returns the IncomeStatement field value if set, zero value otherwise.
func (o *FundamentalsNREITNODIRECT) GetIncomeStatement() FundamentalsNREITNODIRECTIncomeStatement {
	if o == nil || IsNil(o.IncomeStatement) {
		var ret FundamentalsNREITNODIRECTIncomeStatement
		return ret
	}
	return *o.IncomeStatement
}

// GetIncomeStatementOk returns a tuple with the IncomeStatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsNREITNODIRECT) GetIncomeStatementOk() (*FundamentalsNREITNODIRECTIncomeStatement, bool) {
	if o == nil || IsNil(o.IncomeStatement) {
		return nil, false
	}
	return o.IncomeStatement, true
}

// HasIncomeStatement returns a boolean if a field has been set.
func (o *FundamentalsNREITNODIRECT) HasIncomeStatement() bool {
	if o != nil && !IsNil(o.IncomeStatement) {
		return true
	}

	return false
}

// SetIncomeStatement gets a reference to the given FundamentalsNREITNODIRECTIncomeStatement and assigns it to the IncomeStatement field.
func (o *FundamentalsNREITNODIRECT) SetIncomeStatement(v FundamentalsNREITNODIRECTIncomeStatement) {
	o.IncomeStatement = &v
}

func (o FundamentalsNREITNODIRECT) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FundamentalsNREITNODIRECT) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BalanceSheet) {
		toSerialize["balance_sheet"] = o.BalanceSheet
	}
	if !IsNil(o.BasicInformation) {
		toSerialize["basic_information"] = o.BasicInformation
	}
	if !IsNil(o.CashflowStatement) {
		toSerialize["cashflow_statement"] = o.CashflowStatement
	}
	if !IsNil(o.IncomeStatement) {
		toSerialize["income_statement"] = o.IncomeStatement
	}
	return toSerialize, nil
}

type NullableFundamentalsNREITNODIRECT struct {
	value *FundamentalsNREITNODIRECT
	isSet bool
}

func (v NullableFundamentalsNREITNODIRECT) Get() *FundamentalsNREITNODIRECT {
	return v.value
}

func (v *NullableFundamentalsNREITNODIRECT) Set(val *FundamentalsNREITNODIRECT) {
	v.value = val
	v.isSet = true
}

func (v NullableFundamentalsNREITNODIRECT) IsSet() bool {
	return v.isSet
}

func (v *NullableFundamentalsNREITNODIRECT) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFundamentalsNREITNODIRECT(val *FundamentalsNREITNODIRECT) *NullableFundamentalsNREITNODIRECT {
	return &NullableFundamentalsNREITNODIRECT{value: val, isSet: true}
}

func (v NullableFundamentalsNREITNODIRECT) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFundamentalsNREITNODIRECT) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


