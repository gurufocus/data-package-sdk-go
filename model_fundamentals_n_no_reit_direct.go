/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FundamentalsNNOREITDIRECT type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FundamentalsNNOREITDIRECT{}

// FundamentalsNNOREITDIRECT struct for FundamentalsNNOREITDIRECT
type FundamentalsNNOREITDIRECT struct {
	BalanceSheet *FundamentalsNNOREITDIRECTBalanceSheet `json:"balance_sheet,omitempty"`
	BasicInformation *FundamentalsNNOREITDIRECTBasicInformation `json:"basic_information,omitempty"`
	CashflowStatement *FundamentalsNNOREITDIRECTCashflowStatement `json:"cashflow_statement,omitempty"`
	IncomeStatement *FundamentalsNNOREITDIRECTIncomeStatement `json:"income_statement,omitempty"`
}

// NewFundamentalsNNOREITDIRECT instantiates a new FundamentalsNNOREITDIRECT object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFundamentalsNNOREITDIRECT() *FundamentalsNNOREITDIRECT {
	this := FundamentalsNNOREITDIRECT{}
	return &this
}

// NewFundamentalsNNOREITDIRECTWithDefaults instantiates a new FundamentalsNNOREITDIRECT object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFundamentalsNNOREITDIRECTWithDefaults() *FundamentalsNNOREITDIRECT {
	this := FundamentalsNNOREITDIRECT{}
	return &this
}

// GetBalanceSheet returns the BalanceSheet field value if set, zero value otherwise.
func (o *FundamentalsNNOREITDIRECT) GetBalanceSheet() FundamentalsNNOREITDIRECTBalanceSheet {
	if o == nil || IsNil(o.BalanceSheet) {
		var ret FundamentalsNNOREITDIRECTBalanceSheet
		return ret
	}
	return *o.BalanceSheet
}

// GetBalanceSheetOk returns a tuple with the BalanceSheet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsNNOREITDIRECT) GetBalanceSheetOk() (*FundamentalsNNOREITDIRECTBalanceSheet, bool) {
	if o == nil || IsNil(o.BalanceSheet) {
		return nil, false
	}
	return o.BalanceSheet, true
}

// HasBalanceSheet returns a boolean if a field has been set.
func (o *FundamentalsNNOREITDIRECT) HasBalanceSheet() bool {
	if o != nil && !IsNil(o.BalanceSheet) {
		return true
	}

	return false
}

// SetBalanceSheet gets a reference to the given FundamentalsNNOREITDIRECTBalanceSheet and assigns it to the BalanceSheet field.
func (o *FundamentalsNNOREITDIRECT) SetBalanceSheet(v FundamentalsNNOREITDIRECTBalanceSheet) {
	o.BalanceSheet = &v
}

// GetBasicInformation returns the BasicInformation field value if set, zero value otherwise.
func (o *FundamentalsNNOREITDIRECT) GetBasicInformation() FundamentalsNNOREITDIRECTBasicInformation {
	if o == nil || IsNil(o.BasicInformation) {
		var ret FundamentalsNNOREITDIRECTBasicInformation
		return ret
	}
	return *o.BasicInformation
}

// GetBasicInformationOk returns a tuple with the BasicInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsNNOREITDIRECT) GetBasicInformationOk() (*FundamentalsNNOREITDIRECTBasicInformation, bool) {
	if o == nil || IsNil(o.BasicInformation) {
		return nil, false
	}
	return o.BasicInformation, true
}

// HasBasicInformation returns a boolean if a field has been set.
func (o *FundamentalsNNOREITDIRECT) HasBasicInformation() bool {
	if o != nil && !IsNil(o.BasicInformation) {
		return true
	}

	return false
}

// SetBasicInformation gets a reference to the given FundamentalsNNOREITDIRECTBasicInformation and assigns it to the BasicInformation field.
func (o *FundamentalsNNOREITDIRECT) SetBasicInformation(v FundamentalsNNOREITDIRECTBasicInformation) {
	o.BasicInformation = &v
}

// GetCashflowStatement returns the CashflowStatement field value if set, zero value otherwise.
func (o *FundamentalsNNOREITDIRECT) GetCashflowStatement() FundamentalsNNOREITDIRECTCashflowStatement {
	if o == nil || IsNil(o.CashflowStatement) {
		var ret FundamentalsNNOREITDIRECTCashflowStatement
		return ret
	}
	return *o.CashflowStatement
}

// GetCashflowStatementOk returns a tuple with the CashflowStatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsNNOREITDIRECT) GetCashflowStatementOk() (*FundamentalsNNOREITDIRECTCashflowStatement, bool) {
	if o == nil || IsNil(o.CashflowStatement) {
		return nil, false
	}
	return o.CashflowStatement, true
}

// HasCashflowStatement returns a boolean if a field has been set.
func (o *FundamentalsNNOREITDIRECT) HasCashflowStatement() bool {
	if o != nil && !IsNil(o.CashflowStatement) {
		return true
	}

	return false
}

// SetCashflowStatement gets a reference to the given FundamentalsNNOREITDIRECTCashflowStatement and assigns it to the CashflowStatement field.
func (o *FundamentalsNNOREITDIRECT) SetCashflowStatement(v FundamentalsNNOREITDIRECTCashflowStatement) {
	o.CashflowStatement = &v
}

// GetIncomeStatement returns the IncomeStatement field value if set, zero value otherwise.
func (o *FundamentalsNNOREITDIRECT) GetIncomeStatement() FundamentalsNNOREITDIRECTIncomeStatement {
	if o == nil || IsNil(o.IncomeStatement) {
		var ret FundamentalsNNOREITDIRECTIncomeStatement
		return ret
	}
	return *o.IncomeStatement
}

// GetIncomeStatementOk returns a tuple with the IncomeStatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsNNOREITDIRECT) GetIncomeStatementOk() (*FundamentalsNNOREITDIRECTIncomeStatement, bool) {
	if o == nil || IsNil(o.IncomeStatement) {
		return nil, false
	}
	return o.IncomeStatement, true
}

// HasIncomeStatement returns a boolean if a field has been set.
func (o *FundamentalsNNOREITDIRECT) HasIncomeStatement() bool {
	if o != nil && !IsNil(o.IncomeStatement) {
		return true
	}

	return false
}

// SetIncomeStatement gets a reference to the given FundamentalsNNOREITDIRECTIncomeStatement and assigns it to the IncomeStatement field.
func (o *FundamentalsNNOREITDIRECT) SetIncomeStatement(v FundamentalsNNOREITDIRECTIncomeStatement) {
	o.IncomeStatement = &v
}

func (o FundamentalsNNOREITDIRECT) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FundamentalsNNOREITDIRECT) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BalanceSheet) {
		toSerialize["balance_sheet"] = o.BalanceSheet
	}
	if !IsNil(o.BasicInformation) {
		toSerialize["basic_information"] = o.BasicInformation
	}
	if !IsNil(o.CashflowStatement) {
		toSerialize["cashflow_statement"] = o.CashflowStatement
	}
	if !IsNil(o.IncomeStatement) {
		toSerialize["income_statement"] = o.IncomeStatement
	}
	return toSerialize, nil
}

type NullableFundamentalsNNOREITDIRECT struct {
	value *FundamentalsNNOREITDIRECT
	isSet bool
}

func (v NullableFundamentalsNNOREITDIRECT) Get() *FundamentalsNNOREITDIRECT {
	return v.value
}

func (v *NullableFundamentalsNNOREITDIRECT) Set(val *FundamentalsNNOREITDIRECT) {
	v.value = val
	v.isSet = true
}

func (v NullableFundamentalsNNOREITDIRECT) IsSet() bool {
	return v.isSet
}

func (v *NullableFundamentalsNNOREITDIRECT) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFundamentalsNNOREITDIRECT(val *FundamentalsNNOREITDIRECT) *NullableFundamentalsNNOREITDIRECT {
	return &NullableFundamentalsNNOREITDIRECT{value: val, isSet: true}
}

func (v NullableFundamentalsNNOREITDIRECT) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFundamentalsNNOREITDIRECT) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


