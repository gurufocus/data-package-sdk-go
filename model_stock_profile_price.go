/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StockProfilePrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StockProfilePrice{}

// StockProfilePrice struct for StockProfilePrice
type StockProfilePrice struct {
	// Beta measures the volatility or systematic risk of a security in comparison to the market. It is calculated using the latest three years of monthly returns of the stock and the benchmark.<br>- A beta of 1 indicates that the stock's price will move with the market. <br>- A beta of less than 1 indicates that the stock will be less volatile than the market. <br>- A beta greater than 1 indicates that the stock's price will be more volatile than the market.
	Beta *float32 `json:"beta,omitempty"`
	// A death cross (EMA 20 vs 200) occurs when a stock's 20-day exponential moving average crosses from above to below its 200-day exponential moving average at some point in the past week.
	DeathCrossEma20Vs200 *string `json:"death_cross_ema_20_vs_200,omitempty"`
	// A death cross (EMA 20 vs 50) occurs when a stock's 20-day exponential moving average crosses from above to below its 50-day exponential moving average at some point in the past week.
	DeathCrossEma20Vs50 *string `json:"death_cross_ema_20_vs_50,omitempty"`
	// A death cross (EMA 50 vs 200) occurs when a stock's 50-day exponential moving average crosses from above to below its 200-day exponential moving average at some point in the past week.
	DeathCrossEma50Vs200 *string `json:"death_cross_ema_50_vs_200,omitempty"`
	// A death cross occurs when a stock's 20-day moving average crosses from above to below its 200-day moving average at some point in the past week.
	DeathCrossSma20Vs200 *string `json:"death_cross_sma_20_vs_200,omitempty"`
	// A death cross occurs when a stock's 20-day moving average crosses from above to below its 50-day moving average at some point in the past week.
	DeathCrossSma20Vs50 *string `json:"death_cross_sma_20_vs_50,omitempty"`
	// A death cross occurs when a stock's 50-day moving average crosses from above to below its 200-day moving average at some point in the past week.
	DeathCrossSma50Vs200 *string `json:"death_cross_sma_50_vs_200,omitempty"`
	DisplayTimestamp *string `json:"display_timestamp,omitempty"`
	// The exponential moving average, i.e., the exponential smoothing average share price, over the past 20 days.
	Ema20 *float32 `json:"ema_20,omitempty"`
	// The exponential moving average, i.e., the exponential smoothing average share price, over the past 200 days.
	Ema200 *float32 `json:"ema_200,omitempty"`
	// The exponential moving average, i.e., the exponential smoothing average share price, over the past 50 days.
	Ema50 *float32 `json:"ema_50,omitempty"`
	// The actual number of company shares available for trading
	Float *float32 `json:"float,omitempty"`
	// A golden cross (EMA 20 vs 200) occurs when a stock's 20-day exponential moving average crosses above its 200-day exponential moving average at some point in the past week.
	GoldenCrossEma20Vs200 *string `json:"golden_cross_ema_20_vs_200,omitempty"`
	// A golden cross (EMA 20 vs 50) occurs when a stock's 20-day exponential moving average crosses above its 50-day exponential moving average at some point in the past week.
	GoldenCrossEma20Vs50 *string `json:"golden_cross_ema_20_vs_50,omitempty"`
	// A golden cross (EMA 50 vs 200) occurs when a stock's 50-day exponential moving average crosses above its 200-day exponential moving average at some point in the past week.
	GoldenCrossEma50Vs200 *string `json:"golden_cross_ema_50_vs_200,omitempty"`
	// A golden cross occurs when a stock's 20-day moving average crosses above its 200-day moving average at some point in the past week.
	GoldenCrossSma20Vs200 *string `json:"golden_cross_sma_20_vs_200,omitempty"`
	// A golden cross occurs when a stock's 20-day moving average crosses above its 50-day moving average at some point in the past week.
	GoldenCrossSma20Vs50 *string `json:"golden_cross_sma_20_vs_50,omitempty"`
	// A golden cross occurs when a stock's 50-day moving average crosses above its 200-day moving average at some point in the past week.
	GoldenCrossSma50Vs200 *string `json:"golden_cross_sma_50_vs_200,omitempty"`
	// The company's intraday high share price
	High *float32 `json:"high,omitempty"`
	// The company's intraday low share price
	Low *float32 `json:"low,omitempty"`
	// MACD Crossed Below Signal indicates that the macd line crossed below the signal line at some point in the past week.
	MacdDeathCrossSignal *string `json:"macd_death_cross_signal,omitempty"`
	// MACD Crossed Above Signal indicates that the macd line crossed above the signal line at some point in the past week.
	MacdGoldenCrossSignal *string `json:"macd_golden_cross_signal,omitempty"`
	// An MACD Line is created by subtracting the 26-period EMA from the 12-period EMA. 
	MacdLine *float32 `json:"macd_line,omitempty"`
	// An MACD Signal Line is a nine-day EMA of the MACD line.
	MacdSignalLine *float32 `json:"macd_signal_line,omitempty"`
	// The company's share price at market open
	Open *float32 `json:"open,omitempty"`
	// The percent change of a company's share price based on the previous close.
	PPctChange *float32 `json:"p_pct_change,omitempty"`
	// The annulized total return of the stock over the past ten years, relative to the S&P 500.
	PchangeSP10y *float32 `json:"pchangeSP_10y,omitempty"`
	// The total return of the stock over the past three months, relative to the S&P 500
	PchangeSP12w *float32 `json:"pchangeSP_12w,omitempty"`
	// The annulized total return of the stock over the past 15 years, relative to the S&P 500.
	PchangeSP15y *float32 `json:"pchangeSP_15y,omitempty"`
	// The total return of the stock over the past week, relative to the S&P 500
	PchangeSP1w *float32 `json:"pchangeSP_1w,omitempty"`
	// The annulized total return of the stock over the past 20 years, relative to the S&P 500.
	PchangeSP20y *float32 `json:"pchangeSP_20y,omitempty"`
	// The total return of the stock over the past six months, relative to the S&P 500
	PchangeSP24w *float32 `json:"pchangeSP_24w,omitempty"`
	// The annulized total return of the stock over the past three years, relative to the S&P 500.
	PchangeSP3y *float32 `json:"pchangeSP_3y,omitempty"`
	// The total return of the stock over the past month, relative to the S&P 500
	PchangeSP4w *float32 `json:"pchangeSP_4w,omitempty"`
	// The total return of the stock over the past 12 months, relative to the S&P 500
	PchangeSP52w *float32 `json:"pchangeSP_52w,omitempty"`
	// The annulized total return of the stock over the past five years, relative to the S&P 500.
	PchangeSP5y *float32 `json:"pchangeSP_5y,omitempty"`
	// The total return of the stock year to date, relative to the S&P 500
	PchangeSPYtd *float32 `json:"pchangeSP_ytd,omitempty"`
	// The total return of the stock on a 10-year, annualized basis
	Pchange10y *float32 `json:"pchange_10y,omitempty"`
	// The total return of the stock from 12-month ago to 1-month ago.
	Pchange121m *float32 `json:"pchange_12_1m,omitempty"`
	// The total return of the stock over the past three months
	Pchange12w *float32 `json:"pchange_12w,omitempty"`
	// The annulized total return of the stock over the past 15 years.
	Pchange15y *float32 `json:"pchange_15y,omitempty"`
	// The total return of the stock over the past week
	Pchange1w *float32 `json:"pchange_1w,omitempty"`
	// The annulized total return of the stock over the past 20 years.
	Pchange20y *float32 `json:"pchange_20y,omitempty"`
	// The total return of the stock over the past six months
	Pchange24w *float32 `json:"pchange_24w,omitempty"`
	// The total return of the stock from 3-month ago to 1-month ago.
	Pchange31m *float32 `json:"pchange_3_1m,omitempty"`
	// The total return of the stock on a three-year, annualized basis
	Pchange3y *float32 `json:"pchange_3y,omitempty"`
	// The total return of the stock over the past month
	Pchange4w *float32 `json:"pchange_4w,omitempty"`
	// The total return of the stock over the past 12 months
	Pchange52w *float32 `json:"pchange_52w,omitempty"`
	// The total return of the stock on a five-year, annualized basis
	Pchange5y *float32 `json:"pchange_5y,omitempty"`
	// The total return of the stock from 6-month ago to 1-month ago.
	Pchange61m *float32 `json:"pchange_6_1m,omitempty"`
	// The total return of the stock year to date
	PchangeYtd *float32 `json:"pchange_ytd,omitempty"`
	// The current share price of the stock
	Price *float32 `json:"price,omitempty"`
	// The highest share price over the past 10 years
	Price10yhigh *float32 `json:"price10yhigh,omitempty"`
	// The lowest share price over the past 10 years
	Price10ylow *float32 `json:"price10ylow,omitempty"`
	// The highest share price over the past three years
	Price3yhigh *float32 `json:"price3yhigh,omitempty"`
	// The lowest share price over the past three years
	Price3ylow *float32 `json:"price3ylow,omitempty"`
	// The highest share price over the past 52 weeks
	Price52whigh *float32 `json:"price52whigh,omitempty"`
	// The lowest share price over the past 52 weeks
	Price52wlow *float32 `json:"price52wlow,omitempty"`
	// The highest share price over the past five years
	Price5yhigh *float32 `json:"price5yhigh,omitempty"`
	// The lowest share price over the past five years
	Price5ylow *float32 `json:"price5ylow,omitempty"`
	PriceStdv20 *float32 `json:"price_stdv_20,omitempty"`
	PriceStdv200 *float32 `json:"price_stdv_200,omitempty"`
	PriceStdv50 *float32 `json:"price_stdv_50,omitempty"`
	Pricehishigh *float32 `json:"pricehishigh,omitempty"`
	Pricehislow *float32 `json:"pricehislow,omitempty"`
	// The six-month price index: Current Share Price divided by Share Price Six Months Ago
	Priceindex6m *float32 `json:"priceindex_6m,omitempty"`
	// The relative strength index, i.e., a value that closely captures the average gain on up days divided by the average loss non down days, over the past 14 days
	Rsi14 *float32 `json:"rsi_14,omitempty"`
	Rsi30 *float32 `json:"rsi_30,omitempty"`
	Rsi5 *float32 `json:"rsi_5,omitempty"`
	Rsi9 *float32 `json:"rsi_9,omitempty"`
	// The 1-Year Sharpe Ratio measures the risk-adjusted return of an investment over the past year. It is calculated as the annualized result of the average monthly excess return divided by its standard deviation over the past year. The monthly excess return is the monthly investment return minus the monthly risk-free rate (typically the 10-year Treasury Constant Maturity Rate). If the risk-free rate for a specific region is not available, U.S. data is used by default.
	SharpeRatio *float32 `json:"sharpe_ratio,omitempty"`
	// The 10-Year Sharpe Ratio measures the risk-adjusted return of an investment over the past ten years. It is calculated as the annualized result of the average monthly excess return divided by its standard deviation over the past ten years. The monthly excess return is the monthly investment return minus the monthly risk-free rate (typically the 10-year Treasury Constant Maturity Rate). If the risk-free rate for a specific region is not available, U.S. data is used by default.
	SharpeRatio10y *float32 `json:"sharpe_ratio_10y,omitempty"`
	// The 3-Year Sharpe Ratio measures the risk-adjusted return of an investment over the past three years. It is calculated as the annualized result of the average monthly excess return divided by its standard deviation over the past three years. The monthly excess return is the monthly investment return minus the monthly risk-free rate (typically the 10-year Treasury Constant Maturity Rate). If the risk-free rate for a specific region is not available, U.S. data is used by default.
	SharpeRatio3y *float32 `json:"sharpe_ratio_3y,omitempty"`
	// The 5-Year Sharpe Ratio measures the risk-adjusted return of an investment over the past five years. It is calculated as the annualized result of the average monthly excess return divided by its standard deviation over the past five years. The monthly excess return is the monthly investment return minus the monthly risk-free rate (typically the 10-year Treasury Constant Maturity Rate). If the risk-free rate for a specific region is not available, U.S. data is used by default.
	SharpeRatio5y *float32 `json:"sharpe_ratio_5y,omitempty"`
	// The simple moving average, i.e., the arithmetic average share price, over the past 20 days.
	Sma20 *float32 `json:"sma_20,omitempty"`
	// The simple moving average, i.e., the arithmetic average share price, over the past 200 days.
	Sma200 *float32 `json:"sma_200,omitempty"`
	// The simple moving average, i.e., the arithmetic average share price, over the past 50 days.
	Sma50 *float32 `json:"sma_50,omitempty"`
	// The 10-Year Sortino Ratio measures the risk-adjusted return of an investment over the past ten years, focusing specifically on downside risk rather than total risk. It is calculated as the annualized result of the average monthly excess return divided by its downside deviation (accounts for negative excess return) over the past ten years. The monthly excess return is the monthly investment return minus the monthly risk-free rate (typically the 10-year Treasury Constant Maturity Rate). If the risk-free rate for a specific region is not available, U.S. data is used by default.
	SortinoRatio10y *float32 `json:"sortino_ratio_10y,omitempty"`
	// The 1-Year Sortino Ratio measures the risk-adjusted return of an investment over the past year, focusing specifically on downside risk rather than total risk. It is calculated as the annualized result of the average monthly excess return divided by its downside deviation (accounts for negative excess return) over the past year. The monthly excess return is the monthly investment return minus the monthly risk-free rate (typically the 10-year Treasury Constant Maturity Rate). If the risk-free rate for a specific region is not available, U.S. data is used by default.
	SortinoRatio1y *float32 `json:"sortino_ratio_1y,omitempty"`
	// The 3-Year Sortino Ratio measures the risk-adjusted return of an investment over the past three years, focusing specifically on downside risk rather than total risk. It is calculated as the annualized result of the average monthly excess return divided by its downside deviation (accounts for negative excess return) over the past three years. The monthly excess return is the monthly investment return minus the monthly risk-free rate (typically the 10-year Treasury Constant Maturity Rate). If the risk-free rate for a specific region is not available, U.S. data is used by default.
	SortinoRatio3y *float32 `json:"sortino_ratio_3y,omitempty"`
	// The 5-Year Sortino Ratio measures the risk-adjusted return of an investment over the past five years, focusing specifically on downside risk rather than total risk. It is calculated as the annualized result of the average monthly excess return divided by its downside deviation (accounts for negative excess return) over the past five years. The monthly excess return is the monthly investment return minus the monthly risk-free rate (typically the 10-year Treasury Constant Maturity Rate). If the risk-free rate for a specific region is not available, U.S. data is used by default.
	SortinoRatio5y *float32 `json:"sortino_ratio_5y,omitempty"`
	// The annualized volatility of the stock over the past year
	Volatility *float32 `json:"volatility,omitempty"`
	Volatility10y *float32 `json:"volatility_10y,omitempty"`
	// The stock's daily volatility over the past month.
	Volatility1m *float32 `json:"volatility_1m,omitempty"`
	// The stock's daily volatility over the past week.
	Volatility1w *float32 `json:"volatility_1w,omitempty"`
	Volatility3y *float32 `json:"volatility_3y,omitempty"`
	Volatility5y *float32 `json:"volatility_5y,omitempty"`
	// The average daily trading volume of a security over the last two months.
	Volume *float32 `json:"volume,omitempty"`
	// The average daily trading volume of a security over the last three months.
	Volume3m *float32 `json:"volume_3m,omitempty"`
	// The sum of average daily trading volume for all securities of the company over the last two months.
	VolumeTotal *float32 `json:"volume_total,omitempty"`
	// The sum of average daily trading volume for all securities of the company over the last three months.
	VolumeTotal3m *float32 `json:"volume_total_3m,omitempty"`
	// The daily trading volume of a security.
	VolumnDay *float32 `json:"volumn_day,omitempty"`
	// The sum of daily trading volume for all securities of the company.
	VolumnDayTotal *float32 `json:"volumn_day_total,omitempty"`
}

// NewStockProfilePrice instantiates a new StockProfilePrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStockProfilePrice() *StockProfilePrice {
	this := StockProfilePrice{}
	return &this
}

// NewStockProfilePriceWithDefaults instantiates a new StockProfilePrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStockProfilePriceWithDefaults() *StockProfilePrice {
	this := StockProfilePrice{}
	return &this
}

// GetBeta returns the Beta field value if set, zero value otherwise.
func (o *StockProfilePrice) GetBeta() float32 {
	if o == nil || IsNil(o.Beta) {
		var ret float32
		return ret
	}
	return *o.Beta
}

// GetBetaOk returns a tuple with the Beta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetBetaOk() (*float32, bool) {
	if o == nil || IsNil(o.Beta) {
		return nil, false
	}
	return o.Beta, true
}

// HasBeta returns a boolean if a field has been set.
func (o *StockProfilePrice) HasBeta() bool {
	if o != nil && !IsNil(o.Beta) {
		return true
	}

	return false
}

// SetBeta gets a reference to the given float32 and assigns it to the Beta field.
func (o *StockProfilePrice) SetBeta(v float32) {
	o.Beta = &v
}

// GetDeathCrossEma20Vs200 returns the DeathCrossEma20Vs200 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetDeathCrossEma20Vs200() string {
	if o == nil || IsNil(o.DeathCrossEma20Vs200) {
		var ret string
		return ret
	}
	return *o.DeathCrossEma20Vs200
}

// GetDeathCrossEma20Vs200Ok returns a tuple with the DeathCrossEma20Vs200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetDeathCrossEma20Vs200Ok() (*string, bool) {
	if o == nil || IsNil(o.DeathCrossEma20Vs200) {
		return nil, false
	}
	return o.DeathCrossEma20Vs200, true
}

// HasDeathCrossEma20Vs200 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasDeathCrossEma20Vs200() bool {
	if o != nil && !IsNil(o.DeathCrossEma20Vs200) {
		return true
	}

	return false
}

// SetDeathCrossEma20Vs200 gets a reference to the given string and assigns it to the DeathCrossEma20Vs200 field.
func (o *StockProfilePrice) SetDeathCrossEma20Vs200(v string) {
	o.DeathCrossEma20Vs200 = &v
}

// GetDeathCrossEma20Vs50 returns the DeathCrossEma20Vs50 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetDeathCrossEma20Vs50() string {
	if o == nil || IsNil(o.DeathCrossEma20Vs50) {
		var ret string
		return ret
	}
	return *o.DeathCrossEma20Vs50
}

// GetDeathCrossEma20Vs50Ok returns a tuple with the DeathCrossEma20Vs50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetDeathCrossEma20Vs50Ok() (*string, bool) {
	if o == nil || IsNil(o.DeathCrossEma20Vs50) {
		return nil, false
	}
	return o.DeathCrossEma20Vs50, true
}

// HasDeathCrossEma20Vs50 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasDeathCrossEma20Vs50() bool {
	if o != nil && !IsNil(o.DeathCrossEma20Vs50) {
		return true
	}

	return false
}

// SetDeathCrossEma20Vs50 gets a reference to the given string and assigns it to the DeathCrossEma20Vs50 field.
func (o *StockProfilePrice) SetDeathCrossEma20Vs50(v string) {
	o.DeathCrossEma20Vs50 = &v
}

// GetDeathCrossEma50Vs200 returns the DeathCrossEma50Vs200 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetDeathCrossEma50Vs200() string {
	if o == nil || IsNil(o.DeathCrossEma50Vs200) {
		var ret string
		return ret
	}
	return *o.DeathCrossEma50Vs200
}

// GetDeathCrossEma50Vs200Ok returns a tuple with the DeathCrossEma50Vs200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetDeathCrossEma50Vs200Ok() (*string, bool) {
	if o == nil || IsNil(o.DeathCrossEma50Vs200) {
		return nil, false
	}
	return o.DeathCrossEma50Vs200, true
}

// HasDeathCrossEma50Vs200 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasDeathCrossEma50Vs200() bool {
	if o != nil && !IsNil(o.DeathCrossEma50Vs200) {
		return true
	}

	return false
}

// SetDeathCrossEma50Vs200 gets a reference to the given string and assigns it to the DeathCrossEma50Vs200 field.
func (o *StockProfilePrice) SetDeathCrossEma50Vs200(v string) {
	o.DeathCrossEma50Vs200 = &v
}

// GetDeathCrossSma20Vs200 returns the DeathCrossSma20Vs200 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetDeathCrossSma20Vs200() string {
	if o == nil || IsNil(o.DeathCrossSma20Vs200) {
		var ret string
		return ret
	}
	return *o.DeathCrossSma20Vs200
}

// GetDeathCrossSma20Vs200Ok returns a tuple with the DeathCrossSma20Vs200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetDeathCrossSma20Vs200Ok() (*string, bool) {
	if o == nil || IsNil(o.DeathCrossSma20Vs200) {
		return nil, false
	}
	return o.DeathCrossSma20Vs200, true
}

// HasDeathCrossSma20Vs200 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasDeathCrossSma20Vs200() bool {
	if o != nil && !IsNil(o.DeathCrossSma20Vs200) {
		return true
	}

	return false
}

// SetDeathCrossSma20Vs200 gets a reference to the given string and assigns it to the DeathCrossSma20Vs200 field.
func (o *StockProfilePrice) SetDeathCrossSma20Vs200(v string) {
	o.DeathCrossSma20Vs200 = &v
}

// GetDeathCrossSma20Vs50 returns the DeathCrossSma20Vs50 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetDeathCrossSma20Vs50() string {
	if o == nil || IsNil(o.DeathCrossSma20Vs50) {
		var ret string
		return ret
	}
	return *o.DeathCrossSma20Vs50
}

// GetDeathCrossSma20Vs50Ok returns a tuple with the DeathCrossSma20Vs50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetDeathCrossSma20Vs50Ok() (*string, bool) {
	if o == nil || IsNil(o.DeathCrossSma20Vs50) {
		return nil, false
	}
	return o.DeathCrossSma20Vs50, true
}

// HasDeathCrossSma20Vs50 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasDeathCrossSma20Vs50() bool {
	if o != nil && !IsNil(o.DeathCrossSma20Vs50) {
		return true
	}

	return false
}

// SetDeathCrossSma20Vs50 gets a reference to the given string and assigns it to the DeathCrossSma20Vs50 field.
func (o *StockProfilePrice) SetDeathCrossSma20Vs50(v string) {
	o.DeathCrossSma20Vs50 = &v
}

// GetDeathCrossSma50Vs200 returns the DeathCrossSma50Vs200 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetDeathCrossSma50Vs200() string {
	if o == nil || IsNil(o.DeathCrossSma50Vs200) {
		var ret string
		return ret
	}
	return *o.DeathCrossSma50Vs200
}

// GetDeathCrossSma50Vs200Ok returns a tuple with the DeathCrossSma50Vs200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetDeathCrossSma50Vs200Ok() (*string, bool) {
	if o == nil || IsNil(o.DeathCrossSma50Vs200) {
		return nil, false
	}
	return o.DeathCrossSma50Vs200, true
}

// HasDeathCrossSma50Vs200 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasDeathCrossSma50Vs200() bool {
	if o != nil && !IsNil(o.DeathCrossSma50Vs200) {
		return true
	}

	return false
}

// SetDeathCrossSma50Vs200 gets a reference to the given string and assigns it to the DeathCrossSma50Vs200 field.
func (o *StockProfilePrice) SetDeathCrossSma50Vs200(v string) {
	o.DeathCrossSma50Vs200 = &v
}

// GetDisplayTimestamp returns the DisplayTimestamp field value if set, zero value otherwise.
func (o *StockProfilePrice) GetDisplayTimestamp() string {
	if o == nil || IsNil(o.DisplayTimestamp) {
		var ret string
		return ret
	}
	return *o.DisplayTimestamp
}

// GetDisplayTimestampOk returns a tuple with the DisplayTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetDisplayTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayTimestamp) {
		return nil, false
	}
	return o.DisplayTimestamp, true
}

// HasDisplayTimestamp returns a boolean if a field has been set.
func (o *StockProfilePrice) HasDisplayTimestamp() bool {
	if o != nil && !IsNil(o.DisplayTimestamp) {
		return true
	}

	return false
}

// SetDisplayTimestamp gets a reference to the given string and assigns it to the DisplayTimestamp field.
func (o *StockProfilePrice) SetDisplayTimestamp(v string) {
	o.DisplayTimestamp = &v
}

// GetEma20 returns the Ema20 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetEma20() float32 {
	if o == nil || IsNil(o.Ema20) {
		var ret float32
		return ret
	}
	return *o.Ema20
}

// GetEma20Ok returns a tuple with the Ema20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetEma20Ok() (*float32, bool) {
	if o == nil || IsNil(o.Ema20) {
		return nil, false
	}
	return o.Ema20, true
}

// HasEma20 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasEma20() bool {
	if o != nil && !IsNil(o.Ema20) {
		return true
	}

	return false
}

// SetEma20 gets a reference to the given float32 and assigns it to the Ema20 field.
func (o *StockProfilePrice) SetEma20(v float32) {
	o.Ema20 = &v
}

// GetEma200 returns the Ema200 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetEma200() float32 {
	if o == nil || IsNil(o.Ema200) {
		var ret float32
		return ret
	}
	return *o.Ema200
}

// GetEma200Ok returns a tuple with the Ema200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetEma200Ok() (*float32, bool) {
	if o == nil || IsNil(o.Ema200) {
		return nil, false
	}
	return o.Ema200, true
}

// HasEma200 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasEma200() bool {
	if o != nil && !IsNil(o.Ema200) {
		return true
	}

	return false
}

// SetEma200 gets a reference to the given float32 and assigns it to the Ema200 field.
func (o *StockProfilePrice) SetEma200(v float32) {
	o.Ema200 = &v
}

// GetEma50 returns the Ema50 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetEma50() float32 {
	if o == nil || IsNil(o.Ema50) {
		var ret float32
		return ret
	}
	return *o.Ema50
}

// GetEma50Ok returns a tuple with the Ema50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetEma50Ok() (*float32, bool) {
	if o == nil || IsNil(o.Ema50) {
		return nil, false
	}
	return o.Ema50, true
}

// HasEma50 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasEma50() bool {
	if o != nil && !IsNil(o.Ema50) {
		return true
	}

	return false
}

// SetEma50 gets a reference to the given float32 and assigns it to the Ema50 field.
func (o *StockProfilePrice) SetEma50(v float32) {
	o.Ema50 = &v
}

// GetFloat returns the Float field value if set, zero value otherwise.
func (o *StockProfilePrice) GetFloat() float32 {
	if o == nil || IsNil(o.Float) {
		var ret float32
		return ret
	}
	return *o.Float
}

// GetFloatOk returns a tuple with the Float field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetFloatOk() (*float32, bool) {
	if o == nil || IsNil(o.Float) {
		return nil, false
	}
	return o.Float, true
}

// HasFloat returns a boolean if a field has been set.
func (o *StockProfilePrice) HasFloat() bool {
	if o != nil && !IsNil(o.Float) {
		return true
	}

	return false
}

// SetFloat gets a reference to the given float32 and assigns it to the Float field.
func (o *StockProfilePrice) SetFloat(v float32) {
	o.Float = &v
}

// GetGoldenCrossEma20Vs200 returns the GoldenCrossEma20Vs200 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetGoldenCrossEma20Vs200() string {
	if o == nil || IsNil(o.GoldenCrossEma20Vs200) {
		var ret string
		return ret
	}
	return *o.GoldenCrossEma20Vs200
}

// GetGoldenCrossEma20Vs200Ok returns a tuple with the GoldenCrossEma20Vs200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetGoldenCrossEma20Vs200Ok() (*string, bool) {
	if o == nil || IsNil(o.GoldenCrossEma20Vs200) {
		return nil, false
	}
	return o.GoldenCrossEma20Vs200, true
}

// HasGoldenCrossEma20Vs200 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasGoldenCrossEma20Vs200() bool {
	if o != nil && !IsNil(o.GoldenCrossEma20Vs200) {
		return true
	}

	return false
}

// SetGoldenCrossEma20Vs200 gets a reference to the given string and assigns it to the GoldenCrossEma20Vs200 field.
func (o *StockProfilePrice) SetGoldenCrossEma20Vs200(v string) {
	o.GoldenCrossEma20Vs200 = &v
}

// GetGoldenCrossEma20Vs50 returns the GoldenCrossEma20Vs50 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetGoldenCrossEma20Vs50() string {
	if o == nil || IsNil(o.GoldenCrossEma20Vs50) {
		var ret string
		return ret
	}
	return *o.GoldenCrossEma20Vs50
}

// GetGoldenCrossEma20Vs50Ok returns a tuple with the GoldenCrossEma20Vs50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetGoldenCrossEma20Vs50Ok() (*string, bool) {
	if o == nil || IsNil(o.GoldenCrossEma20Vs50) {
		return nil, false
	}
	return o.GoldenCrossEma20Vs50, true
}

// HasGoldenCrossEma20Vs50 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasGoldenCrossEma20Vs50() bool {
	if o != nil && !IsNil(o.GoldenCrossEma20Vs50) {
		return true
	}

	return false
}

// SetGoldenCrossEma20Vs50 gets a reference to the given string and assigns it to the GoldenCrossEma20Vs50 field.
func (o *StockProfilePrice) SetGoldenCrossEma20Vs50(v string) {
	o.GoldenCrossEma20Vs50 = &v
}

// GetGoldenCrossEma50Vs200 returns the GoldenCrossEma50Vs200 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetGoldenCrossEma50Vs200() string {
	if o == nil || IsNil(o.GoldenCrossEma50Vs200) {
		var ret string
		return ret
	}
	return *o.GoldenCrossEma50Vs200
}

// GetGoldenCrossEma50Vs200Ok returns a tuple with the GoldenCrossEma50Vs200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetGoldenCrossEma50Vs200Ok() (*string, bool) {
	if o == nil || IsNil(o.GoldenCrossEma50Vs200) {
		return nil, false
	}
	return o.GoldenCrossEma50Vs200, true
}

// HasGoldenCrossEma50Vs200 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasGoldenCrossEma50Vs200() bool {
	if o != nil && !IsNil(o.GoldenCrossEma50Vs200) {
		return true
	}

	return false
}

// SetGoldenCrossEma50Vs200 gets a reference to the given string and assigns it to the GoldenCrossEma50Vs200 field.
func (o *StockProfilePrice) SetGoldenCrossEma50Vs200(v string) {
	o.GoldenCrossEma50Vs200 = &v
}

// GetGoldenCrossSma20Vs200 returns the GoldenCrossSma20Vs200 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetGoldenCrossSma20Vs200() string {
	if o == nil || IsNil(o.GoldenCrossSma20Vs200) {
		var ret string
		return ret
	}
	return *o.GoldenCrossSma20Vs200
}

// GetGoldenCrossSma20Vs200Ok returns a tuple with the GoldenCrossSma20Vs200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetGoldenCrossSma20Vs200Ok() (*string, bool) {
	if o == nil || IsNil(o.GoldenCrossSma20Vs200) {
		return nil, false
	}
	return o.GoldenCrossSma20Vs200, true
}

// HasGoldenCrossSma20Vs200 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasGoldenCrossSma20Vs200() bool {
	if o != nil && !IsNil(o.GoldenCrossSma20Vs200) {
		return true
	}

	return false
}

// SetGoldenCrossSma20Vs200 gets a reference to the given string and assigns it to the GoldenCrossSma20Vs200 field.
func (o *StockProfilePrice) SetGoldenCrossSma20Vs200(v string) {
	o.GoldenCrossSma20Vs200 = &v
}

// GetGoldenCrossSma20Vs50 returns the GoldenCrossSma20Vs50 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetGoldenCrossSma20Vs50() string {
	if o == nil || IsNil(o.GoldenCrossSma20Vs50) {
		var ret string
		return ret
	}
	return *o.GoldenCrossSma20Vs50
}

// GetGoldenCrossSma20Vs50Ok returns a tuple with the GoldenCrossSma20Vs50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetGoldenCrossSma20Vs50Ok() (*string, bool) {
	if o == nil || IsNil(o.GoldenCrossSma20Vs50) {
		return nil, false
	}
	return o.GoldenCrossSma20Vs50, true
}

// HasGoldenCrossSma20Vs50 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasGoldenCrossSma20Vs50() bool {
	if o != nil && !IsNil(o.GoldenCrossSma20Vs50) {
		return true
	}

	return false
}

// SetGoldenCrossSma20Vs50 gets a reference to the given string and assigns it to the GoldenCrossSma20Vs50 field.
func (o *StockProfilePrice) SetGoldenCrossSma20Vs50(v string) {
	o.GoldenCrossSma20Vs50 = &v
}

// GetGoldenCrossSma50Vs200 returns the GoldenCrossSma50Vs200 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetGoldenCrossSma50Vs200() string {
	if o == nil || IsNil(o.GoldenCrossSma50Vs200) {
		var ret string
		return ret
	}
	return *o.GoldenCrossSma50Vs200
}

// GetGoldenCrossSma50Vs200Ok returns a tuple with the GoldenCrossSma50Vs200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetGoldenCrossSma50Vs200Ok() (*string, bool) {
	if o == nil || IsNil(o.GoldenCrossSma50Vs200) {
		return nil, false
	}
	return o.GoldenCrossSma50Vs200, true
}

// HasGoldenCrossSma50Vs200 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasGoldenCrossSma50Vs200() bool {
	if o != nil && !IsNil(o.GoldenCrossSma50Vs200) {
		return true
	}

	return false
}

// SetGoldenCrossSma50Vs200 gets a reference to the given string and assigns it to the GoldenCrossSma50Vs200 field.
func (o *StockProfilePrice) SetGoldenCrossSma50Vs200(v string) {
	o.GoldenCrossSma50Vs200 = &v
}

// GetHigh returns the High field value if set, zero value otherwise.
func (o *StockProfilePrice) GetHigh() float32 {
	if o == nil || IsNil(o.High) {
		var ret float32
		return ret
	}
	return *o.High
}

// GetHighOk returns a tuple with the High field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetHighOk() (*float32, bool) {
	if o == nil || IsNil(o.High) {
		return nil, false
	}
	return o.High, true
}

// HasHigh returns a boolean if a field has been set.
func (o *StockProfilePrice) HasHigh() bool {
	if o != nil && !IsNil(o.High) {
		return true
	}

	return false
}

// SetHigh gets a reference to the given float32 and assigns it to the High field.
func (o *StockProfilePrice) SetHigh(v float32) {
	o.High = &v
}

// GetLow returns the Low field value if set, zero value otherwise.
func (o *StockProfilePrice) GetLow() float32 {
	if o == nil || IsNil(o.Low) {
		var ret float32
		return ret
	}
	return *o.Low
}

// GetLowOk returns a tuple with the Low field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetLowOk() (*float32, bool) {
	if o == nil || IsNil(o.Low) {
		return nil, false
	}
	return o.Low, true
}

// HasLow returns a boolean if a field has been set.
func (o *StockProfilePrice) HasLow() bool {
	if o != nil && !IsNil(o.Low) {
		return true
	}

	return false
}

// SetLow gets a reference to the given float32 and assigns it to the Low field.
func (o *StockProfilePrice) SetLow(v float32) {
	o.Low = &v
}

// GetMacdDeathCrossSignal returns the MacdDeathCrossSignal field value if set, zero value otherwise.
func (o *StockProfilePrice) GetMacdDeathCrossSignal() string {
	if o == nil || IsNil(o.MacdDeathCrossSignal) {
		var ret string
		return ret
	}
	return *o.MacdDeathCrossSignal
}

// GetMacdDeathCrossSignalOk returns a tuple with the MacdDeathCrossSignal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetMacdDeathCrossSignalOk() (*string, bool) {
	if o == nil || IsNil(o.MacdDeathCrossSignal) {
		return nil, false
	}
	return o.MacdDeathCrossSignal, true
}

// HasMacdDeathCrossSignal returns a boolean if a field has been set.
func (o *StockProfilePrice) HasMacdDeathCrossSignal() bool {
	if o != nil && !IsNil(o.MacdDeathCrossSignal) {
		return true
	}

	return false
}

// SetMacdDeathCrossSignal gets a reference to the given string and assigns it to the MacdDeathCrossSignal field.
func (o *StockProfilePrice) SetMacdDeathCrossSignal(v string) {
	o.MacdDeathCrossSignal = &v
}

// GetMacdGoldenCrossSignal returns the MacdGoldenCrossSignal field value if set, zero value otherwise.
func (o *StockProfilePrice) GetMacdGoldenCrossSignal() string {
	if o == nil || IsNil(o.MacdGoldenCrossSignal) {
		var ret string
		return ret
	}
	return *o.MacdGoldenCrossSignal
}

// GetMacdGoldenCrossSignalOk returns a tuple with the MacdGoldenCrossSignal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetMacdGoldenCrossSignalOk() (*string, bool) {
	if o == nil || IsNil(o.MacdGoldenCrossSignal) {
		return nil, false
	}
	return o.MacdGoldenCrossSignal, true
}

// HasMacdGoldenCrossSignal returns a boolean if a field has been set.
func (o *StockProfilePrice) HasMacdGoldenCrossSignal() bool {
	if o != nil && !IsNil(o.MacdGoldenCrossSignal) {
		return true
	}

	return false
}

// SetMacdGoldenCrossSignal gets a reference to the given string and assigns it to the MacdGoldenCrossSignal field.
func (o *StockProfilePrice) SetMacdGoldenCrossSignal(v string) {
	o.MacdGoldenCrossSignal = &v
}

// GetMacdLine returns the MacdLine field value if set, zero value otherwise.
func (o *StockProfilePrice) GetMacdLine() float32 {
	if o == nil || IsNil(o.MacdLine) {
		var ret float32
		return ret
	}
	return *o.MacdLine
}

// GetMacdLineOk returns a tuple with the MacdLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetMacdLineOk() (*float32, bool) {
	if o == nil || IsNil(o.MacdLine) {
		return nil, false
	}
	return o.MacdLine, true
}

// HasMacdLine returns a boolean if a field has been set.
func (o *StockProfilePrice) HasMacdLine() bool {
	if o != nil && !IsNil(o.MacdLine) {
		return true
	}

	return false
}

// SetMacdLine gets a reference to the given float32 and assigns it to the MacdLine field.
func (o *StockProfilePrice) SetMacdLine(v float32) {
	o.MacdLine = &v
}

// GetMacdSignalLine returns the MacdSignalLine field value if set, zero value otherwise.
func (o *StockProfilePrice) GetMacdSignalLine() float32 {
	if o == nil || IsNil(o.MacdSignalLine) {
		var ret float32
		return ret
	}
	return *o.MacdSignalLine
}

// GetMacdSignalLineOk returns a tuple with the MacdSignalLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetMacdSignalLineOk() (*float32, bool) {
	if o == nil || IsNil(o.MacdSignalLine) {
		return nil, false
	}
	return o.MacdSignalLine, true
}

// HasMacdSignalLine returns a boolean if a field has been set.
func (o *StockProfilePrice) HasMacdSignalLine() bool {
	if o != nil && !IsNil(o.MacdSignalLine) {
		return true
	}

	return false
}

// SetMacdSignalLine gets a reference to the given float32 and assigns it to the MacdSignalLine field.
func (o *StockProfilePrice) SetMacdSignalLine(v float32) {
	o.MacdSignalLine = &v
}

// GetOpen returns the Open field value if set, zero value otherwise.
func (o *StockProfilePrice) GetOpen() float32 {
	if o == nil || IsNil(o.Open) {
		var ret float32
		return ret
	}
	return *o.Open
}

// GetOpenOk returns a tuple with the Open field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetOpenOk() (*float32, bool) {
	if o == nil || IsNil(o.Open) {
		return nil, false
	}
	return o.Open, true
}

// HasOpen returns a boolean if a field has been set.
func (o *StockProfilePrice) HasOpen() bool {
	if o != nil && !IsNil(o.Open) {
		return true
	}

	return false
}

// SetOpen gets a reference to the given float32 and assigns it to the Open field.
func (o *StockProfilePrice) SetOpen(v float32) {
	o.Open = &v
}

// GetPPctChange returns the PPctChange field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPPctChange() float32 {
	if o == nil || IsNil(o.PPctChange) {
		var ret float32
		return ret
	}
	return *o.PPctChange
}

// GetPPctChangeOk returns a tuple with the PPctChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPPctChangeOk() (*float32, bool) {
	if o == nil || IsNil(o.PPctChange) {
		return nil, false
	}
	return o.PPctChange, true
}

// HasPPctChange returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPPctChange() bool {
	if o != nil && !IsNil(o.PPctChange) {
		return true
	}

	return false
}

// SetPPctChange gets a reference to the given float32 and assigns it to the PPctChange field.
func (o *StockProfilePrice) SetPPctChange(v float32) {
	o.PPctChange = &v
}

// GetPchangeSP10y returns the PchangeSP10y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchangeSP10y() float32 {
	if o == nil || IsNil(o.PchangeSP10y) {
		var ret float32
		return ret
	}
	return *o.PchangeSP10y
}

// GetPchangeSP10yOk returns a tuple with the PchangeSP10y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchangeSP10yOk() (*float32, bool) {
	if o == nil || IsNil(o.PchangeSP10y) {
		return nil, false
	}
	return o.PchangeSP10y, true
}

// HasPchangeSP10y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchangeSP10y() bool {
	if o != nil && !IsNil(o.PchangeSP10y) {
		return true
	}

	return false
}

// SetPchangeSP10y gets a reference to the given float32 and assigns it to the PchangeSP10y field.
func (o *StockProfilePrice) SetPchangeSP10y(v float32) {
	o.PchangeSP10y = &v
}

// GetPchangeSP12w returns the PchangeSP12w field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchangeSP12w() float32 {
	if o == nil || IsNil(o.PchangeSP12w) {
		var ret float32
		return ret
	}
	return *o.PchangeSP12w
}

// GetPchangeSP12wOk returns a tuple with the PchangeSP12w field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchangeSP12wOk() (*float32, bool) {
	if o == nil || IsNil(o.PchangeSP12w) {
		return nil, false
	}
	return o.PchangeSP12w, true
}

// HasPchangeSP12w returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchangeSP12w() bool {
	if o != nil && !IsNil(o.PchangeSP12w) {
		return true
	}

	return false
}

// SetPchangeSP12w gets a reference to the given float32 and assigns it to the PchangeSP12w field.
func (o *StockProfilePrice) SetPchangeSP12w(v float32) {
	o.PchangeSP12w = &v
}

// GetPchangeSP15y returns the PchangeSP15y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchangeSP15y() float32 {
	if o == nil || IsNil(o.PchangeSP15y) {
		var ret float32
		return ret
	}
	return *o.PchangeSP15y
}

// GetPchangeSP15yOk returns a tuple with the PchangeSP15y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchangeSP15yOk() (*float32, bool) {
	if o == nil || IsNil(o.PchangeSP15y) {
		return nil, false
	}
	return o.PchangeSP15y, true
}

// HasPchangeSP15y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchangeSP15y() bool {
	if o != nil && !IsNil(o.PchangeSP15y) {
		return true
	}

	return false
}

// SetPchangeSP15y gets a reference to the given float32 and assigns it to the PchangeSP15y field.
func (o *StockProfilePrice) SetPchangeSP15y(v float32) {
	o.PchangeSP15y = &v
}

// GetPchangeSP1w returns the PchangeSP1w field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchangeSP1w() float32 {
	if o == nil || IsNil(o.PchangeSP1w) {
		var ret float32
		return ret
	}
	return *o.PchangeSP1w
}

// GetPchangeSP1wOk returns a tuple with the PchangeSP1w field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchangeSP1wOk() (*float32, bool) {
	if o == nil || IsNil(o.PchangeSP1w) {
		return nil, false
	}
	return o.PchangeSP1w, true
}

// HasPchangeSP1w returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchangeSP1w() bool {
	if o != nil && !IsNil(o.PchangeSP1w) {
		return true
	}

	return false
}

// SetPchangeSP1w gets a reference to the given float32 and assigns it to the PchangeSP1w field.
func (o *StockProfilePrice) SetPchangeSP1w(v float32) {
	o.PchangeSP1w = &v
}

// GetPchangeSP20y returns the PchangeSP20y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchangeSP20y() float32 {
	if o == nil || IsNil(o.PchangeSP20y) {
		var ret float32
		return ret
	}
	return *o.PchangeSP20y
}

// GetPchangeSP20yOk returns a tuple with the PchangeSP20y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchangeSP20yOk() (*float32, bool) {
	if o == nil || IsNil(o.PchangeSP20y) {
		return nil, false
	}
	return o.PchangeSP20y, true
}

// HasPchangeSP20y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchangeSP20y() bool {
	if o != nil && !IsNil(o.PchangeSP20y) {
		return true
	}

	return false
}

// SetPchangeSP20y gets a reference to the given float32 and assigns it to the PchangeSP20y field.
func (o *StockProfilePrice) SetPchangeSP20y(v float32) {
	o.PchangeSP20y = &v
}

// GetPchangeSP24w returns the PchangeSP24w field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchangeSP24w() float32 {
	if o == nil || IsNil(o.PchangeSP24w) {
		var ret float32
		return ret
	}
	return *o.PchangeSP24w
}

// GetPchangeSP24wOk returns a tuple with the PchangeSP24w field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchangeSP24wOk() (*float32, bool) {
	if o == nil || IsNil(o.PchangeSP24w) {
		return nil, false
	}
	return o.PchangeSP24w, true
}

// HasPchangeSP24w returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchangeSP24w() bool {
	if o != nil && !IsNil(o.PchangeSP24w) {
		return true
	}

	return false
}

// SetPchangeSP24w gets a reference to the given float32 and assigns it to the PchangeSP24w field.
func (o *StockProfilePrice) SetPchangeSP24w(v float32) {
	o.PchangeSP24w = &v
}

// GetPchangeSP3y returns the PchangeSP3y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchangeSP3y() float32 {
	if o == nil || IsNil(o.PchangeSP3y) {
		var ret float32
		return ret
	}
	return *o.PchangeSP3y
}

// GetPchangeSP3yOk returns a tuple with the PchangeSP3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchangeSP3yOk() (*float32, bool) {
	if o == nil || IsNil(o.PchangeSP3y) {
		return nil, false
	}
	return o.PchangeSP3y, true
}

// HasPchangeSP3y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchangeSP3y() bool {
	if o != nil && !IsNil(o.PchangeSP3y) {
		return true
	}

	return false
}

// SetPchangeSP3y gets a reference to the given float32 and assigns it to the PchangeSP3y field.
func (o *StockProfilePrice) SetPchangeSP3y(v float32) {
	o.PchangeSP3y = &v
}

// GetPchangeSP4w returns the PchangeSP4w field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchangeSP4w() float32 {
	if o == nil || IsNil(o.PchangeSP4w) {
		var ret float32
		return ret
	}
	return *o.PchangeSP4w
}

// GetPchangeSP4wOk returns a tuple with the PchangeSP4w field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchangeSP4wOk() (*float32, bool) {
	if o == nil || IsNil(o.PchangeSP4w) {
		return nil, false
	}
	return o.PchangeSP4w, true
}

// HasPchangeSP4w returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchangeSP4w() bool {
	if o != nil && !IsNil(o.PchangeSP4w) {
		return true
	}

	return false
}

// SetPchangeSP4w gets a reference to the given float32 and assigns it to the PchangeSP4w field.
func (o *StockProfilePrice) SetPchangeSP4w(v float32) {
	o.PchangeSP4w = &v
}

// GetPchangeSP52w returns the PchangeSP52w field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchangeSP52w() float32 {
	if o == nil || IsNil(o.PchangeSP52w) {
		var ret float32
		return ret
	}
	return *o.PchangeSP52w
}

// GetPchangeSP52wOk returns a tuple with the PchangeSP52w field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchangeSP52wOk() (*float32, bool) {
	if o == nil || IsNil(o.PchangeSP52w) {
		return nil, false
	}
	return o.PchangeSP52w, true
}

// HasPchangeSP52w returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchangeSP52w() bool {
	if o != nil && !IsNil(o.PchangeSP52w) {
		return true
	}

	return false
}

// SetPchangeSP52w gets a reference to the given float32 and assigns it to the PchangeSP52w field.
func (o *StockProfilePrice) SetPchangeSP52w(v float32) {
	o.PchangeSP52w = &v
}

// GetPchangeSP5y returns the PchangeSP5y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchangeSP5y() float32 {
	if o == nil || IsNil(o.PchangeSP5y) {
		var ret float32
		return ret
	}
	return *o.PchangeSP5y
}

// GetPchangeSP5yOk returns a tuple with the PchangeSP5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchangeSP5yOk() (*float32, bool) {
	if o == nil || IsNil(o.PchangeSP5y) {
		return nil, false
	}
	return o.PchangeSP5y, true
}

// HasPchangeSP5y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchangeSP5y() bool {
	if o != nil && !IsNil(o.PchangeSP5y) {
		return true
	}

	return false
}

// SetPchangeSP5y gets a reference to the given float32 and assigns it to the PchangeSP5y field.
func (o *StockProfilePrice) SetPchangeSP5y(v float32) {
	o.PchangeSP5y = &v
}

// GetPchangeSPYtd returns the PchangeSPYtd field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchangeSPYtd() float32 {
	if o == nil || IsNil(o.PchangeSPYtd) {
		var ret float32
		return ret
	}
	return *o.PchangeSPYtd
}

// GetPchangeSPYtdOk returns a tuple with the PchangeSPYtd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchangeSPYtdOk() (*float32, bool) {
	if o == nil || IsNil(o.PchangeSPYtd) {
		return nil, false
	}
	return o.PchangeSPYtd, true
}

// HasPchangeSPYtd returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchangeSPYtd() bool {
	if o != nil && !IsNil(o.PchangeSPYtd) {
		return true
	}

	return false
}

// SetPchangeSPYtd gets a reference to the given float32 and assigns it to the PchangeSPYtd field.
func (o *StockProfilePrice) SetPchangeSPYtd(v float32) {
	o.PchangeSPYtd = &v
}

// GetPchange10y returns the Pchange10y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange10y() float32 {
	if o == nil || IsNil(o.Pchange10y) {
		var ret float32
		return ret
	}
	return *o.Pchange10y
}

// GetPchange10yOk returns a tuple with the Pchange10y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange10yOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange10y) {
		return nil, false
	}
	return o.Pchange10y, true
}

// HasPchange10y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange10y() bool {
	if o != nil && !IsNil(o.Pchange10y) {
		return true
	}

	return false
}

// SetPchange10y gets a reference to the given float32 and assigns it to the Pchange10y field.
func (o *StockProfilePrice) SetPchange10y(v float32) {
	o.Pchange10y = &v
}

// GetPchange121m returns the Pchange121m field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange121m() float32 {
	if o == nil || IsNil(o.Pchange121m) {
		var ret float32
		return ret
	}
	return *o.Pchange121m
}

// GetPchange121mOk returns a tuple with the Pchange121m field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange121mOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange121m) {
		return nil, false
	}
	return o.Pchange121m, true
}

// HasPchange121m returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange121m() bool {
	if o != nil && !IsNil(o.Pchange121m) {
		return true
	}

	return false
}

// SetPchange121m gets a reference to the given float32 and assigns it to the Pchange121m field.
func (o *StockProfilePrice) SetPchange121m(v float32) {
	o.Pchange121m = &v
}

// GetPchange12w returns the Pchange12w field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange12w() float32 {
	if o == nil || IsNil(o.Pchange12w) {
		var ret float32
		return ret
	}
	return *o.Pchange12w
}

// GetPchange12wOk returns a tuple with the Pchange12w field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange12wOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange12w) {
		return nil, false
	}
	return o.Pchange12w, true
}

// HasPchange12w returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange12w() bool {
	if o != nil && !IsNil(o.Pchange12w) {
		return true
	}

	return false
}

// SetPchange12w gets a reference to the given float32 and assigns it to the Pchange12w field.
func (o *StockProfilePrice) SetPchange12w(v float32) {
	o.Pchange12w = &v
}

// GetPchange15y returns the Pchange15y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange15y() float32 {
	if o == nil || IsNil(o.Pchange15y) {
		var ret float32
		return ret
	}
	return *o.Pchange15y
}

// GetPchange15yOk returns a tuple with the Pchange15y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange15yOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange15y) {
		return nil, false
	}
	return o.Pchange15y, true
}

// HasPchange15y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange15y() bool {
	if o != nil && !IsNil(o.Pchange15y) {
		return true
	}

	return false
}

// SetPchange15y gets a reference to the given float32 and assigns it to the Pchange15y field.
func (o *StockProfilePrice) SetPchange15y(v float32) {
	o.Pchange15y = &v
}

// GetPchange1w returns the Pchange1w field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange1w() float32 {
	if o == nil || IsNil(o.Pchange1w) {
		var ret float32
		return ret
	}
	return *o.Pchange1w
}

// GetPchange1wOk returns a tuple with the Pchange1w field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange1wOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange1w) {
		return nil, false
	}
	return o.Pchange1w, true
}

// HasPchange1w returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange1w() bool {
	if o != nil && !IsNil(o.Pchange1w) {
		return true
	}

	return false
}

// SetPchange1w gets a reference to the given float32 and assigns it to the Pchange1w field.
func (o *StockProfilePrice) SetPchange1w(v float32) {
	o.Pchange1w = &v
}

// GetPchange20y returns the Pchange20y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange20y() float32 {
	if o == nil || IsNil(o.Pchange20y) {
		var ret float32
		return ret
	}
	return *o.Pchange20y
}

// GetPchange20yOk returns a tuple with the Pchange20y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange20yOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange20y) {
		return nil, false
	}
	return o.Pchange20y, true
}

// HasPchange20y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange20y() bool {
	if o != nil && !IsNil(o.Pchange20y) {
		return true
	}

	return false
}

// SetPchange20y gets a reference to the given float32 and assigns it to the Pchange20y field.
func (o *StockProfilePrice) SetPchange20y(v float32) {
	o.Pchange20y = &v
}

// GetPchange24w returns the Pchange24w field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange24w() float32 {
	if o == nil || IsNil(o.Pchange24w) {
		var ret float32
		return ret
	}
	return *o.Pchange24w
}

// GetPchange24wOk returns a tuple with the Pchange24w field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange24wOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange24w) {
		return nil, false
	}
	return o.Pchange24w, true
}

// HasPchange24w returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange24w() bool {
	if o != nil && !IsNil(o.Pchange24w) {
		return true
	}

	return false
}

// SetPchange24w gets a reference to the given float32 and assigns it to the Pchange24w field.
func (o *StockProfilePrice) SetPchange24w(v float32) {
	o.Pchange24w = &v
}

// GetPchange31m returns the Pchange31m field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange31m() float32 {
	if o == nil || IsNil(o.Pchange31m) {
		var ret float32
		return ret
	}
	return *o.Pchange31m
}

// GetPchange31mOk returns a tuple with the Pchange31m field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange31mOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange31m) {
		return nil, false
	}
	return o.Pchange31m, true
}

// HasPchange31m returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange31m() bool {
	if o != nil && !IsNil(o.Pchange31m) {
		return true
	}

	return false
}

// SetPchange31m gets a reference to the given float32 and assigns it to the Pchange31m field.
func (o *StockProfilePrice) SetPchange31m(v float32) {
	o.Pchange31m = &v
}

// GetPchange3y returns the Pchange3y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange3y() float32 {
	if o == nil || IsNil(o.Pchange3y) {
		var ret float32
		return ret
	}
	return *o.Pchange3y
}

// GetPchange3yOk returns a tuple with the Pchange3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange3yOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange3y) {
		return nil, false
	}
	return o.Pchange3y, true
}

// HasPchange3y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange3y() bool {
	if o != nil && !IsNil(o.Pchange3y) {
		return true
	}

	return false
}

// SetPchange3y gets a reference to the given float32 and assigns it to the Pchange3y field.
func (o *StockProfilePrice) SetPchange3y(v float32) {
	o.Pchange3y = &v
}

// GetPchange4w returns the Pchange4w field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange4w() float32 {
	if o == nil || IsNil(o.Pchange4w) {
		var ret float32
		return ret
	}
	return *o.Pchange4w
}

// GetPchange4wOk returns a tuple with the Pchange4w field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange4wOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange4w) {
		return nil, false
	}
	return o.Pchange4w, true
}

// HasPchange4w returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange4w() bool {
	if o != nil && !IsNil(o.Pchange4w) {
		return true
	}

	return false
}

// SetPchange4w gets a reference to the given float32 and assigns it to the Pchange4w field.
func (o *StockProfilePrice) SetPchange4w(v float32) {
	o.Pchange4w = &v
}

// GetPchange52w returns the Pchange52w field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange52w() float32 {
	if o == nil || IsNil(o.Pchange52w) {
		var ret float32
		return ret
	}
	return *o.Pchange52w
}

// GetPchange52wOk returns a tuple with the Pchange52w field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange52wOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange52w) {
		return nil, false
	}
	return o.Pchange52w, true
}

// HasPchange52w returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange52w() bool {
	if o != nil && !IsNil(o.Pchange52w) {
		return true
	}

	return false
}

// SetPchange52w gets a reference to the given float32 and assigns it to the Pchange52w field.
func (o *StockProfilePrice) SetPchange52w(v float32) {
	o.Pchange52w = &v
}

// GetPchange5y returns the Pchange5y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange5y() float32 {
	if o == nil || IsNil(o.Pchange5y) {
		var ret float32
		return ret
	}
	return *o.Pchange5y
}

// GetPchange5yOk returns a tuple with the Pchange5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange5yOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange5y) {
		return nil, false
	}
	return o.Pchange5y, true
}

// HasPchange5y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange5y() bool {
	if o != nil && !IsNil(o.Pchange5y) {
		return true
	}

	return false
}

// SetPchange5y gets a reference to the given float32 and assigns it to the Pchange5y field.
func (o *StockProfilePrice) SetPchange5y(v float32) {
	o.Pchange5y = &v
}

// GetPchange61m returns the Pchange61m field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchange61m() float32 {
	if o == nil || IsNil(o.Pchange61m) {
		var ret float32
		return ret
	}
	return *o.Pchange61m
}

// GetPchange61mOk returns a tuple with the Pchange61m field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchange61mOk() (*float32, bool) {
	if o == nil || IsNil(o.Pchange61m) {
		return nil, false
	}
	return o.Pchange61m, true
}

// HasPchange61m returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchange61m() bool {
	if o != nil && !IsNil(o.Pchange61m) {
		return true
	}

	return false
}

// SetPchange61m gets a reference to the given float32 and assigns it to the Pchange61m field.
func (o *StockProfilePrice) SetPchange61m(v float32) {
	o.Pchange61m = &v
}

// GetPchangeYtd returns the PchangeYtd field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPchangeYtd() float32 {
	if o == nil || IsNil(o.PchangeYtd) {
		var ret float32
		return ret
	}
	return *o.PchangeYtd
}

// GetPchangeYtdOk returns a tuple with the PchangeYtd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPchangeYtdOk() (*float32, bool) {
	if o == nil || IsNil(o.PchangeYtd) {
		return nil, false
	}
	return o.PchangeYtd, true
}

// HasPchangeYtd returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPchangeYtd() bool {
	if o != nil && !IsNil(o.PchangeYtd) {
		return true
	}

	return false
}

// SetPchangeYtd gets a reference to the given float32 and assigns it to the PchangeYtd field.
func (o *StockProfilePrice) SetPchangeYtd(v float32) {
	o.PchangeYtd = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *StockProfilePrice) SetPrice(v float32) {
	o.Price = &v
}

// GetPrice10yhigh returns the Price10yhigh field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPrice10yhigh() float32 {
	if o == nil || IsNil(o.Price10yhigh) {
		var ret float32
		return ret
	}
	return *o.Price10yhigh
}

// GetPrice10yhighOk returns a tuple with the Price10yhigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPrice10yhighOk() (*float32, bool) {
	if o == nil || IsNil(o.Price10yhigh) {
		return nil, false
	}
	return o.Price10yhigh, true
}

// HasPrice10yhigh returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPrice10yhigh() bool {
	if o != nil && !IsNil(o.Price10yhigh) {
		return true
	}

	return false
}

// SetPrice10yhigh gets a reference to the given float32 and assigns it to the Price10yhigh field.
func (o *StockProfilePrice) SetPrice10yhigh(v float32) {
	o.Price10yhigh = &v
}

// GetPrice10ylow returns the Price10ylow field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPrice10ylow() float32 {
	if o == nil || IsNil(o.Price10ylow) {
		var ret float32
		return ret
	}
	return *o.Price10ylow
}

// GetPrice10ylowOk returns a tuple with the Price10ylow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPrice10ylowOk() (*float32, bool) {
	if o == nil || IsNil(o.Price10ylow) {
		return nil, false
	}
	return o.Price10ylow, true
}

// HasPrice10ylow returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPrice10ylow() bool {
	if o != nil && !IsNil(o.Price10ylow) {
		return true
	}

	return false
}

// SetPrice10ylow gets a reference to the given float32 and assigns it to the Price10ylow field.
func (o *StockProfilePrice) SetPrice10ylow(v float32) {
	o.Price10ylow = &v
}

// GetPrice3yhigh returns the Price3yhigh field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPrice3yhigh() float32 {
	if o == nil || IsNil(o.Price3yhigh) {
		var ret float32
		return ret
	}
	return *o.Price3yhigh
}

// GetPrice3yhighOk returns a tuple with the Price3yhigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPrice3yhighOk() (*float32, bool) {
	if o == nil || IsNil(o.Price3yhigh) {
		return nil, false
	}
	return o.Price3yhigh, true
}

// HasPrice3yhigh returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPrice3yhigh() bool {
	if o != nil && !IsNil(o.Price3yhigh) {
		return true
	}

	return false
}

// SetPrice3yhigh gets a reference to the given float32 and assigns it to the Price3yhigh field.
func (o *StockProfilePrice) SetPrice3yhigh(v float32) {
	o.Price3yhigh = &v
}

// GetPrice3ylow returns the Price3ylow field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPrice3ylow() float32 {
	if o == nil || IsNil(o.Price3ylow) {
		var ret float32
		return ret
	}
	return *o.Price3ylow
}

// GetPrice3ylowOk returns a tuple with the Price3ylow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPrice3ylowOk() (*float32, bool) {
	if o == nil || IsNil(o.Price3ylow) {
		return nil, false
	}
	return o.Price3ylow, true
}

// HasPrice3ylow returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPrice3ylow() bool {
	if o != nil && !IsNil(o.Price3ylow) {
		return true
	}

	return false
}

// SetPrice3ylow gets a reference to the given float32 and assigns it to the Price3ylow field.
func (o *StockProfilePrice) SetPrice3ylow(v float32) {
	o.Price3ylow = &v
}

// GetPrice52whigh returns the Price52whigh field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPrice52whigh() float32 {
	if o == nil || IsNil(o.Price52whigh) {
		var ret float32
		return ret
	}
	return *o.Price52whigh
}

// GetPrice52whighOk returns a tuple with the Price52whigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPrice52whighOk() (*float32, bool) {
	if o == nil || IsNil(o.Price52whigh) {
		return nil, false
	}
	return o.Price52whigh, true
}

// HasPrice52whigh returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPrice52whigh() bool {
	if o != nil && !IsNil(o.Price52whigh) {
		return true
	}

	return false
}

// SetPrice52whigh gets a reference to the given float32 and assigns it to the Price52whigh field.
func (o *StockProfilePrice) SetPrice52whigh(v float32) {
	o.Price52whigh = &v
}

// GetPrice52wlow returns the Price52wlow field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPrice52wlow() float32 {
	if o == nil || IsNil(o.Price52wlow) {
		var ret float32
		return ret
	}
	return *o.Price52wlow
}

// GetPrice52wlowOk returns a tuple with the Price52wlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPrice52wlowOk() (*float32, bool) {
	if o == nil || IsNil(o.Price52wlow) {
		return nil, false
	}
	return o.Price52wlow, true
}

// HasPrice52wlow returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPrice52wlow() bool {
	if o != nil && !IsNil(o.Price52wlow) {
		return true
	}

	return false
}

// SetPrice52wlow gets a reference to the given float32 and assigns it to the Price52wlow field.
func (o *StockProfilePrice) SetPrice52wlow(v float32) {
	o.Price52wlow = &v
}

// GetPrice5yhigh returns the Price5yhigh field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPrice5yhigh() float32 {
	if o == nil || IsNil(o.Price5yhigh) {
		var ret float32
		return ret
	}
	return *o.Price5yhigh
}

// GetPrice5yhighOk returns a tuple with the Price5yhigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPrice5yhighOk() (*float32, bool) {
	if o == nil || IsNil(o.Price5yhigh) {
		return nil, false
	}
	return o.Price5yhigh, true
}

// HasPrice5yhigh returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPrice5yhigh() bool {
	if o != nil && !IsNil(o.Price5yhigh) {
		return true
	}

	return false
}

// SetPrice5yhigh gets a reference to the given float32 and assigns it to the Price5yhigh field.
func (o *StockProfilePrice) SetPrice5yhigh(v float32) {
	o.Price5yhigh = &v
}

// GetPrice5ylow returns the Price5ylow field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPrice5ylow() float32 {
	if o == nil || IsNil(o.Price5ylow) {
		var ret float32
		return ret
	}
	return *o.Price5ylow
}

// GetPrice5ylowOk returns a tuple with the Price5ylow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPrice5ylowOk() (*float32, bool) {
	if o == nil || IsNil(o.Price5ylow) {
		return nil, false
	}
	return o.Price5ylow, true
}

// HasPrice5ylow returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPrice5ylow() bool {
	if o != nil && !IsNil(o.Price5ylow) {
		return true
	}

	return false
}

// SetPrice5ylow gets a reference to the given float32 and assigns it to the Price5ylow field.
func (o *StockProfilePrice) SetPrice5ylow(v float32) {
	o.Price5ylow = &v
}

// GetPriceStdv20 returns the PriceStdv20 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPriceStdv20() float32 {
	if o == nil || IsNil(o.PriceStdv20) {
		var ret float32
		return ret
	}
	return *o.PriceStdv20
}

// GetPriceStdv20Ok returns a tuple with the PriceStdv20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPriceStdv20Ok() (*float32, bool) {
	if o == nil || IsNil(o.PriceStdv20) {
		return nil, false
	}
	return o.PriceStdv20, true
}

// HasPriceStdv20 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPriceStdv20() bool {
	if o != nil && !IsNil(o.PriceStdv20) {
		return true
	}

	return false
}

// SetPriceStdv20 gets a reference to the given float32 and assigns it to the PriceStdv20 field.
func (o *StockProfilePrice) SetPriceStdv20(v float32) {
	o.PriceStdv20 = &v
}

// GetPriceStdv200 returns the PriceStdv200 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPriceStdv200() float32 {
	if o == nil || IsNil(o.PriceStdv200) {
		var ret float32
		return ret
	}
	return *o.PriceStdv200
}

// GetPriceStdv200Ok returns a tuple with the PriceStdv200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPriceStdv200Ok() (*float32, bool) {
	if o == nil || IsNil(o.PriceStdv200) {
		return nil, false
	}
	return o.PriceStdv200, true
}

// HasPriceStdv200 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPriceStdv200() bool {
	if o != nil && !IsNil(o.PriceStdv200) {
		return true
	}

	return false
}

// SetPriceStdv200 gets a reference to the given float32 and assigns it to the PriceStdv200 field.
func (o *StockProfilePrice) SetPriceStdv200(v float32) {
	o.PriceStdv200 = &v
}

// GetPriceStdv50 returns the PriceStdv50 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPriceStdv50() float32 {
	if o == nil || IsNil(o.PriceStdv50) {
		var ret float32
		return ret
	}
	return *o.PriceStdv50
}

// GetPriceStdv50Ok returns a tuple with the PriceStdv50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPriceStdv50Ok() (*float32, bool) {
	if o == nil || IsNil(o.PriceStdv50) {
		return nil, false
	}
	return o.PriceStdv50, true
}

// HasPriceStdv50 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPriceStdv50() bool {
	if o != nil && !IsNil(o.PriceStdv50) {
		return true
	}

	return false
}

// SetPriceStdv50 gets a reference to the given float32 and assigns it to the PriceStdv50 field.
func (o *StockProfilePrice) SetPriceStdv50(v float32) {
	o.PriceStdv50 = &v
}

// GetPricehishigh returns the Pricehishigh field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPricehishigh() float32 {
	if o == nil || IsNil(o.Pricehishigh) {
		var ret float32
		return ret
	}
	return *o.Pricehishigh
}

// GetPricehishighOk returns a tuple with the Pricehishigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPricehishighOk() (*float32, bool) {
	if o == nil || IsNil(o.Pricehishigh) {
		return nil, false
	}
	return o.Pricehishigh, true
}

// HasPricehishigh returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPricehishigh() bool {
	if o != nil && !IsNil(o.Pricehishigh) {
		return true
	}

	return false
}

// SetPricehishigh gets a reference to the given float32 and assigns it to the Pricehishigh field.
func (o *StockProfilePrice) SetPricehishigh(v float32) {
	o.Pricehishigh = &v
}

// GetPricehislow returns the Pricehislow field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPricehislow() float32 {
	if o == nil || IsNil(o.Pricehislow) {
		var ret float32
		return ret
	}
	return *o.Pricehislow
}

// GetPricehislowOk returns a tuple with the Pricehislow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPricehislowOk() (*float32, bool) {
	if o == nil || IsNil(o.Pricehislow) {
		return nil, false
	}
	return o.Pricehislow, true
}

// HasPricehislow returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPricehislow() bool {
	if o != nil && !IsNil(o.Pricehislow) {
		return true
	}

	return false
}

// SetPricehislow gets a reference to the given float32 and assigns it to the Pricehislow field.
func (o *StockProfilePrice) SetPricehislow(v float32) {
	o.Pricehislow = &v
}

// GetPriceindex6m returns the Priceindex6m field value if set, zero value otherwise.
func (o *StockProfilePrice) GetPriceindex6m() float32 {
	if o == nil || IsNil(o.Priceindex6m) {
		var ret float32
		return ret
	}
	return *o.Priceindex6m
}

// GetPriceindex6mOk returns a tuple with the Priceindex6m field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetPriceindex6mOk() (*float32, bool) {
	if o == nil || IsNil(o.Priceindex6m) {
		return nil, false
	}
	return o.Priceindex6m, true
}

// HasPriceindex6m returns a boolean if a field has been set.
func (o *StockProfilePrice) HasPriceindex6m() bool {
	if o != nil && !IsNil(o.Priceindex6m) {
		return true
	}

	return false
}

// SetPriceindex6m gets a reference to the given float32 and assigns it to the Priceindex6m field.
func (o *StockProfilePrice) SetPriceindex6m(v float32) {
	o.Priceindex6m = &v
}

// GetRsi14 returns the Rsi14 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetRsi14() float32 {
	if o == nil || IsNil(o.Rsi14) {
		var ret float32
		return ret
	}
	return *o.Rsi14
}

// GetRsi14Ok returns a tuple with the Rsi14 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetRsi14Ok() (*float32, bool) {
	if o == nil || IsNil(o.Rsi14) {
		return nil, false
	}
	return o.Rsi14, true
}

// HasRsi14 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasRsi14() bool {
	if o != nil && !IsNil(o.Rsi14) {
		return true
	}

	return false
}

// SetRsi14 gets a reference to the given float32 and assigns it to the Rsi14 field.
func (o *StockProfilePrice) SetRsi14(v float32) {
	o.Rsi14 = &v
}

// GetRsi30 returns the Rsi30 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetRsi30() float32 {
	if o == nil || IsNil(o.Rsi30) {
		var ret float32
		return ret
	}
	return *o.Rsi30
}

// GetRsi30Ok returns a tuple with the Rsi30 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetRsi30Ok() (*float32, bool) {
	if o == nil || IsNil(o.Rsi30) {
		return nil, false
	}
	return o.Rsi30, true
}

// HasRsi30 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasRsi30() bool {
	if o != nil && !IsNil(o.Rsi30) {
		return true
	}

	return false
}

// SetRsi30 gets a reference to the given float32 and assigns it to the Rsi30 field.
func (o *StockProfilePrice) SetRsi30(v float32) {
	o.Rsi30 = &v
}

// GetRsi5 returns the Rsi5 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetRsi5() float32 {
	if o == nil || IsNil(o.Rsi5) {
		var ret float32
		return ret
	}
	return *o.Rsi5
}

// GetRsi5Ok returns a tuple with the Rsi5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetRsi5Ok() (*float32, bool) {
	if o == nil || IsNil(o.Rsi5) {
		return nil, false
	}
	return o.Rsi5, true
}

// HasRsi5 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasRsi5() bool {
	if o != nil && !IsNil(o.Rsi5) {
		return true
	}

	return false
}

// SetRsi5 gets a reference to the given float32 and assigns it to the Rsi5 field.
func (o *StockProfilePrice) SetRsi5(v float32) {
	o.Rsi5 = &v
}

// GetRsi9 returns the Rsi9 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetRsi9() float32 {
	if o == nil || IsNil(o.Rsi9) {
		var ret float32
		return ret
	}
	return *o.Rsi9
}

// GetRsi9Ok returns a tuple with the Rsi9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetRsi9Ok() (*float32, bool) {
	if o == nil || IsNil(o.Rsi9) {
		return nil, false
	}
	return o.Rsi9, true
}

// HasRsi9 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasRsi9() bool {
	if o != nil && !IsNil(o.Rsi9) {
		return true
	}

	return false
}

// SetRsi9 gets a reference to the given float32 and assigns it to the Rsi9 field.
func (o *StockProfilePrice) SetRsi9(v float32) {
	o.Rsi9 = &v
}

// GetSharpeRatio returns the SharpeRatio field value if set, zero value otherwise.
func (o *StockProfilePrice) GetSharpeRatio() float32 {
	if o == nil || IsNil(o.SharpeRatio) {
		var ret float32
		return ret
	}
	return *o.SharpeRatio
}

// GetSharpeRatioOk returns a tuple with the SharpeRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetSharpeRatioOk() (*float32, bool) {
	if o == nil || IsNil(o.SharpeRatio) {
		return nil, false
	}
	return o.SharpeRatio, true
}

// HasSharpeRatio returns a boolean if a field has been set.
func (o *StockProfilePrice) HasSharpeRatio() bool {
	if o != nil && !IsNil(o.SharpeRatio) {
		return true
	}

	return false
}

// SetSharpeRatio gets a reference to the given float32 and assigns it to the SharpeRatio field.
func (o *StockProfilePrice) SetSharpeRatio(v float32) {
	o.SharpeRatio = &v
}

// GetSharpeRatio10y returns the SharpeRatio10y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetSharpeRatio10y() float32 {
	if o == nil || IsNil(o.SharpeRatio10y) {
		var ret float32
		return ret
	}
	return *o.SharpeRatio10y
}

// GetSharpeRatio10yOk returns a tuple with the SharpeRatio10y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetSharpeRatio10yOk() (*float32, bool) {
	if o == nil || IsNil(o.SharpeRatio10y) {
		return nil, false
	}
	return o.SharpeRatio10y, true
}

// HasSharpeRatio10y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasSharpeRatio10y() bool {
	if o != nil && !IsNil(o.SharpeRatio10y) {
		return true
	}

	return false
}

// SetSharpeRatio10y gets a reference to the given float32 and assigns it to the SharpeRatio10y field.
func (o *StockProfilePrice) SetSharpeRatio10y(v float32) {
	o.SharpeRatio10y = &v
}

// GetSharpeRatio3y returns the SharpeRatio3y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetSharpeRatio3y() float32 {
	if o == nil || IsNil(o.SharpeRatio3y) {
		var ret float32
		return ret
	}
	return *o.SharpeRatio3y
}

// GetSharpeRatio3yOk returns a tuple with the SharpeRatio3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetSharpeRatio3yOk() (*float32, bool) {
	if o == nil || IsNil(o.SharpeRatio3y) {
		return nil, false
	}
	return o.SharpeRatio3y, true
}

// HasSharpeRatio3y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasSharpeRatio3y() bool {
	if o != nil && !IsNil(o.SharpeRatio3y) {
		return true
	}

	return false
}

// SetSharpeRatio3y gets a reference to the given float32 and assigns it to the SharpeRatio3y field.
func (o *StockProfilePrice) SetSharpeRatio3y(v float32) {
	o.SharpeRatio3y = &v
}

// GetSharpeRatio5y returns the SharpeRatio5y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetSharpeRatio5y() float32 {
	if o == nil || IsNil(o.SharpeRatio5y) {
		var ret float32
		return ret
	}
	return *o.SharpeRatio5y
}

// GetSharpeRatio5yOk returns a tuple with the SharpeRatio5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetSharpeRatio5yOk() (*float32, bool) {
	if o == nil || IsNil(o.SharpeRatio5y) {
		return nil, false
	}
	return o.SharpeRatio5y, true
}

// HasSharpeRatio5y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasSharpeRatio5y() bool {
	if o != nil && !IsNil(o.SharpeRatio5y) {
		return true
	}

	return false
}

// SetSharpeRatio5y gets a reference to the given float32 and assigns it to the SharpeRatio5y field.
func (o *StockProfilePrice) SetSharpeRatio5y(v float32) {
	o.SharpeRatio5y = &v
}

// GetSma20 returns the Sma20 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetSma20() float32 {
	if o == nil || IsNil(o.Sma20) {
		var ret float32
		return ret
	}
	return *o.Sma20
}

// GetSma20Ok returns a tuple with the Sma20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetSma20Ok() (*float32, bool) {
	if o == nil || IsNil(o.Sma20) {
		return nil, false
	}
	return o.Sma20, true
}

// HasSma20 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasSma20() bool {
	if o != nil && !IsNil(o.Sma20) {
		return true
	}

	return false
}

// SetSma20 gets a reference to the given float32 and assigns it to the Sma20 field.
func (o *StockProfilePrice) SetSma20(v float32) {
	o.Sma20 = &v
}

// GetSma200 returns the Sma200 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetSma200() float32 {
	if o == nil || IsNil(o.Sma200) {
		var ret float32
		return ret
	}
	return *o.Sma200
}

// GetSma200Ok returns a tuple with the Sma200 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetSma200Ok() (*float32, bool) {
	if o == nil || IsNil(o.Sma200) {
		return nil, false
	}
	return o.Sma200, true
}

// HasSma200 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasSma200() bool {
	if o != nil && !IsNil(o.Sma200) {
		return true
	}

	return false
}

// SetSma200 gets a reference to the given float32 and assigns it to the Sma200 field.
func (o *StockProfilePrice) SetSma200(v float32) {
	o.Sma200 = &v
}

// GetSma50 returns the Sma50 field value if set, zero value otherwise.
func (o *StockProfilePrice) GetSma50() float32 {
	if o == nil || IsNil(o.Sma50) {
		var ret float32
		return ret
	}
	return *o.Sma50
}

// GetSma50Ok returns a tuple with the Sma50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetSma50Ok() (*float32, bool) {
	if o == nil || IsNil(o.Sma50) {
		return nil, false
	}
	return o.Sma50, true
}

// HasSma50 returns a boolean if a field has been set.
func (o *StockProfilePrice) HasSma50() bool {
	if o != nil && !IsNil(o.Sma50) {
		return true
	}

	return false
}

// SetSma50 gets a reference to the given float32 and assigns it to the Sma50 field.
func (o *StockProfilePrice) SetSma50(v float32) {
	o.Sma50 = &v
}

// GetSortinoRatio10y returns the SortinoRatio10y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetSortinoRatio10y() float32 {
	if o == nil || IsNil(o.SortinoRatio10y) {
		var ret float32
		return ret
	}
	return *o.SortinoRatio10y
}

// GetSortinoRatio10yOk returns a tuple with the SortinoRatio10y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetSortinoRatio10yOk() (*float32, bool) {
	if o == nil || IsNil(o.SortinoRatio10y) {
		return nil, false
	}
	return o.SortinoRatio10y, true
}

// HasSortinoRatio10y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasSortinoRatio10y() bool {
	if o != nil && !IsNil(o.SortinoRatio10y) {
		return true
	}

	return false
}

// SetSortinoRatio10y gets a reference to the given float32 and assigns it to the SortinoRatio10y field.
func (o *StockProfilePrice) SetSortinoRatio10y(v float32) {
	o.SortinoRatio10y = &v
}

// GetSortinoRatio1y returns the SortinoRatio1y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetSortinoRatio1y() float32 {
	if o == nil || IsNil(o.SortinoRatio1y) {
		var ret float32
		return ret
	}
	return *o.SortinoRatio1y
}

// GetSortinoRatio1yOk returns a tuple with the SortinoRatio1y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetSortinoRatio1yOk() (*float32, bool) {
	if o == nil || IsNil(o.SortinoRatio1y) {
		return nil, false
	}
	return o.SortinoRatio1y, true
}

// HasSortinoRatio1y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasSortinoRatio1y() bool {
	if o != nil && !IsNil(o.SortinoRatio1y) {
		return true
	}

	return false
}

// SetSortinoRatio1y gets a reference to the given float32 and assigns it to the SortinoRatio1y field.
func (o *StockProfilePrice) SetSortinoRatio1y(v float32) {
	o.SortinoRatio1y = &v
}

// GetSortinoRatio3y returns the SortinoRatio3y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetSortinoRatio3y() float32 {
	if o == nil || IsNil(o.SortinoRatio3y) {
		var ret float32
		return ret
	}
	return *o.SortinoRatio3y
}

// GetSortinoRatio3yOk returns a tuple with the SortinoRatio3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetSortinoRatio3yOk() (*float32, bool) {
	if o == nil || IsNil(o.SortinoRatio3y) {
		return nil, false
	}
	return o.SortinoRatio3y, true
}

// HasSortinoRatio3y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasSortinoRatio3y() bool {
	if o != nil && !IsNil(o.SortinoRatio3y) {
		return true
	}

	return false
}

// SetSortinoRatio3y gets a reference to the given float32 and assigns it to the SortinoRatio3y field.
func (o *StockProfilePrice) SetSortinoRatio3y(v float32) {
	o.SortinoRatio3y = &v
}

// GetSortinoRatio5y returns the SortinoRatio5y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetSortinoRatio5y() float32 {
	if o == nil || IsNil(o.SortinoRatio5y) {
		var ret float32
		return ret
	}
	return *o.SortinoRatio5y
}

// GetSortinoRatio5yOk returns a tuple with the SortinoRatio5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetSortinoRatio5yOk() (*float32, bool) {
	if o == nil || IsNil(o.SortinoRatio5y) {
		return nil, false
	}
	return o.SortinoRatio5y, true
}

// HasSortinoRatio5y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasSortinoRatio5y() bool {
	if o != nil && !IsNil(o.SortinoRatio5y) {
		return true
	}

	return false
}

// SetSortinoRatio5y gets a reference to the given float32 and assigns it to the SortinoRatio5y field.
func (o *StockProfilePrice) SetSortinoRatio5y(v float32) {
	o.SortinoRatio5y = &v
}

// GetVolatility returns the Volatility field value if set, zero value otherwise.
func (o *StockProfilePrice) GetVolatility() float32 {
	if o == nil || IsNil(o.Volatility) {
		var ret float32
		return ret
	}
	return *o.Volatility
}

// GetVolatilityOk returns a tuple with the Volatility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetVolatilityOk() (*float32, bool) {
	if o == nil || IsNil(o.Volatility) {
		return nil, false
	}
	return o.Volatility, true
}

// HasVolatility returns a boolean if a field has been set.
func (o *StockProfilePrice) HasVolatility() bool {
	if o != nil && !IsNil(o.Volatility) {
		return true
	}

	return false
}

// SetVolatility gets a reference to the given float32 and assigns it to the Volatility field.
func (o *StockProfilePrice) SetVolatility(v float32) {
	o.Volatility = &v
}

// GetVolatility10y returns the Volatility10y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetVolatility10y() float32 {
	if o == nil || IsNil(o.Volatility10y) {
		var ret float32
		return ret
	}
	return *o.Volatility10y
}

// GetVolatility10yOk returns a tuple with the Volatility10y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetVolatility10yOk() (*float32, bool) {
	if o == nil || IsNil(o.Volatility10y) {
		return nil, false
	}
	return o.Volatility10y, true
}

// HasVolatility10y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasVolatility10y() bool {
	if o != nil && !IsNil(o.Volatility10y) {
		return true
	}

	return false
}

// SetVolatility10y gets a reference to the given float32 and assigns it to the Volatility10y field.
func (o *StockProfilePrice) SetVolatility10y(v float32) {
	o.Volatility10y = &v
}

// GetVolatility1m returns the Volatility1m field value if set, zero value otherwise.
func (o *StockProfilePrice) GetVolatility1m() float32 {
	if o == nil || IsNil(o.Volatility1m) {
		var ret float32
		return ret
	}
	return *o.Volatility1m
}

// GetVolatility1mOk returns a tuple with the Volatility1m field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetVolatility1mOk() (*float32, bool) {
	if o == nil || IsNil(o.Volatility1m) {
		return nil, false
	}
	return o.Volatility1m, true
}

// HasVolatility1m returns a boolean if a field has been set.
func (o *StockProfilePrice) HasVolatility1m() bool {
	if o != nil && !IsNil(o.Volatility1m) {
		return true
	}

	return false
}

// SetVolatility1m gets a reference to the given float32 and assigns it to the Volatility1m field.
func (o *StockProfilePrice) SetVolatility1m(v float32) {
	o.Volatility1m = &v
}

// GetVolatility1w returns the Volatility1w field value if set, zero value otherwise.
func (o *StockProfilePrice) GetVolatility1w() float32 {
	if o == nil || IsNil(o.Volatility1w) {
		var ret float32
		return ret
	}
	return *o.Volatility1w
}

// GetVolatility1wOk returns a tuple with the Volatility1w field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetVolatility1wOk() (*float32, bool) {
	if o == nil || IsNil(o.Volatility1w) {
		return nil, false
	}
	return o.Volatility1w, true
}

// HasVolatility1w returns a boolean if a field has been set.
func (o *StockProfilePrice) HasVolatility1w() bool {
	if o != nil && !IsNil(o.Volatility1w) {
		return true
	}

	return false
}

// SetVolatility1w gets a reference to the given float32 and assigns it to the Volatility1w field.
func (o *StockProfilePrice) SetVolatility1w(v float32) {
	o.Volatility1w = &v
}

// GetVolatility3y returns the Volatility3y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetVolatility3y() float32 {
	if o == nil || IsNil(o.Volatility3y) {
		var ret float32
		return ret
	}
	return *o.Volatility3y
}

// GetVolatility3yOk returns a tuple with the Volatility3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetVolatility3yOk() (*float32, bool) {
	if o == nil || IsNil(o.Volatility3y) {
		return nil, false
	}
	return o.Volatility3y, true
}

// HasVolatility3y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasVolatility3y() bool {
	if o != nil && !IsNil(o.Volatility3y) {
		return true
	}

	return false
}

// SetVolatility3y gets a reference to the given float32 and assigns it to the Volatility3y field.
func (o *StockProfilePrice) SetVolatility3y(v float32) {
	o.Volatility3y = &v
}

// GetVolatility5y returns the Volatility5y field value if set, zero value otherwise.
func (o *StockProfilePrice) GetVolatility5y() float32 {
	if o == nil || IsNil(o.Volatility5y) {
		var ret float32
		return ret
	}
	return *o.Volatility5y
}

// GetVolatility5yOk returns a tuple with the Volatility5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetVolatility5yOk() (*float32, bool) {
	if o == nil || IsNil(o.Volatility5y) {
		return nil, false
	}
	return o.Volatility5y, true
}

// HasVolatility5y returns a boolean if a field has been set.
func (o *StockProfilePrice) HasVolatility5y() bool {
	if o != nil && !IsNil(o.Volatility5y) {
		return true
	}

	return false
}

// SetVolatility5y gets a reference to the given float32 and assigns it to the Volatility5y field.
func (o *StockProfilePrice) SetVolatility5y(v float32) {
	o.Volatility5y = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *StockProfilePrice) GetVolume() float32 {
	if o == nil || IsNil(o.Volume) {
		var ret float32
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetVolumeOk() (*float32, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *StockProfilePrice) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given float32 and assigns it to the Volume field.
func (o *StockProfilePrice) SetVolume(v float32) {
	o.Volume = &v
}

// GetVolume3m returns the Volume3m field value if set, zero value otherwise.
func (o *StockProfilePrice) GetVolume3m() float32 {
	if o == nil || IsNil(o.Volume3m) {
		var ret float32
		return ret
	}
	return *o.Volume3m
}

// GetVolume3mOk returns a tuple with the Volume3m field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetVolume3mOk() (*float32, bool) {
	if o == nil || IsNil(o.Volume3m) {
		return nil, false
	}
	return o.Volume3m, true
}

// HasVolume3m returns a boolean if a field has been set.
func (o *StockProfilePrice) HasVolume3m() bool {
	if o != nil && !IsNil(o.Volume3m) {
		return true
	}

	return false
}

// SetVolume3m gets a reference to the given float32 and assigns it to the Volume3m field.
func (o *StockProfilePrice) SetVolume3m(v float32) {
	o.Volume3m = &v
}

// GetVolumeTotal returns the VolumeTotal field value if set, zero value otherwise.
func (o *StockProfilePrice) GetVolumeTotal() float32 {
	if o == nil || IsNil(o.VolumeTotal) {
		var ret float32
		return ret
	}
	return *o.VolumeTotal
}

// GetVolumeTotalOk returns a tuple with the VolumeTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetVolumeTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.VolumeTotal) {
		return nil, false
	}
	return o.VolumeTotal, true
}

// HasVolumeTotal returns a boolean if a field has been set.
func (o *StockProfilePrice) HasVolumeTotal() bool {
	if o != nil && !IsNil(o.VolumeTotal) {
		return true
	}

	return false
}

// SetVolumeTotal gets a reference to the given float32 and assigns it to the VolumeTotal field.
func (o *StockProfilePrice) SetVolumeTotal(v float32) {
	o.VolumeTotal = &v
}

// GetVolumeTotal3m returns the VolumeTotal3m field value if set, zero value otherwise.
func (o *StockProfilePrice) GetVolumeTotal3m() float32 {
	if o == nil || IsNil(o.VolumeTotal3m) {
		var ret float32
		return ret
	}
	return *o.VolumeTotal3m
}

// GetVolumeTotal3mOk returns a tuple with the VolumeTotal3m field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetVolumeTotal3mOk() (*float32, bool) {
	if o == nil || IsNil(o.VolumeTotal3m) {
		return nil, false
	}
	return o.VolumeTotal3m, true
}

// HasVolumeTotal3m returns a boolean if a field has been set.
func (o *StockProfilePrice) HasVolumeTotal3m() bool {
	if o != nil && !IsNil(o.VolumeTotal3m) {
		return true
	}

	return false
}

// SetVolumeTotal3m gets a reference to the given float32 and assigns it to the VolumeTotal3m field.
func (o *StockProfilePrice) SetVolumeTotal3m(v float32) {
	o.VolumeTotal3m = &v
}

// GetVolumnDay returns the VolumnDay field value if set, zero value otherwise.
func (o *StockProfilePrice) GetVolumnDay() float32 {
	if o == nil || IsNil(o.VolumnDay) {
		var ret float32
		return ret
	}
	return *o.VolumnDay
}

// GetVolumnDayOk returns a tuple with the VolumnDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetVolumnDayOk() (*float32, bool) {
	if o == nil || IsNil(o.VolumnDay) {
		return nil, false
	}
	return o.VolumnDay, true
}

// HasVolumnDay returns a boolean if a field has been set.
func (o *StockProfilePrice) HasVolumnDay() bool {
	if o != nil && !IsNil(o.VolumnDay) {
		return true
	}

	return false
}

// SetVolumnDay gets a reference to the given float32 and assigns it to the VolumnDay field.
func (o *StockProfilePrice) SetVolumnDay(v float32) {
	o.VolumnDay = &v
}

// GetVolumnDayTotal returns the VolumnDayTotal field value if set, zero value otherwise.
func (o *StockProfilePrice) GetVolumnDayTotal() float32 {
	if o == nil || IsNil(o.VolumnDayTotal) {
		var ret float32
		return ret
	}
	return *o.VolumnDayTotal
}

// GetVolumnDayTotalOk returns a tuple with the VolumnDayTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfilePrice) GetVolumnDayTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.VolumnDayTotal) {
		return nil, false
	}
	return o.VolumnDayTotal, true
}

// HasVolumnDayTotal returns a boolean if a field has been set.
func (o *StockProfilePrice) HasVolumnDayTotal() bool {
	if o != nil && !IsNil(o.VolumnDayTotal) {
		return true
	}

	return false
}

// SetVolumnDayTotal gets a reference to the given float32 and assigns it to the VolumnDayTotal field.
func (o *StockProfilePrice) SetVolumnDayTotal(v float32) {
	o.VolumnDayTotal = &v
}

func (o StockProfilePrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StockProfilePrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Beta) {
		toSerialize["beta"] = o.Beta
	}
	if !IsNil(o.DeathCrossEma20Vs200) {
		toSerialize["death_cross_ema_20_vs_200"] = o.DeathCrossEma20Vs200
	}
	if !IsNil(o.DeathCrossEma20Vs50) {
		toSerialize["death_cross_ema_20_vs_50"] = o.DeathCrossEma20Vs50
	}
	if !IsNil(o.DeathCrossEma50Vs200) {
		toSerialize["death_cross_ema_50_vs_200"] = o.DeathCrossEma50Vs200
	}
	if !IsNil(o.DeathCrossSma20Vs200) {
		toSerialize["death_cross_sma_20_vs_200"] = o.DeathCrossSma20Vs200
	}
	if !IsNil(o.DeathCrossSma20Vs50) {
		toSerialize["death_cross_sma_20_vs_50"] = o.DeathCrossSma20Vs50
	}
	if !IsNil(o.DeathCrossSma50Vs200) {
		toSerialize["death_cross_sma_50_vs_200"] = o.DeathCrossSma50Vs200
	}
	if !IsNil(o.DisplayTimestamp) {
		toSerialize["display_timestamp"] = o.DisplayTimestamp
	}
	if !IsNil(o.Ema20) {
		toSerialize["ema_20"] = o.Ema20
	}
	if !IsNil(o.Ema200) {
		toSerialize["ema_200"] = o.Ema200
	}
	if !IsNil(o.Ema50) {
		toSerialize["ema_50"] = o.Ema50
	}
	if !IsNil(o.Float) {
		toSerialize["float"] = o.Float
	}
	if !IsNil(o.GoldenCrossEma20Vs200) {
		toSerialize["golden_cross_ema_20_vs_200"] = o.GoldenCrossEma20Vs200
	}
	if !IsNil(o.GoldenCrossEma20Vs50) {
		toSerialize["golden_cross_ema_20_vs_50"] = o.GoldenCrossEma20Vs50
	}
	if !IsNil(o.GoldenCrossEma50Vs200) {
		toSerialize["golden_cross_ema_50_vs_200"] = o.GoldenCrossEma50Vs200
	}
	if !IsNil(o.GoldenCrossSma20Vs200) {
		toSerialize["golden_cross_sma_20_vs_200"] = o.GoldenCrossSma20Vs200
	}
	if !IsNil(o.GoldenCrossSma20Vs50) {
		toSerialize["golden_cross_sma_20_vs_50"] = o.GoldenCrossSma20Vs50
	}
	if !IsNil(o.GoldenCrossSma50Vs200) {
		toSerialize["golden_cross_sma_50_vs_200"] = o.GoldenCrossSma50Vs200
	}
	if !IsNil(o.High) {
		toSerialize["high"] = o.High
	}
	if !IsNil(o.Low) {
		toSerialize["low"] = o.Low
	}
	if !IsNil(o.MacdDeathCrossSignal) {
		toSerialize["macd_death_cross_signal"] = o.MacdDeathCrossSignal
	}
	if !IsNil(o.MacdGoldenCrossSignal) {
		toSerialize["macd_golden_cross_signal"] = o.MacdGoldenCrossSignal
	}
	if !IsNil(o.MacdLine) {
		toSerialize["macd_line"] = o.MacdLine
	}
	if !IsNil(o.MacdSignalLine) {
		toSerialize["macd_signal_line"] = o.MacdSignalLine
	}
	if !IsNil(o.Open) {
		toSerialize["open"] = o.Open
	}
	if !IsNil(o.PPctChange) {
		toSerialize["p_pct_change"] = o.PPctChange
	}
	if !IsNil(o.PchangeSP10y) {
		toSerialize["pchangeSP_10y"] = o.PchangeSP10y
	}
	if !IsNil(o.PchangeSP12w) {
		toSerialize["pchangeSP_12w"] = o.PchangeSP12w
	}
	if !IsNil(o.PchangeSP15y) {
		toSerialize["pchangeSP_15y"] = o.PchangeSP15y
	}
	if !IsNil(o.PchangeSP1w) {
		toSerialize["pchangeSP_1w"] = o.PchangeSP1w
	}
	if !IsNil(o.PchangeSP20y) {
		toSerialize["pchangeSP_20y"] = o.PchangeSP20y
	}
	if !IsNil(o.PchangeSP24w) {
		toSerialize["pchangeSP_24w"] = o.PchangeSP24w
	}
	if !IsNil(o.PchangeSP3y) {
		toSerialize["pchangeSP_3y"] = o.PchangeSP3y
	}
	if !IsNil(o.PchangeSP4w) {
		toSerialize["pchangeSP_4w"] = o.PchangeSP4w
	}
	if !IsNil(o.PchangeSP52w) {
		toSerialize["pchangeSP_52w"] = o.PchangeSP52w
	}
	if !IsNil(o.PchangeSP5y) {
		toSerialize["pchangeSP_5y"] = o.PchangeSP5y
	}
	if !IsNil(o.PchangeSPYtd) {
		toSerialize["pchangeSP_ytd"] = o.PchangeSPYtd
	}
	if !IsNil(o.Pchange10y) {
		toSerialize["pchange_10y"] = o.Pchange10y
	}
	if !IsNil(o.Pchange121m) {
		toSerialize["pchange_12_1m"] = o.Pchange121m
	}
	if !IsNil(o.Pchange12w) {
		toSerialize["pchange_12w"] = o.Pchange12w
	}
	if !IsNil(o.Pchange15y) {
		toSerialize["pchange_15y"] = o.Pchange15y
	}
	if !IsNil(o.Pchange1w) {
		toSerialize["pchange_1w"] = o.Pchange1w
	}
	if !IsNil(o.Pchange20y) {
		toSerialize["pchange_20y"] = o.Pchange20y
	}
	if !IsNil(o.Pchange24w) {
		toSerialize["pchange_24w"] = o.Pchange24w
	}
	if !IsNil(o.Pchange31m) {
		toSerialize["pchange_3_1m"] = o.Pchange31m
	}
	if !IsNil(o.Pchange3y) {
		toSerialize["pchange_3y"] = o.Pchange3y
	}
	if !IsNil(o.Pchange4w) {
		toSerialize["pchange_4w"] = o.Pchange4w
	}
	if !IsNil(o.Pchange52w) {
		toSerialize["pchange_52w"] = o.Pchange52w
	}
	if !IsNil(o.Pchange5y) {
		toSerialize["pchange_5y"] = o.Pchange5y
	}
	if !IsNil(o.Pchange61m) {
		toSerialize["pchange_6_1m"] = o.Pchange61m
	}
	if !IsNil(o.PchangeYtd) {
		toSerialize["pchange_ytd"] = o.PchangeYtd
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Price10yhigh) {
		toSerialize["price10yhigh"] = o.Price10yhigh
	}
	if !IsNil(o.Price10ylow) {
		toSerialize["price10ylow"] = o.Price10ylow
	}
	if !IsNil(o.Price3yhigh) {
		toSerialize["price3yhigh"] = o.Price3yhigh
	}
	if !IsNil(o.Price3ylow) {
		toSerialize["price3ylow"] = o.Price3ylow
	}
	if !IsNil(o.Price52whigh) {
		toSerialize["price52whigh"] = o.Price52whigh
	}
	if !IsNil(o.Price52wlow) {
		toSerialize["price52wlow"] = o.Price52wlow
	}
	if !IsNil(o.Price5yhigh) {
		toSerialize["price5yhigh"] = o.Price5yhigh
	}
	if !IsNil(o.Price5ylow) {
		toSerialize["price5ylow"] = o.Price5ylow
	}
	if !IsNil(o.PriceStdv20) {
		toSerialize["price_stdv_20"] = o.PriceStdv20
	}
	if !IsNil(o.PriceStdv200) {
		toSerialize["price_stdv_200"] = o.PriceStdv200
	}
	if !IsNil(o.PriceStdv50) {
		toSerialize["price_stdv_50"] = o.PriceStdv50
	}
	if !IsNil(o.Pricehishigh) {
		toSerialize["pricehishigh"] = o.Pricehishigh
	}
	if !IsNil(o.Pricehislow) {
		toSerialize["pricehislow"] = o.Pricehislow
	}
	if !IsNil(o.Priceindex6m) {
		toSerialize["priceindex_6m"] = o.Priceindex6m
	}
	if !IsNil(o.Rsi14) {
		toSerialize["rsi_14"] = o.Rsi14
	}
	if !IsNil(o.Rsi30) {
		toSerialize["rsi_30"] = o.Rsi30
	}
	if !IsNil(o.Rsi5) {
		toSerialize["rsi_5"] = o.Rsi5
	}
	if !IsNil(o.Rsi9) {
		toSerialize["rsi_9"] = o.Rsi9
	}
	if !IsNil(o.SharpeRatio) {
		toSerialize["sharpe_ratio"] = o.SharpeRatio
	}
	if !IsNil(o.SharpeRatio10y) {
		toSerialize["sharpe_ratio_10y"] = o.SharpeRatio10y
	}
	if !IsNil(o.SharpeRatio3y) {
		toSerialize["sharpe_ratio_3y"] = o.SharpeRatio3y
	}
	if !IsNil(o.SharpeRatio5y) {
		toSerialize["sharpe_ratio_5y"] = o.SharpeRatio5y
	}
	if !IsNil(o.Sma20) {
		toSerialize["sma_20"] = o.Sma20
	}
	if !IsNil(o.Sma200) {
		toSerialize["sma_200"] = o.Sma200
	}
	if !IsNil(o.Sma50) {
		toSerialize["sma_50"] = o.Sma50
	}
	if !IsNil(o.SortinoRatio10y) {
		toSerialize["sortino_ratio_10y"] = o.SortinoRatio10y
	}
	if !IsNil(o.SortinoRatio1y) {
		toSerialize["sortino_ratio_1y"] = o.SortinoRatio1y
	}
	if !IsNil(o.SortinoRatio3y) {
		toSerialize["sortino_ratio_3y"] = o.SortinoRatio3y
	}
	if !IsNil(o.SortinoRatio5y) {
		toSerialize["sortino_ratio_5y"] = o.SortinoRatio5y
	}
	if !IsNil(o.Volatility) {
		toSerialize["volatility"] = o.Volatility
	}
	if !IsNil(o.Volatility10y) {
		toSerialize["volatility_10y"] = o.Volatility10y
	}
	if !IsNil(o.Volatility1m) {
		toSerialize["volatility_1m"] = o.Volatility1m
	}
	if !IsNil(o.Volatility1w) {
		toSerialize["volatility_1w"] = o.Volatility1w
	}
	if !IsNil(o.Volatility3y) {
		toSerialize["volatility_3y"] = o.Volatility3y
	}
	if !IsNil(o.Volatility5y) {
		toSerialize["volatility_5y"] = o.Volatility5y
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	if !IsNil(o.Volume3m) {
		toSerialize["volume_3m"] = o.Volume3m
	}
	if !IsNil(o.VolumeTotal) {
		toSerialize["volume_total"] = o.VolumeTotal
	}
	if !IsNil(o.VolumeTotal3m) {
		toSerialize["volume_total_3m"] = o.VolumeTotal3m
	}
	if !IsNil(o.VolumnDay) {
		toSerialize["volumn_day"] = o.VolumnDay
	}
	if !IsNil(o.VolumnDayTotal) {
		toSerialize["volumn_day_total"] = o.VolumnDayTotal
	}
	return toSerialize, nil
}

type NullableStockProfilePrice struct {
	value *StockProfilePrice
	isSet bool
}

func (v NullableStockProfilePrice) Get() *StockProfilePrice {
	return v.value
}

func (v *NullableStockProfilePrice) Set(val *StockProfilePrice) {
	v.value = val
	v.isSet = true
}

func (v NullableStockProfilePrice) IsSet() bool {
	return v.isSet
}

func (v *NullableStockProfilePrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStockProfilePrice(val *StockProfilePrice) *NullableStockProfilePrice {
	return &NullableStockProfilePrice{value: val, isSet: true}
}

func (v NullableStockProfilePrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStockProfilePrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


