/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StockProfileGeneral type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StockProfileGeneral{}

// StockProfileGeneral struct for StockProfileGeneral
type StockProfileGeneral struct {
	// The date of the company's initial public offering.
	IPODate *string `json:"IPO_date,omitempty"`
	// Does the company report its cash flow statement using the direct method (cash collections, cash payments) or the indirect method (net income -> free cash flow)?
	IsDirect *string `json:"IsDirect,omitempty"`
	// A six-digit code that identifies the company's main business operation
	NAICS *float32 `json:"NAICS,omitempty"`
	// A unique 10-digit number the SEC assigns to companies, mutual funds and hedge funds
	Cik *string `json:"cik,omitempty"`
	// A unique identifier that describes the stock ticker's share class. Examples: Class A, Class C, ADR
	ClassDescpt *string `json:"class_descpt,omitempty"`
	// The name of the company as identified on its SEC filings.
	Company *string `json:"company,omitempty"`
	CompanyId *string `json:"company_id,omitempty"`
	// The country containing the company's headquarters.
	CountryIso *string `json:"country_iso,omitempty"`
	// The currency symbol used to report a company's financial data. For example, NYSE stocks have currency USD
	Currency *string `json:"currency,omitempty"`
	// The currency symbol used to report a company's financial data. For example, NYSE stocks have currency USD
	CurrencyComp *string `json:"currency_comp,omitempty"`
	DepositaryReceiptRatio *float32 `json:"depositary_receipt_ratio,omitempty"`
	// The company's stock exchange. Example: NAS for Apple.
	Exchange *string `json:"exchange,omitempty"`
	// The month representing the company's fiscal year end.
	FiscalYearEnd *float32 `json:"fiscal_year_end,omitempty"`
	Group *string `json:"group,omitempty"`
	// The company's financial statement type: either bank, insurance or nonfinancial
	IndTemplate *string `json:"ind_template,omitempty"`
	// The company's industry. Example: Discount Stores for WMT.
	Industry *string `json:"industry,omitempty"`
	// The company's latest quarter-end date
	LatestQuarter *string `json:"latest_quarter,omitempty"`
	// Does the stock offer options? If yes, the stock is \"optionable.\"
	OptionableStock *bool `json:"optionable_stock,omitempty"`
	// The stock ticker's primary exchange, which most likely connects to the company's headquarter country
	PrimaryExch *string `json:"primary_exch,omitempty"`
	PrimaryStockid *string `json:"primary_stockid,omitempty"`
	// The ticker symbol the company trades under its primary exchange
	PrimarySymbol *string `json:"primary_symbol,omitempty"`
	// How frequently does a company report its earnings?
	ReportFrequency *string `json:"report_frequency,omitempty"`
	// A three-digit code indicating a company's market sector
	Sector *string `json:"sector,omitempty"`
	// A four-digit code that classifies a company by its business type
	Sic *float32 `json:"sic,omitempty"`
	// A unique identifier for the stock
	Stockid *string `json:"stockid,omitempty"`
	// The company's stock ticker symbol
	Symbol *string `json:"symbol,omitempty"`
	// A code that determines if a security represents common stock or preferred stock
	Type *string `json:"type,omitempty"`
}

// NewStockProfileGeneral instantiates a new StockProfileGeneral object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStockProfileGeneral() *StockProfileGeneral {
	this := StockProfileGeneral{}
	return &this
}

// NewStockProfileGeneralWithDefaults instantiates a new StockProfileGeneral object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStockProfileGeneralWithDefaults() *StockProfileGeneral {
	this := StockProfileGeneral{}
	return &this
}

// GetIPODate returns the IPODate field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetIPODate() string {
	if o == nil || IsNil(o.IPODate) {
		var ret string
		return ret
	}
	return *o.IPODate
}

// GetIPODateOk returns a tuple with the IPODate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetIPODateOk() (*string, bool) {
	if o == nil || IsNil(o.IPODate) {
		return nil, false
	}
	return o.IPODate, true
}

// HasIPODate returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasIPODate() bool {
	if o != nil && !IsNil(o.IPODate) {
		return true
	}

	return false
}

// SetIPODate gets a reference to the given string and assigns it to the IPODate field.
func (o *StockProfileGeneral) SetIPODate(v string) {
	o.IPODate = &v
}

// GetIsDirect returns the IsDirect field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetIsDirect() string {
	if o == nil || IsNil(o.IsDirect) {
		var ret string
		return ret
	}
	return *o.IsDirect
}

// GetIsDirectOk returns a tuple with the IsDirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetIsDirectOk() (*string, bool) {
	if o == nil || IsNil(o.IsDirect) {
		return nil, false
	}
	return o.IsDirect, true
}

// HasIsDirect returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasIsDirect() bool {
	if o != nil && !IsNil(o.IsDirect) {
		return true
	}

	return false
}

// SetIsDirect gets a reference to the given string and assigns it to the IsDirect field.
func (o *StockProfileGeneral) SetIsDirect(v string) {
	o.IsDirect = &v
}

// GetNAICS returns the NAICS field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetNAICS() float32 {
	if o == nil || IsNil(o.NAICS) {
		var ret float32
		return ret
	}
	return *o.NAICS
}

// GetNAICSOk returns a tuple with the NAICS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetNAICSOk() (*float32, bool) {
	if o == nil || IsNil(o.NAICS) {
		return nil, false
	}
	return o.NAICS, true
}

// HasNAICS returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasNAICS() bool {
	if o != nil && !IsNil(o.NAICS) {
		return true
	}

	return false
}

// SetNAICS gets a reference to the given float32 and assigns it to the NAICS field.
func (o *StockProfileGeneral) SetNAICS(v float32) {
	o.NAICS = &v
}

// GetCik returns the Cik field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetCik() string {
	if o == nil || IsNil(o.Cik) {
		var ret string
		return ret
	}
	return *o.Cik
}

// GetCikOk returns a tuple with the Cik field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetCikOk() (*string, bool) {
	if o == nil || IsNil(o.Cik) {
		return nil, false
	}
	return o.Cik, true
}

// HasCik returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasCik() bool {
	if o != nil && !IsNil(o.Cik) {
		return true
	}

	return false
}

// SetCik gets a reference to the given string and assigns it to the Cik field.
func (o *StockProfileGeneral) SetCik(v string) {
	o.Cik = &v
}

// GetClassDescpt returns the ClassDescpt field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetClassDescpt() string {
	if o == nil || IsNil(o.ClassDescpt) {
		var ret string
		return ret
	}
	return *o.ClassDescpt
}

// GetClassDescptOk returns a tuple with the ClassDescpt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetClassDescptOk() (*string, bool) {
	if o == nil || IsNil(o.ClassDescpt) {
		return nil, false
	}
	return o.ClassDescpt, true
}

// HasClassDescpt returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasClassDescpt() bool {
	if o != nil && !IsNil(o.ClassDescpt) {
		return true
	}

	return false
}

// SetClassDescpt gets a reference to the given string and assigns it to the ClassDescpt field.
func (o *StockProfileGeneral) SetClassDescpt(v string) {
	o.ClassDescpt = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *StockProfileGeneral) SetCompany(v string) {
	o.Company = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetCompanyId() string {
	if o == nil || IsNil(o.CompanyId) {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetCompanyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *StockProfileGeneral) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetCountryIso returns the CountryIso field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetCountryIso() string {
	if o == nil || IsNil(o.CountryIso) {
		var ret string
		return ret
	}
	return *o.CountryIso
}

// GetCountryIsoOk returns a tuple with the CountryIso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetCountryIsoOk() (*string, bool) {
	if o == nil || IsNil(o.CountryIso) {
		return nil, false
	}
	return o.CountryIso, true
}

// HasCountryIso returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasCountryIso() bool {
	if o != nil && !IsNil(o.CountryIso) {
		return true
	}

	return false
}

// SetCountryIso gets a reference to the given string and assigns it to the CountryIso field.
func (o *StockProfileGeneral) SetCountryIso(v string) {
	o.CountryIso = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *StockProfileGeneral) SetCurrency(v string) {
	o.Currency = &v
}

// GetCurrencyComp returns the CurrencyComp field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetCurrencyComp() string {
	if o == nil || IsNil(o.CurrencyComp) {
		var ret string
		return ret
	}
	return *o.CurrencyComp
}

// GetCurrencyCompOk returns a tuple with the CurrencyComp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetCurrencyCompOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyComp) {
		return nil, false
	}
	return o.CurrencyComp, true
}

// HasCurrencyComp returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasCurrencyComp() bool {
	if o != nil && !IsNil(o.CurrencyComp) {
		return true
	}

	return false
}

// SetCurrencyComp gets a reference to the given string and assigns it to the CurrencyComp field.
func (o *StockProfileGeneral) SetCurrencyComp(v string) {
	o.CurrencyComp = &v
}

// GetDepositaryReceiptRatio returns the DepositaryReceiptRatio field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetDepositaryReceiptRatio() float32 {
	if o == nil || IsNil(o.DepositaryReceiptRatio) {
		var ret float32
		return ret
	}
	return *o.DepositaryReceiptRatio
}

// GetDepositaryReceiptRatioOk returns a tuple with the DepositaryReceiptRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetDepositaryReceiptRatioOk() (*float32, bool) {
	if o == nil || IsNil(o.DepositaryReceiptRatio) {
		return nil, false
	}
	return o.DepositaryReceiptRatio, true
}

// HasDepositaryReceiptRatio returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasDepositaryReceiptRatio() bool {
	if o != nil && !IsNil(o.DepositaryReceiptRatio) {
		return true
	}

	return false
}

// SetDepositaryReceiptRatio gets a reference to the given float32 and assigns it to the DepositaryReceiptRatio field.
func (o *StockProfileGeneral) SetDepositaryReceiptRatio(v float32) {
	o.DepositaryReceiptRatio = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetExchange() string {
	if o == nil || IsNil(o.Exchange) {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetExchangeOk() (*string, bool) {
	if o == nil || IsNil(o.Exchange) {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasExchange() bool {
	if o != nil && !IsNil(o.Exchange) {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *StockProfileGeneral) SetExchange(v string) {
	o.Exchange = &v
}

// GetFiscalYearEnd returns the FiscalYearEnd field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetFiscalYearEnd() float32 {
	if o == nil || IsNil(o.FiscalYearEnd) {
		var ret float32
		return ret
	}
	return *o.FiscalYearEnd
}

// GetFiscalYearEndOk returns a tuple with the FiscalYearEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetFiscalYearEndOk() (*float32, bool) {
	if o == nil || IsNil(o.FiscalYearEnd) {
		return nil, false
	}
	return o.FiscalYearEnd, true
}

// HasFiscalYearEnd returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasFiscalYearEnd() bool {
	if o != nil && !IsNil(o.FiscalYearEnd) {
		return true
	}

	return false
}

// SetFiscalYearEnd gets a reference to the given float32 and assigns it to the FiscalYearEnd field.
func (o *StockProfileGeneral) SetFiscalYearEnd(v float32) {
	o.FiscalYearEnd = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *StockProfileGeneral) SetGroup(v string) {
	o.Group = &v
}

// GetIndTemplate returns the IndTemplate field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetIndTemplate() string {
	if o == nil || IsNil(o.IndTemplate) {
		var ret string
		return ret
	}
	return *o.IndTemplate
}

// GetIndTemplateOk returns a tuple with the IndTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetIndTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.IndTemplate) {
		return nil, false
	}
	return o.IndTemplate, true
}

// HasIndTemplate returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasIndTemplate() bool {
	if o != nil && !IsNil(o.IndTemplate) {
		return true
	}

	return false
}

// SetIndTemplate gets a reference to the given string and assigns it to the IndTemplate field.
func (o *StockProfileGeneral) SetIndTemplate(v string) {
	o.IndTemplate = &v
}

// GetIndustry returns the Industry field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetIndustry() string {
	if o == nil || IsNil(o.Industry) {
		var ret string
		return ret
	}
	return *o.Industry
}

// GetIndustryOk returns a tuple with the Industry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetIndustryOk() (*string, bool) {
	if o == nil || IsNil(o.Industry) {
		return nil, false
	}
	return o.Industry, true
}

// HasIndustry returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasIndustry() bool {
	if o != nil && !IsNil(o.Industry) {
		return true
	}

	return false
}

// SetIndustry gets a reference to the given string and assigns it to the Industry field.
func (o *StockProfileGeneral) SetIndustry(v string) {
	o.Industry = &v
}

// GetLatestQuarter returns the LatestQuarter field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetLatestQuarter() string {
	if o == nil || IsNil(o.LatestQuarter) {
		var ret string
		return ret
	}
	return *o.LatestQuarter
}

// GetLatestQuarterOk returns a tuple with the LatestQuarter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetLatestQuarterOk() (*string, bool) {
	if o == nil || IsNil(o.LatestQuarter) {
		return nil, false
	}
	return o.LatestQuarter, true
}

// HasLatestQuarter returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasLatestQuarter() bool {
	if o != nil && !IsNil(o.LatestQuarter) {
		return true
	}

	return false
}

// SetLatestQuarter gets a reference to the given string and assigns it to the LatestQuarter field.
func (o *StockProfileGeneral) SetLatestQuarter(v string) {
	o.LatestQuarter = &v
}

// GetOptionableStock returns the OptionableStock field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetOptionableStock() bool {
	if o == nil || IsNil(o.OptionableStock) {
		var ret bool
		return ret
	}
	return *o.OptionableStock
}

// GetOptionableStockOk returns a tuple with the OptionableStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetOptionableStockOk() (*bool, bool) {
	if o == nil || IsNil(o.OptionableStock) {
		return nil, false
	}
	return o.OptionableStock, true
}

// HasOptionableStock returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasOptionableStock() bool {
	if o != nil && !IsNil(o.OptionableStock) {
		return true
	}

	return false
}

// SetOptionableStock gets a reference to the given bool and assigns it to the OptionableStock field.
func (o *StockProfileGeneral) SetOptionableStock(v bool) {
	o.OptionableStock = &v
}

// GetPrimaryExch returns the PrimaryExch field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetPrimaryExch() string {
	if o == nil || IsNil(o.PrimaryExch) {
		var ret string
		return ret
	}
	return *o.PrimaryExch
}

// GetPrimaryExchOk returns a tuple with the PrimaryExch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetPrimaryExchOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryExch) {
		return nil, false
	}
	return o.PrimaryExch, true
}

// HasPrimaryExch returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasPrimaryExch() bool {
	if o != nil && !IsNil(o.PrimaryExch) {
		return true
	}

	return false
}

// SetPrimaryExch gets a reference to the given string and assigns it to the PrimaryExch field.
func (o *StockProfileGeneral) SetPrimaryExch(v string) {
	o.PrimaryExch = &v
}

// GetPrimaryStockid returns the PrimaryStockid field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetPrimaryStockid() string {
	if o == nil || IsNil(o.PrimaryStockid) {
		var ret string
		return ret
	}
	return *o.PrimaryStockid
}

// GetPrimaryStockidOk returns a tuple with the PrimaryStockid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetPrimaryStockidOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryStockid) {
		return nil, false
	}
	return o.PrimaryStockid, true
}

// HasPrimaryStockid returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasPrimaryStockid() bool {
	if o != nil && !IsNil(o.PrimaryStockid) {
		return true
	}

	return false
}

// SetPrimaryStockid gets a reference to the given string and assigns it to the PrimaryStockid field.
func (o *StockProfileGeneral) SetPrimaryStockid(v string) {
	o.PrimaryStockid = &v
}

// GetPrimarySymbol returns the PrimarySymbol field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetPrimarySymbol() string {
	if o == nil || IsNil(o.PrimarySymbol) {
		var ret string
		return ret
	}
	return *o.PrimarySymbol
}

// GetPrimarySymbolOk returns a tuple with the PrimarySymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetPrimarySymbolOk() (*string, bool) {
	if o == nil || IsNil(o.PrimarySymbol) {
		return nil, false
	}
	return o.PrimarySymbol, true
}

// HasPrimarySymbol returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasPrimarySymbol() bool {
	if o != nil && !IsNil(o.PrimarySymbol) {
		return true
	}

	return false
}

// SetPrimarySymbol gets a reference to the given string and assigns it to the PrimarySymbol field.
func (o *StockProfileGeneral) SetPrimarySymbol(v string) {
	o.PrimarySymbol = &v
}

// GetReportFrequency returns the ReportFrequency field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetReportFrequency() string {
	if o == nil || IsNil(o.ReportFrequency) {
		var ret string
		return ret
	}
	return *o.ReportFrequency
}

// GetReportFrequencyOk returns a tuple with the ReportFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetReportFrequencyOk() (*string, bool) {
	if o == nil || IsNil(o.ReportFrequency) {
		return nil, false
	}
	return o.ReportFrequency, true
}

// HasReportFrequency returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasReportFrequency() bool {
	if o != nil && !IsNil(o.ReportFrequency) {
		return true
	}

	return false
}

// SetReportFrequency gets a reference to the given string and assigns it to the ReportFrequency field.
func (o *StockProfileGeneral) SetReportFrequency(v string) {
	o.ReportFrequency = &v
}

// GetSector returns the Sector field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetSector() string {
	if o == nil || IsNil(o.Sector) {
		var ret string
		return ret
	}
	return *o.Sector
}

// GetSectorOk returns a tuple with the Sector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetSectorOk() (*string, bool) {
	if o == nil || IsNil(o.Sector) {
		return nil, false
	}
	return o.Sector, true
}

// HasSector returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasSector() bool {
	if o != nil && !IsNil(o.Sector) {
		return true
	}

	return false
}

// SetSector gets a reference to the given string and assigns it to the Sector field.
func (o *StockProfileGeneral) SetSector(v string) {
	o.Sector = &v
}

// GetSic returns the Sic field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetSic() float32 {
	if o == nil || IsNil(o.Sic) {
		var ret float32
		return ret
	}
	return *o.Sic
}

// GetSicOk returns a tuple with the Sic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetSicOk() (*float32, bool) {
	if o == nil || IsNil(o.Sic) {
		return nil, false
	}
	return o.Sic, true
}

// HasSic returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasSic() bool {
	if o != nil && !IsNil(o.Sic) {
		return true
	}

	return false
}

// SetSic gets a reference to the given float32 and assigns it to the Sic field.
func (o *StockProfileGeneral) SetSic(v float32) {
	o.Sic = &v
}

// GetStockid returns the Stockid field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetStockid() string {
	if o == nil || IsNil(o.Stockid) {
		var ret string
		return ret
	}
	return *o.Stockid
}

// GetStockidOk returns a tuple with the Stockid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetStockidOk() (*string, bool) {
	if o == nil || IsNil(o.Stockid) {
		return nil, false
	}
	return o.Stockid, true
}

// HasStockid returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasStockid() bool {
	if o != nil && !IsNil(o.Stockid) {
		return true
	}

	return false
}

// SetStockid gets a reference to the given string and assigns it to the Stockid field.
func (o *StockProfileGeneral) SetStockid(v string) {
	o.Stockid = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *StockProfileGeneral) SetSymbol(v string) {
	o.Symbol = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *StockProfileGeneral) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileGeneral) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *StockProfileGeneral) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *StockProfileGeneral) SetType(v string) {
	o.Type = &v
}

func (o StockProfileGeneral) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StockProfileGeneral) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IPODate) {
		toSerialize["IPO_date"] = o.IPODate
	}
	if !IsNil(o.IsDirect) {
		toSerialize["IsDirect"] = o.IsDirect
	}
	if !IsNil(o.NAICS) {
		toSerialize["NAICS"] = o.NAICS
	}
	if !IsNil(o.Cik) {
		toSerialize["cik"] = o.Cik
	}
	if !IsNil(o.ClassDescpt) {
		toSerialize["class_descpt"] = o.ClassDescpt
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	if !IsNil(o.CountryIso) {
		toSerialize["country_iso"] = o.CountryIso
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.CurrencyComp) {
		toSerialize["currency_comp"] = o.CurrencyComp
	}
	if !IsNil(o.DepositaryReceiptRatio) {
		toSerialize["depositary_receipt_ratio"] = o.DepositaryReceiptRatio
	}
	if !IsNil(o.Exchange) {
		toSerialize["exchange"] = o.Exchange
	}
	if !IsNil(o.FiscalYearEnd) {
		toSerialize["fiscal_year_end"] = o.FiscalYearEnd
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.IndTemplate) {
		toSerialize["ind_template"] = o.IndTemplate
	}
	if !IsNil(o.Industry) {
		toSerialize["industry"] = o.Industry
	}
	if !IsNil(o.LatestQuarter) {
		toSerialize["latest_quarter"] = o.LatestQuarter
	}
	if !IsNil(o.OptionableStock) {
		toSerialize["optionable_stock"] = o.OptionableStock
	}
	if !IsNil(o.PrimaryExch) {
		toSerialize["primary_exch"] = o.PrimaryExch
	}
	if !IsNil(o.PrimaryStockid) {
		toSerialize["primary_stockid"] = o.PrimaryStockid
	}
	if !IsNil(o.PrimarySymbol) {
		toSerialize["primary_symbol"] = o.PrimarySymbol
	}
	if !IsNil(o.ReportFrequency) {
		toSerialize["report_frequency"] = o.ReportFrequency
	}
	if !IsNil(o.Sector) {
		toSerialize["sector"] = o.Sector
	}
	if !IsNil(o.Sic) {
		toSerialize["sic"] = o.Sic
	}
	if !IsNil(o.Stockid) {
		toSerialize["stockid"] = o.Stockid
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableStockProfileGeneral struct {
	value *StockProfileGeneral
	isSet bool
}

func (v NullableStockProfileGeneral) Get() *StockProfileGeneral {
	return v.value
}

func (v *NullableStockProfileGeneral) Set(val *StockProfileGeneral) {
	v.value = val
	v.isSet = true
}

func (v NullableStockProfileGeneral) IsSet() bool {
	return v.isSet
}

func (v *NullableStockProfileGeneral) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStockProfileGeneral(val *StockProfileGeneral) *NullableStockProfileGeneral {
	return &NullableStockProfileGeneral{value: val, isSet: true}
}

func (v NullableStockProfileGeneral) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStockProfileGeneral) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


