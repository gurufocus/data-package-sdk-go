/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DownloadIdGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DownloadIdGet200Response{}

// DownloadIdGet200Response struct for DownloadIdGet200Response
type DownloadIdGet200Response struct {
	Expiration *time.Time `json:"expiration,omitempty"`
	Id *string `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewDownloadIdGet200Response instantiates a new DownloadIdGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownloadIdGet200Response() *DownloadIdGet200Response {
	this := DownloadIdGet200Response{}
	return &this
}

// NewDownloadIdGet200ResponseWithDefaults instantiates a new DownloadIdGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadIdGet200ResponseWithDefaults() *DownloadIdGet200Response {
	this := DownloadIdGet200Response{}
	return &this
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *DownloadIdGet200Response) GetExpiration() time.Time {
	if o == nil || IsNil(o.Expiration) {
		var ret time.Time
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadIdGet200Response) GetExpirationOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *DownloadIdGet200Response) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given time.Time and assigns it to the Expiration field.
func (o *DownloadIdGet200Response) SetExpiration(v time.Time) {
	o.Expiration = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DownloadIdGet200Response) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadIdGet200Response) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DownloadIdGet200Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DownloadIdGet200Response) SetId(v string) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *DownloadIdGet200Response) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadIdGet200Response) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *DownloadIdGet200Response) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *DownloadIdGet200Response) SetUrl(v string) {
	o.Url = &v
}

func (o DownloadIdGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DownloadIdGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableDownloadIdGet200Response struct {
	value *DownloadIdGet200Response
	isSet bool
}

func (v NullableDownloadIdGet200Response) Get() *DownloadIdGet200Response {
	return v.value
}

func (v *NullableDownloadIdGet200Response) Set(val *DownloadIdGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDownloadIdGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDownloadIdGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownloadIdGet200Response(val *DownloadIdGet200Response) *NullableDownloadIdGet200Response {
	return &NullableDownloadIdGet200Response{value: val, isSet: true}
}

func (v NullableDownloadIdGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownloadIdGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


