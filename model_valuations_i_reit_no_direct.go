/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ValuationsIREITNODIRECT type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValuationsIREITNODIRECT{}

// ValuationsIREITNODIRECT struct for ValuationsIREITNODIRECT
type ValuationsIREITNODIRECT struct {
	BasicInformation *ValuationsIREITNODIRECTBasicInformation `json:"basic_information,omitempty"`
	PerShareData *ValuationsIREITNODIRECTPerShareData `json:"per_share_data,omitempty"`
	Ratios *ValuationsIREITNODIRECTRatios `json:"ratios,omitempty"`
	ValuationRatios *ValuationsIREITNODIRECTValuationRatios `json:"valuation_ratios,omitempty"`
	ValuationandQuality *ValuationsIREITNODIRECTValuationandQuality `json:"valuationand_quality,omitempty"`
}

// NewValuationsIREITNODIRECT instantiates a new ValuationsIREITNODIRECT object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValuationsIREITNODIRECT() *ValuationsIREITNODIRECT {
	this := ValuationsIREITNODIRECT{}
	return &this
}

// NewValuationsIREITNODIRECTWithDefaults instantiates a new ValuationsIREITNODIRECT object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValuationsIREITNODIRECTWithDefaults() *ValuationsIREITNODIRECT {
	this := ValuationsIREITNODIRECT{}
	return &this
}

// GetBasicInformation returns the BasicInformation field value if set, zero value otherwise.
func (o *ValuationsIREITNODIRECT) GetBasicInformation() ValuationsIREITNODIRECTBasicInformation {
	if o == nil || IsNil(o.BasicInformation) {
		var ret ValuationsIREITNODIRECTBasicInformation
		return ret
	}
	return *o.BasicInformation
}

// GetBasicInformationOk returns a tuple with the BasicInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValuationsIREITNODIRECT) GetBasicInformationOk() (*ValuationsIREITNODIRECTBasicInformation, bool) {
	if o == nil || IsNil(o.BasicInformation) {
		return nil, false
	}
	return o.BasicInformation, true
}

// HasBasicInformation returns a boolean if a field has been set.
func (o *ValuationsIREITNODIRECT) HasBasicInformation() bool {
	if o != nil && !IsNil(o.BasicInformation) {
		return true
	}

	return false
}

// SetBasicInformation gets a reference to the given ValuationsIREITNODIRECTBasicInformation and assigns it to the BasicInformation field.
func (o *ValuationsIREITNODIRECT) SetBasicInformation(v ValuationsIREITNODIRECTBasicInformation) {
	o.BasicInformation = &v
}

// GetPerShareData returns the PerShareData field value if set, zero value otherwise.
func (o *ValuationsIREITNODIRECT) GetPerShareData() ValuationsIREITNODIRECTPerShareData {
	if o == nil || IsNil(o.PerShareData) {
		var ret ValuationsIREITNODIRECTPerShareData
		return ret
	}
	return *o.PerShareData
}

// GetPerShareDataOk returns a tuple with the PerShareData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValuationsIREITNODIRECT) GetPerShareDataOk() (*ValuationsIREITNODIRECTPerShareData, bool) {
	if o == nil || IsNil(o.PerShareData) {
		return nil, false
	}
	return o.PerShareData, true
}

// HasPerShareData returns a boolean if a field has been set.
func (o *ValuationsIREITNODIRECT) HasPerShareData() bool {
	if o != nil && !IsNil(o.PerShareData) {
		return true
	}

	return false
}

// SetPerShareData gets a reference to the given ValuationsIREITNODIRECTPerShareData and assigns it to the PerShareData field.
func (o *ValuationsIREITNODIRECT) SetPerShareData(v ValuationsIREITNODIRECTPerShareData) {
	o.PerShareData = &v
}

// GetRatios returns the Ratios field value if set, zero value otherwise.
func (o *ValuationsIREITNODIRECT) GetRatios() ValuationsIREITNODIRECTRatios {
	if o == nil || IsNil(o.Ratios) {
		var ret ValuationsIREITNODIRECTRatios
		return ret
	}
	return *o.Ratios
}

// GetRatiosOk returns a tuple with the Ratios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValuationsIREITNODIRECT) GetRatiosOk() (*ValuationsIREITNODIRECTRatios, bool) {
	if o == nil || IsNil(o.Ratios) {
		return nil, false
	}
	return o.Ratios, true
}

// HasRatios returns a boolean if a field has been set.
func (o *ValuationsIREITNODIRECT) HasRatios() bool {
	if o != nil && !IsNil(o.Ratios) {
		return true
	}

	return false
}

// SetRatios gets a reference to the given ValuationsIREITNODIRECTRatios and assigns it to the Ratios field.
func (o *ValuationsIREITNODIRECT) SetRatios(v ValuationsIREITNODIRECTRatios) {
	o.Ratios = &v
}

// GetValuationRatios returns the ValuationRatios field value if set, zero value otherwise.
func (o *ValuationsIREITNODIRECT) GetValuationRatios() ValuationsIREITNODIRECTValuationRatios {
	if o == nil || IsNil(o.ValuationRatios) {
		var ret ValuationsIREITNODIRECTValuationRatios
		return ret
	}
	return *o.ValuationRatios
}

// GetValuationRatiosOk returns a tuple with the ValuationRatios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValuationsIREITNODIRECT) GetValuationRatiosOk() (*ValuationsIREITNODIRECTValuationRatios, bool) {
	if o == nil || IsNil(o.ValuationRatios) {
		return nil, false
	}
	return o.ValuationRatios, true
}

// HasValuationRatios returns a boolean if a field has been set.
func (o *ValuationsIREITNODIRECT) HasValuationRatios() bool {
	if o != nil && !IsNil(o.ValuationRatios) {
		return true
	}

	return false
}

// SetValuationRatios gets a reference to the given ValuationsIREITNODIRECTValuationRatios and assigns it to the ValuationRatios field.
func (o *ValuationsIREITNODIRECT) SetValuationRatios(v ValuationsIREITNODIRECTValuationRatios) {
	o.ValuationRatios = &v
}

// GetValuationandQuality returns the ValuationandQuality field value if set, zero value otherwise.
func (o *ValuationsIREITNODIRECT) GetValuationandQuality() ValuationsIREITNODIRECTValuationandQuality {
	if o == nil || IsNil(o.ValuationandQuality) {
		var ret ValuationsIREITNODIRECTValuationandQuality
		return ret
	}
	return *o.ValuationandQuality
}

// GetValuationandQualityOk returns a tuple with the ValuationandQuality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValuationsIREITNODIRECT) GetValuationandQualityOk() (*ValuationsIREITNODIRECTValuationandQuality, bool) {
	if o == nil || IsNil(o.ValuationandQuality) {
		return nil, false
	}
	return o.ValuationandQuality, true
}

// HasValuationandQuality returns a boolean if a field has been set.
func (o *ValuationsIREITNODIRECT) HasValuationandQuality() bool {
	if o != nil && !IsNil(o.ValuationandQuality) {
		return true
	}

	return false
}

// SetValuationandQuality gets a reference to the given ValuationsIREITNODIRECTValuationandQuality and assigns it to the ValuationandQuality field.
func (o *ValuationsIREITNODIRECT) SetValuationandQuality(v ValuationsIREITNODIRECTValuationandQuality) {
	o.ValuationandQuality = &v
}

func (o ValuationsIREITNODIRECT) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValuationsIREITNODIRECT) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BasicInformation) {
		toSerialize["basic_information"] = o.BasicInformation
	}
	if !IsNil(o.PerShareData) {
		toSerialize["per_share_data"] = o.PerShareData
	}
	if !IsNil(o.Ratios) {
		toSerialize["ratios"] = o.Ratios
	}
	if !IsNil(o.ValuationRatios) {
		toSerialize["valuation_ratios"] = o.ValuationRatios
	}
	if !IsNil(o.ValuationandQuality) {
		toSerialize["valuationand_quality"] = o.ValuationandQuality
	}
	return toSerialize, nil
}

type NullableValuationsIREITNODIRECT struct {
	value *ValuationsIREITNODIRECT
	isSet bool
}

func (v NullableValuationsIREITNODIRECT) Get() *ValuationsIREITNODIRECT {
	return v.value
}

func (v *NullableValuationsIREITNODIRECT) Set(val *ValuationsIREITNODIRECT) {
	v.value = val
	v.isSet = true
}

func (v NullableValuationsIREITNODIRECT) IsSet() bool {
	return v.isSet
}

func (v *NullableValuationsIREITNODIRECT) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValuationsIREITNODIRECT(val *ValuationsIREITNODIRECT) *NullableValuationsIREITNODIRECT {
	return &NullableValuationsIREITNODIRECT{value: val, isSet: true}
}

func (v NullableValuationsIREITNODIRECT) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValuationsIREITNODIRECT) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


