/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EtfEtfSectorBreakdowns type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EtfEtfSectorBreakdowns{}

// EtfEtfSectorBreakdowns struct for EtfEtfSectorBreakdowns
type EtfEtfSectorBreakdowns struct {
	Details map[string]interface{} `json:"details,omitempty"`
	// Portfolio date
	Portdate *string `json:"portdate,omitempty"`
}

// NewEtfEtfSectorBreakdowns instantiates a new EtfEtfSectorBreakdowns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEtfEtfSectorBreakdowns() *EtfEtfSectorBreakdowns {
	this := EtfEtfSectorBreakdowns{}
	return &this
}

// NewEtfEtfSectorBreakdownsWithDefaults instantiates a new EtfEtfSectorBreakdowns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEtfEtfSectorBreakdownsWithDefaults() *EtfEtfSectorBreakdowns {
	this := EtfEtfSectorBreakdowns{}
	return &this
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *EtfEtfSectorBreakdowns) GetDetails() map[string]interface{} {
	if o == nil || IsNil(o.Details) {
		var ret map[string]interface{}
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfSectorBreakdowns) GetDetailsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Details) {
		return map[string]interface{}{}, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *EtfEtfSectorBreakdowns) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given map[string]interface{} and assigns it to the Details field.
func (o *EtfEtfSectorBreakdowns) SetDetails(v map[string]interface{}) {
	o.Details = v
}

// GetPortdate returns the Portdate field value if set, zero value otherwise.
func (o *EtfEtfSectorBreakdowns) GetPortdate() string {
	if o == nil || IsNil(o.Portdate) {
		var ret string
		return ret
	}
	return *o.Portdate
}

// GetPortdateOk returns a tuple with the Portdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfSectorBreakdowns) GetPortdateOk() (*string, bool) {
	if o == nil || IsNil(o.Portdate) {
		return nil, false
	}
	return o.Portdate, true
}

// HasPortdate returns a boolean if a field has been set.
func (o *EtfEtfSectorBreakdowns) HasPortdate() bool {
	if o != nil && !IsNil(o.Portdate) {
		return true
	}

	return false
}

// SetPortdate gets a reference to the given string and assigns it to the Portdate field.
func (o *EtfEtfSectorBreakdowns) SetPortdate(v string) {
	o.Portdate = &v
}

func (o EtfEtfSectorBreakdowns) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EtfEtfSectorBreakdowns) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Portdate) {
		toSerialize["portdate"] = o.Portdate
	}
	return toSerialize, nil
}

type NullableEtfEtfSectorBreakdowns struct {
	value *EtfEtfSectorBreakdowns
	isSet bool
}

func (v NullableEtfEtfSectorBreakdowns) Get() *EtfEtfSectorBreakdowns {
	return v.value
}

func (v *NullableEtfEtfSectorBreakdowns) Set(val *EtfEtfSectorBreakdowns) {
	v.value = val
	v.isSet = true
}

func (v NullableEtfEtfSectorBreakdowns) IsSet() bool {
	return v.isSet
}

func (v *NullableEtfEtfSectorBreakdowns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEtfEtfSectorBreakdowns(val *EtfEtfSectorBreakdowns) *NullableEtfEtfSectorBreakdowns {
	return &NullableEtfEtfSectorBreakdowns{value: val, isSet: true}
}

func (v NullableEtfEtfSectorBreakdowns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEtfEtfSectorBreakdowns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


