/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StockProfileProfitability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StockProfileProfitability{}

// StockProfileProfitability struct for StockProfileProfitability
type StockProfileProfitability struct {
	// FCF Margin is calculated as Free Cash Flow divided by total Revenue.
	FCFmargin *float32 `json:"FCFmargin,omitempty"`
	// The FCF Margin % (10y High) refers to the highest value of the FCF Margin over a 10-year period, where FCF Margin is calculated as Free Cash Flow divided by total Revenue.
	FCFmarginHigh *float32 `json:"FCFmargin_high,omitempty"`
	// The FCF Margin % (10y Low) refers to the lowest value of FCF Margin over a 10-year period, where FCF Margin is calculated as Free Cash Flow divided by total Revenue.
	FCFmarginLow *float32 `json:"FCFmargin_low,omitempty"`
	// The FCF Margin % (10y Median) refers to the median value of FCF Margin over a 10-year period, where FCF Margin is calculated as Free Cash Flow divided by total Revenue.
	FCFmarginMed *float32 `json:"FCFmargin_med,omitempty"`
	// The median free cash flow margin over the past five years
	FCFmarginMed5y *float32 `json:"FCFmargin_med_5y,omitempty"`
	// Net interest margin is a performance metric that examines how successful a firm's investment decisions are compared to its debt situations.
	NetInterestMargin *float32 `json:"NetInterestMargin,omitempty"`
	// Cash Conversion Ratio is calculated as Free Cash Flow divided by Net Income.
	CashConversionRatio *float32 `json:"cash_conversion_ratio,omitempty"`
	// The Cash Conversion Ratio (10y High) refers to the highest value of the Cash Conversion Ratio over a 10-year period, where Cash Conversion Ratio is calculated as Free Cash Flow divided by Net Income.
	CashConversionRatioHigh *float32 `json:"cash_conversion_ratio_high,omitempty"`
	// The Cash Conversion Ratio (10y Low) refers to the lowest value of Cash Conversion Ratio over a 10-year period, where Cash Conversion Ratio is calculated as Free Cash Flow divided by Net Income.
	CashConversionRatioLow *float32 `json:"cash_conversion_ratio_low,omitempty"`
	// The Cash Conversion Ratio (10y Median) refers to the median value of Cash Conversion Ratio over a 10-year period, where Cash Conversion Ratio is calculated as Free Cash Flow divided by Net Income.
	CashConversionRatioMed *float32 `json:"cash_conversion_ratio_med,omitempty"`
	// The Cash Conversion Ratio (5y Median) refers to the median value of Cash Conversion Ratio over a 5-year period, where Cash Conversion Ratio is calculated as Free Cash Flow divided by Net Income.
	CashConversionRatioMed5y *float32 `json:"cash_conversion_ratio_med_5y,omitempty"`
	EbitMargin *float32 `json:"ebit_margin,omitempty"`
	EbitMarginHigh *float32 `json:"ebit_margin_high,omitempty"`
	EbitMarginLow *float32 `json:"ebit_margin_low,omitempty"`
	EbitMarginMed *float32 `json:"ebit_margin_med,omitempty"`
	EbitdaMargin *float32 `json:"ebitda_margin,omitempty"`
	EbitdaMarginHigh *float32 `json:"ebitda_margin_high,omitempty"`
	EbitdaMarginLow *float32 `json:"ebitda_margin_low,omitempty"`
	EbitdaMarginMed *float32 `json:"ebitda_margin_med,omitempty"`
	FcfYearNum *float32 `json:"fcf_year_num,omitempty"`
	// Gross Margin % is calculated as gross profit divided by its revenue.
	Grossmargin *float32 `json:"grossmargin,omitempty"`
	// Gross Margin % is calculated as gross profit divided by its revenue.
	GrossmarginHigh *float32 `json:"grossmargin_high,omitempty"`
	// Gross Margin % is calculated as gross profit divided by its revenue.
	GrossmarginLow *float32 `json:"grossmargin_low,omitempty"`
	// Gross Margin % is calculated as gross profit divided by its revenue.
	GrossmarginMed *float32 `json:"grossmargin_med,omitempty"`
	// The Gross Margin % (5y Median) refers to the median value of the gross margin over a period of five years, where gross margin is calculated as gross profit divided by its revenue.
	GrossmarginMed5y *float32 `json:"grossmargin_med_5y,omitempty"`
	// Net margin is calculated as Net Income divided by its Revenue.
	NetMargain *float32 `json:"net_margain,omitempty"`
	// Net margin is calculated as Net Income divided by its Revenue.
	NetMargainHigh *float32 `json:"net_margain_high,omitempty"`
	// Net margin is calculated as Net Income divided by its Revenue.
	NetMargainLow *float32 `json:"net_margain_low,omitempty"`
	// Net margin is calculated as Net Income divided by its Revenue.
	NetMargainMed *float32 `json:"net_margain_med,omitempty"`
	// The Net Margin % (5y Median) refers to the median value of the net margin over a period of five years, where net margin is calculated as net Income divided by its revenue.
	NetMargainMed5y *float32 `json:"net_margain_med_5y,omitempty"`
	// Operating Margin % is calculated as Operating Income divided by its Revenue.
	OprtMargain *float32 `json:"oprt_margain,omitempty"`
	// Operating Margin % is calculated as Operating Income divided by its Revenue.
	OprtMargainHigh *float32 `json:"oprt_margain_high,omitempty"`
	// Operating Margin % is calculated as Operating Income divided by its Revenue.
	OprtMargainLow *float32 `json:"oprt_margain_low,omitempty"`
	// Operating Margin % is calculated as Operating Income divided by its Revenue.
	OprtMargainMed *float32 `json:"oprt_margain_med,omitempty"`
	// Operating Margin % is calculated as Operating Income divided by its Revenue.
	OprtMargainMed5y *float32 `json:"oprt_margain_med_5y,omitempty"`
	// The company's pretax earnings divided by total revenue
	PretaxMargain *float32 `json:"pretax_margain,omitempty"`
	// The highest pretax margin over the past 10 years
	PretaxMargainHigh *float32 `json:"pretax_margain_high,omitempty"`
	// The lowest pretax margin over the past 10 years
	PretaxMargainLow *float32 `json:"pretax_margain_low,omitempty"`
	// The median pretax margin over the past 10 years
	PretaxMargainMed *float32 `json:"pretax_margain_med,omitempty"`
	// The Pretax Margin % (5y Median) refers to the median value of the pretax margin over a period of five years, where pretax margin is calculated as pretax Income divided by its revenue.
	PretaxMargainMed5y *float32 `json:"pretax_margain_med_5y,omitempty"`
	// The number of years a company had positive earnings over the past 10 years
	ProfitYearNum *float32 `json:"profit_year_num,omitempty"`
}

// NewStockProfileProfitability instantiates a new StockProfileProfitability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStockProfileProfitability() *StockProfileProfitability {
	this := StockProfileProfitability{}
	return &this
}

// NewStockProfileProfitabilityWithDefaults instantiates a new StockProfileProfitability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStockProfileProfitabilityWithDefaults() *StockProfileProfitability {
	this := StockProfileProfitability{}
	return &this
}

// GetFCFmargin returns the FCFmargin field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetFCFmargin() float32 {
	if o == nil || IsNil(o.FCFmargin) {
		var ret float32
		return ret
	}
	return *o.FCFmargin
}

// GetFCFmarginOk returns a tuple with the FCFmargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetFCFmarginOk() (*float32, bool) {
	if o == nil || IsNil(o.FCFmargin) {
		return nil, false
	}
	return o.FCFmargin, true
}

// HasFCFmargin returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasFCFmargin() bool {
	if o != nil && !IsNil(o.FCFmargin) {
		return true
	}

	return false
}

// SetFCFmargin gets a reference to the given float32 and assigns it to the FCFmargin field.
func (o *StockProfileProfitability) SetFCFmargin(v float32) {
	o.FCFmargin = &v
}

// GetFCFmarginHigh returns the FCFmarginHigh field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetFCFmarginHigh() float32 {
	if o == nil || IsNil(o.FCFmarginHigh) {
		var ret float32
		return ret
	}
	return *o.FCFmarginHigh
}

// GetFCFmarginHighOk returns a tuple with the FCFmarginHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetFCFmarginHighOk() (*float32, bool) {
	if o == nil || IsNil(o.FCFmarginHigh) {
		return nil, false
	}
	return o.FCFmarginHigh, true
}

// HasFCFmarginHigh returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasFCFmarginHigh() bool {
	if o != nil && !IsNil(o.FCFmarginHigh) {
		return true
	}

	return false
}

// SetFCFmarginHigh gets a reference to the given float32 and assigns it to the FCFmarginHigh field.
func (o *StockProfileProfitability) SetFCFmarginHigh(v float32) {
	o.FCFmarginHigh = &v
}

// GetFCFmarginLow returns the FCFmarginLow field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetFCFmarginLow() float32 {
	if o == nil || IsNil(o.FCFmarginLow) {
		var ret float32
		return ret
	}
	return *o.FCFmarginLow
}

// GetFCFmarginLowOk returns a tuple with the FCFmarginLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetFCFmarginLowOk() (*float32, bool) {
	if o == nil || IsNil(o.FCFmarginLow) {
		return nil, false
	}
	return o.FCFmarginLow, true
}

// HasFCFmarginLow returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasFCFmarginLow() bool {
	if o != nil && !IsNil(o.FCFmarginLow) {
		return true
	}

	return false
}

// SetFCFmarginLow gets a reference to the given float32 and assigns it to the FCFmarginLow field.
func (o *StockProfileProfitability) SetFCFmarginLow(v float32) {
	o.FCFmarginLow = &v
}

// GetFCFmarginMed returns the FCFmarginMed field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetFCFmarginMed() float32 {
	if o == nil || IsNil(o.FCFmarginMed) {
		var ret float32
		return ret
	}
	return *o.FCFmarginMed
}

// GetFCFmarginMedOk returns a tuple with the FCFmarginMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetFCFmarginMedOk() (*float32, bool) {
	if o == nil || IsNil(o.FCFmarginMed) {
		return nil, false
	}
	return o.FCFmarginMed, true
}

// HasFCFmarginMed returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasFCFmarginMed() bool {
	if o != nil && !IsNil(o.FCFmarginMed) {
		return true
	}

	return false
}

// SetFCFmarginMed gets a reference to the given float32 and assigns it to the FCFmarginMed field.
func (o *StockProfileProfitability) SetFCFmarginMed(v float32) {
	o.FCFmarginMed = &v
}

// GetFCFmarginMed5y returns the FCFmarginMed5y field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetFCFmarginMed5y() float32 {
	if o == nil || IsNil(o.FCFmarginMed5y) {
		var ret float32
		return ret
	}
	return *o.FCFmarginMed5y
}

// GetFCFmarginMed5yOk returns a tuple with the FCFmarginMed5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetFCFmarginMed5yOk() (*float32, bool) {
	if o == nil || IsNil(o.FCFmarginMed5y) {
		return nil, false
	}
	return o.FCFmarginMed5y, true
}

// HasFCFmarginMed5y returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasFCFmarginMed5y() bool {
	if o != nil && !IsNil(o.FCFmarginMed5y) {
		return true
	}

	return false
}

// SetFCFmarginMed5y gets a reference to the given float32 and assigns it to the FCFmarginMed5y field.
func (o *StockProfileProfitability) SetFCFmarginMed5y(v float32) {
	o.FCFmarginMed5y = &v
}

// GetNetInterestMargin returns the NetInterestMargin field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetNetInterestMargin() float32 {
	if o == nil || IsNil(o.NetInterestMargin) {
		var ret float32
		return ret
	}
	return *o.NetInterestMargin
}

// GetNetInterestMarginOk returns a tuple with the NetInterestMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetNetInterestMarginOk() (*float32, bool) {
	if o == nil || IsNil(o.NetInterestMargin) {
		return nil, false
	}
	return o.NetInterestMargin, true
}

// HasNetInterestMargin returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasNetInterestMargin() bool {
	if o != nil && !IsNil(o.NetInterestMargin) {
		return true
	}

	return false
}

// SetNetInterestMargin gets a reference to the given float32 and assigns it to the NetInterestMargin field.
func (o *StockProfileProfitability) SetNetInterestMargin(v float32) {
	o.NetInterestMargin = &v
}

// GetCashConversionRatio returns the CashConversionRatio field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetCashConversionRatio() float32 {
	if o == nil || IsNil(o.CashConversionRatio) {
		var ret float32
		return ret
	}
	return *o.CashConversionRatio
}

// GetCashConversionRatioOk returns a tuple with the CashConversionRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetCashConversionRatioOk() (*float32, bool) {
	if o == nil || IsNil(o.CashConversionRatio) {
		return nil, false
	}
	return o.CashConversionRatio, true
}

// HasCashConversionRatio returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasCashConversionRatio() bool {
	if o != nil && !IsNil(o.CashConversionRatio) {
		return true
	}

	return false
}

// SetCashConversionRatio gets a reference to the given float32 and assigns it to the CashConversionRatio field.
func (o *StockProfileProfitability) SetCashConversionRatio(v float32) {
	o.CashConversionRatio = &v
}

// GetCashConversionRatioHigh returns the CashConversionRatioHigh field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetCashConversionRatioHigh() float32 {
	if o == nil || IsNil(o.CashConversionRatioHigh) {
		var ret float32
		return ret
	}
	return *o.CashConversionRatioHigh
}

// GetCashConversionRatioHighOk returns a tuple with the CashConversionRatioHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetCashConversionRatioHighOk() (*float32, bool) {
	if o == nil || IsNil(o.CashConversionRatioHigh) {
		return nil, false
	}
	return o.CashConversionRatioHigh, true
}

// HasCashConversionRatioHigh returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasCashConversionRatioHigh() bool {
	if o != nil && !IsNil(o.CashConversionRatioHigh) {
		return true
	}

	return false
}

// SetCashConversionRatioHigh gets a reference to the given float32 and assigns it to the CashConversionRatioHigh field.
func (o *StockProfileProfitability) SetCashConversionRatioHigh(v float32) {
	o.CashConversionRatioHigh = &v
}

// GetCashConversionRatioLow returns the CashConversionRatioLow field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetCashConversionRatioLow() float32 {
	if o == nil || IsNil(o.CashConversionRatioLow) {
		var ret float32
		return ret
	}
	return *o.CashConversionRatioLow
}

// GetCashConversionRatioLowOk returns a tuple with the CashConversionRatioLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetCashConversionRatioLowOk() (*float32, bool) {
	if o == nil || IsNil(o.CashConversionRatioLow) {
		return nil, false
	}
	return o.CashConversionRatioLow, true
}

// HasCashConversionRatioLow returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasCashConversionRatioLow() bool {
	if o != nil && !IsNil(o.CashConversionRatioLow) {
		return true
	}

	return false
}

// SetCashConversionRatioLow gets a reference to the given float32 and assigns it to the CashConversionRatioLow field.
func (o *StockProfileProfitability) SetCashConversionRatioLow(v float32) {
	o.CashConversionRatioLow = &v
}

// GetCashConversionRatioMed returns the CashConversionRatioMed field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetCashConversionRatioMed() float32 {
	if o == nil || IsNil(o.CashConversionRatioMed) {
		var ret float32
		return ret
	}
	return *o.CashConversionRatioMed
}

// GetCashConversionRatioMedOk returns a tuple with the CashConversionRatioMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetCashConversionRatioMedOk() (*float32, bool) {
	if o == nil || IsNil(o.CashConversionRatioMed) {
		return nil, false
	}
	return o.CashConversionRatioMed, true
}

// HasCashConversionRatioMed returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasCashConversionRatioMed() bool {
	if o != nil && !IsNil(o.CashConversionRatioMed) {
		return true
	}

	return false
}

// SetCashConversionRatioMed gets a reference to the given float32 and assigns it to the CashConversionRatioMed field.
func (o *StockProfileProfitability) SetCashConversionRatioMed(v float32) {
	o.CashConversionRatioMed = &v
}

// GetCashConversionRatioMed5y returns the CashConversionRatioMed5y field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetCashConversionRatioMed5y() float32 {
	if o == nil || IsNil(o.CashConversionRatioMed5y) {
		var ret float32
		return ret
	}
	return *o.CashConversionRatioMed5y
}

// GetCashConversionRatioMed5yOk returns a tuple with the CashConversionRatioMed5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetCashConversionRatioMed5yOk() (*float32, bool) {
	if o == nil || IsNil(o.CashConversionRatioMed5y) {
		return nil, false
	}
	return o.CashConversionRatioMed5y, true
}

// HasCashConversionRatioMed5y returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasCashConversionRatioMed5y() bool {
	if o != nil && !IsNil(o.CashConversionRatioMed5y) {
		return true
	}

	return false
}

// SetCashConversionRatioMed5y gets a reference to the given float32 and assigns it to the CashConversionRatioMed5y field.
func (o *StockProfileProfitability) SetCashConversionRatioMed5y(v float32) {
	o.CashConversionRatioMed5y = &v
}

// GetEbitMargin returns the EbitMargin field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetEbitMargin() float32 {
	if o == nil || IsNil(o.EbitMargin) {
		var ret float32
		return ret
	}
	return *o.EbitMargin
}

// GetEbitMarginOk returns a tuple with the EbitMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetEbitMarginOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitMargin) {
		return nil, false
	}
	return o.EbitMargin, true
}

// HasEbitMargin returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasEbitMargin() bool {
	if o != nil && !IsNil(o.EbitMargin) {
		return true
	}

	return false
}

// SetEbitMargin gets a reference to the given float32 and assigns it to the EbitMargin field.
func (o *StockProfileProfitability) SetEbitMargin(v float32) {
	o.EbitMargin = &v
}

// GetEbitMarginHigh returns the EbitMarginHigh field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetEbitMarginHigh() float32 {
	if o == nil || IsNil(o.EbitMarginHigh) {
		var ret float32
		return ret
	}
	return *o.EbitMarginHigh
}

// GetEbitMarginHighOk returns a tuple with the EbitMarginHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetEbitMarginHighOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitMarginHigh) {
		return nil, false
	}
	return o.EbitMarginHigh, true
}

// HasEbitMarginHigh returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasEbitMarginHigh() bool {
	if o != nil && !IsNil(o.EbitMarginHigh) {
		return true
	}

	return false
}

// SetEbitMarginHigh gets a reference to the given float32 and assigns it to the EbitMarginHigh field.
func (o *StockProfileProfitability) SetEbitMarginHigh(v float32) {
	o.EbitMarginHigh = &v
}

// GetEbitMarginLow returns the EbitMarginLow field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetEbitMarginLow() float32 {
	if o == nil || IsNil(o.EbitMarginLow) {
		var ret float32
		return ret
	}
	return *o.EbitMarginLow
}

// GetEbitMarginLowOk returns a tuple with the EbitMarginLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetEbitMarginLowOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitMarginLow) {
		return nil, false
	}
	return o.EbitMarginLow, true
}

// HasEbitMarginLow returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasEbitMarginLow() bool {
	if o != nil && !IsNil(o.EbitMarginLow) {
		return true
	}

	return false
}

// SetEbitMarginLow gets a reference to the given float32 and assigns it to the EbitMarginLow field.
func (o *StockProfileProfitability) SetEbitMarginLow(v float32) {
	o.EbitMarginLow = &v
}

// GetEbitMarginMed returns the EbitMarginMed field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetEbitMarginMed() float32 {
	if o == nil || IsNil(o.EbitMarginMed) {
		var ret float32
		return ret
	}
	return *o.EbitMarginMed
}

// GetEbitMarginMedOk returns a tuple with the EbitMarginMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetEbitMarginMedOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitMarginMed) {
		return nil, false
	}
	return o.EbitMarginMed, true
}

// HasEbitMarginMed returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasEbitMarginMed() bool {
	if o != nil && !IsNil(o.EbitMarginMed) {
		return true
	}

	return false
}

// SetEbitMarginMed gets a reference to the given float32 and assigns it to the EbitMarginMed field.
func (o *StockProfileProfitability) SetEbitMarginMed(v float32) {
	o.EbitMarginMed = &v
}

// GetEbitdaMargin returns the EbitdaMargin field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetEbitdaMargin() float32 {
	if o == nil || IsNil(o.EbitdaMargin) {
		var ret float32
		return ret
	}
	return *o.EbitdaMargin
}

// GetEbitdaMarginOk returns a tuple with the EbitdaMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetEbitdaMarginOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitdaMargin) {
		return nil, false
	}
	return o.EbitdaMargin, true
}

// HasEbitdaMargin returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasEbitdaMargin() bool {
	if o != nil && !IsNil(o.EbitdaMargin) {
		return true
	}

	return false
}

// SetEbitdaMargin gets a reference to the given float32 and assigns it to the EbitdaMargin field.
func (o *StockProfileProfitability) SetEbitdaMargin(v float32) {
	o.EbitdaMargin = &v
}

// GetEbitdaMarginHigh returns the EbitdaMarginHigh field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetEbitdaMarginHigh() float32 {
	if o == nil || IsNil(o.EbitdaMarginHigh) {
		var ret float32
		return ret
	}
	return *o.EbitdaMarginHigh
}

// GetEbitdaMarginHighOk returns a tuple with the EbitdaMarginHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetEbitdaMarginHighOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitdaMarginHigh) {
		return nil, false
	}
	return o.EbitdaMarginHigh, true
}

// HasEbitdaMarginHigh returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasEbitdaMarginHigh() bool {
	if o != nil && !IsNil(o.EbitdaMarginHigh) {
		return true
	}

	return false
}

// SetEbitdaMarginHigh gets a reference to the given float32 and assigns it to the EbitdaMarginHigh field.
func (o *StockProfileProfitability) SetEbitdaMarginHigh(v float32) {
	o.EbitdaMarginHigh = &v
}

// GetEbitdaMarginLow returns the EbitdaMarginLow field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetEbitdaMarginLow() float32 {
	if o == nil || IsNil(o.EbitdaMarginLow) {
		var ret float32
		return ret
	}
	return *o.EbitdaMarginLow
}

// GetEbitdaMarginLowOk returns a tuple with the EbitdaMarginLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetEbitdaMarginLowOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitdaMarginLow) {
		return nil, false
	}
	return o.EbitdaMarginLow, true
}

// HasEbitdaMarginLow returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasEbitdaMarginLow() bool {
	if o != nil && !IsNil(o.EbitdaMarginLow) {
		return true
	}

	return false
}

// SetEbitdaMarginLow gets a reference to the given float32 and assigns it to the EbitdaMarginLow field.
func (o *StockProfileProfitability) SetEbitdaMarginLow(v float32) {
	o.EbitdaMarginLow = &v
}

// GetEbitdaMarginMed returns the EbitdaMarginMed field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetEbitdaMarginMed() float32 {
	if o == nil || IsNil(o.EbitdaMarginMed) {
		var ret float32
		return ret
	}
	return *o.EbitdaMarginMed
}

// GetEbitdaMarginMedOk returns a tuple with the EbitdaMarginMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetEbitdaMarginMedOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitdaMarginMed) {
		return nil, false
	}
	return o.EbitdaMarginMed, true
}

// HasEbitdaMarginMed returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasEbitdaMarginMed() bool {
	if o != nil && !IsNil(o.EbitdaMarginMed) {
		return true
	}

	return false
}

// SetEbitdaMarginMed gets a reference to the given float32 and assigns it to the EbitdaMarginMed field.
func (o *StockProfileProfitability) SetEbitdaMarginMed(v float32) {
	o.EbitdaMarginMed = &v
}

// GetFcfYearNum returns the FcfYearNum field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetFcfYearNum() float32 {
	if o == nil || IsNil(o.FcfYearNum) {
		var ret float32
		return ret
	}
	return *o.FcfYearNum
}

// GetFcfYearNumOk returns a tuple with the FcfYearNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetFcfYearNumOk() (*float32, bool) {
	if o == nil || IsNil(o.FcfYearNum) {
		return nil, false
	}
	return o.FcfYearNum, true
}

// HasFcfYearNum returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasFcfYearNum() bool {
	if o != nil && !IsNil(o.FcfYearNum) {
		return true
	}

	return false
}

// SetFcfYearNum gets a reference to the given float32 and assigns it to the FcfYearNum field.
func (o *StockProfileProfitability) SetFcfYearNum(v float32) {
	o.FcfYearNum = &v
}

// GetGrossmargin returns the Grossmargin field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetGrossmargin() float32 {
	if o == nil || IsNil(o.Grossmargin) {
		var ret float32
		return ret
	}
	return *o.Grossmargin
}

// GetGrossmarginOk returns a tuple with the Grossmargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetGrossmarginOk() (*float32, bool) {
	if o == nil || IsNil(o.Grossmargin) {
		return nil, false
	}
	return o.Grossmargin, true
}

// HasGrossmargin returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasGrossmargin() bool {
	if o != nil && !IsNil(o.Grossmargin) {
		return true
	}

	return false
}

// SetGrossmargin gets a reference to the given float32 and assigns it to the Grossmargin field.
func (o *StockProfileProfitability) SetGrossmargin(v float32) {
	o.Grossmargin = &v
}

// GetGrossmarginHigh returns the GrossmarginHigh field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetGrossmarginHigh() float32 {
	if o == nil || IsNil(o.GrossmarginHigh) {
		var ret float32
		return ret
	}
	return *o.GrossmarginHigh
}

// GetGrossmarginHighOk returns a tuple with the GrossmarginHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetGrossmarginHighOk() (*float32, bool) {
	if o == nil || IsNil(o.GrossmarginHigh) {
		return nil, false
	}
	return o.GrossmarginHigh, true
}

// HasGrossmarginHigh returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasGrossmarginHigh() bool {
	if o != nil && !IsNil(o.GrossmarginHigh) {
		return true
	}

	return false
}

// SetGrossmarginHigh gets a reference to the given float32 and assigns it to the GrossmarginHigh field.
func (o *StockProfileProfitability) SetGrossmarginHigh(v float32) {
	o.GrossmarginHigh = &v
}

// GetGrossmarginLow returns the GrossmarginLow field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetGrossmarginLow() float32 {
	if o == nil || IsNil(o.GrossmarginLow) {
		var ret float32
		return ret
	}
	return *o.GrossmarginLow
}

// GetGrossmarginLowOk returns a tuple with the GrossmarginLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetGrossmarginLowOk() (*float32, bool) {
	if o == nil || IsNil(o.GrossmarginLow) {
		return nil, false
	}
	return o.GrossmarginLow, true
}

// HasGrossmarginLow returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasGrossmarginLow() bool {
	if o != nil && !IsNil(o.GrossmarginLow) {
		return true
	}

	return false
}

// SetGrossmarginLow gets a reference to the given float32 and assigns it to the GrossmarginLow field.
func (o *StockProfileProfitability) SetGrossmarginLow(v float32) {
	o.GrossmarginLow = &v
}

// GetGrossmarginMed returns the GrossmarginMed field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetGrossmarginMed() float32 {
	if o == nil || IsNil(o.GrossmarginMed) {
		var ret float32
		return ret
	}
	return *o.GrossmarginMed
}

// GetGrossmarginMedOk returns a tuple with the GrossmarginMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetGrossmarginMedOk() (*float32, bool) {
	if o == nil || IsNil(o.GrossmarginMed) {
		return nil, false
	}
	return o.GrossmarginMed, true
}

// HasGrossmarginMed returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasGrossmarginMed() bool {
	if o != nil && !IsNil(o.GrossmarginMed) {
		return true
	}

	return false
}

// SetGrossmarginMed gets a reference to the given float32 and assigns it to the GrossmarginMed field.
func (o *StockProfileProfitability) SetGrossmarginMed(v float32) {
	o.GrossmarginMed = &v
}

// GetGrossmarginMed5y returns the GrossmarginMed5y field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetGrossmarginMed5y() float32 {
	if o == nil || IsNil(o.GrossmarginMed5y) {
		var ret float32
		return ret
	}
	return *o.GrossmarginMed5y
}

// GetGrossmarginMed5yOk returns a tuple with the GrossmarginMed5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetGrossmarginMed5yOk() (*float32, bool) {
	if o == nil || IsNil(o.GrossmarginMed5y) {
		return nil, false
	}
	return o.GrossmarginMed5y, true
}

// HasGrossmarginMed5y returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasGrossmarginMed5y() bool {
	if o != nil && !IsNil(o.GrossmarginMed5y) {
		return true
	}

	return false
}

// SetGrossmarginMed5y gets a reference to the given float32 and assigns it to the GrossmarginMed5y field.
func (o *StockProfileProfitability) SetGrossmarginMed5y(v float32) {
	o.GrossmarginMed5y = &v
}

// GetNetMargain returns the NetMargain field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetNetMargain() float32 {
	if o == nil || IsNil(o.NetMargain) {
		var ret float32
		return ret
	}
	return *o.NetMargain
}

// GetNetMargainOk returns a tuple with the NetMargain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetNetMargainOk() (*float32, bool) {
	if o == nil || IsNil(o.NetMargain) {
		return nil, false
	}
	return o.NetMargain, true
}

// HasNetMargain returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasNetMargain() bool {
	if o != nil && !IsNil(o.NetMargain) {
		return true
	}

	return false
}

// SetNetMargain gets a reference to the given float32 and assigns it to the NetMargain field.
func (o *StockProfileProfitability) SetNetMargain(v float32) {
	o.NetMargain = &v
}

// GetNetMargainHigh returns the NetMargainHigh field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetNetMargainHigh() float32 {
	if o == nil || IsNil(o.NetMargainHigh) {
		var ret float32
		return ret
	}
	return *o.NetMargainHigh
}

// GetNetMargainHighOk returns a tuple with the NetMargainHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetNetMargainHighOk() (*float32, bool) {
	if o == nil || IsNil(o.NetMargainHigh) {
		return nil, false
	}
	return o.NetMargainHigh, true
}

// HasNetMargainHigh returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasNetMargainHigh() bool {
	if o != nil && !IsNil(o.NetMargainHigh) {
		return true
	}

	return false
}

// SetNetMargainHigh gets a reference to the given float32 and assigns it to the NetMargainHigh field.
func (o *StockProfileProfitability) SetNetMargainHigh(v float32) {
	o.NetMargainHigh = &v
}

// GetNetMargainLow returns the NetMargainLow field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetNetMargainLow() float32 {
	if o == nil || IsNil(o.NetMargainLow) {
		var ret float32
		return ret
	}
	return *o.NetMargainLow
}

// GetNetMargainLowOk returns a tuple with the NetMargainLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetNetMargainLowOk() (*float32, bool) {
	if o == nil || IsNil(o.NetMargainLow) {
		return nil, false
	}
	return o.NetMargainLow, true
}

// HasNetMargainLow returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasNetMargainLow() bool {
	if o != nil && !IsNil(o.NetMargainLow) {
		return true
	}

	return false
}

// SetNetMargainLow gets a reference to the given float32 and assigns it to the NetMargainLow field.
func (o *StockProfileProfitability) SetNetMargainLow(v float32) {
	o.NetMargainLow = &v
}

// GetNetMargainMed returns the NetMargainMed field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetNetMargainMed() float32 {
	if o == nil || IsNil(o.NetMargainMed) {
		var ret float32
		return ret
	}
	return *o.NetMargainMed
}

// GetNetMargainMedOk returns a tuple with the NetMargainMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetNetMargainMedOk() (*float32, bool) {
	if o == nil || IsNil(o.NetMargainMed) {
		return nil, false
	}
	return o.NetMargainMed, true
}

// HasNetMargainMed returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasNetMargainMed() bool {
	if o != nil && !IsNil(o.NetMargainMed) {
		return true
	}

	return false
}

// SetNetMargainMed gets a reference to the given float32 and assigns it to the NetMargainMed field.
func (o *StockProfileProfitability) SetNetMargainMed(v float32) {
	o.NetMargainMed = &v
}

// GetNetMargainMed5y returns the NetMargainMed5y field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetNetMargainMed5y() float32 {
	if o == nil || IsNil(o.NetMargainMed5y) {
		var ret float32
		return ret
	}
	return *o.NetMargainMed5y
}

// GetNetMargainMed5yOk returns a tuple with the NetMargainMed5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetNetMargainMed5yOk() (*float32, bool) {
	if o == nil || IsNil(o.NetMargainMed5y) {
		return nil, false
	}
	return o.NetMargainMed5y, true
}

// HasNetMargainMed5y returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasNetMargainMed5y() bool {
	if o != nil && !IsNil(o.NetMargainMed5y) {
		return true
	}

	return false
}

// SetNetMargainMed5y gets a reference to the given float32 and assigns it to the NetMargainMed5y field.
func (o *StockProfileProfitability) SetNetMargainMed5y(v float32) {
	o.NetMargainMed5y = &v
}

// GetOprtMargain returns the OprtMargain field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetOprtMargain() float32 {
	if o == nil || IsNil(o.OprtMargain) {
		var ret float32
		return ret
	}
	return *o.OprtMargain
}

// GetOprtMargainOk returns a tuple with the OprtMargain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetOprtMargainOk() (*float32, bool) {
	if o == nil || IsNil(o.OprtMargain) {
		return nil, false
	}
	return o.OprtMargain, true
}

// HasOprtMargain returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasOprtMargain() bool {
	if o != nil && !IsNil(o.OprtMargain) {
		return true
	}

	return false
}

// SetOprtMargain gets a reference to the given float32 and assigns it to the OprtMargain field.
func (o *StockProfileProfitability) SetOprtMargain(v float32) {
	o.OprtMargain = &v
}

// GetOprtMargainHigh returns the OprtMargainHigh field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetOprtMargainHigh() float32 {
	if o == nil || IsNil(o.OprtMargainHigh) {
		var ret float32
		return ret
	}
	return *o.OprtMargainHigh
}

// GetOprtMargainHighOk returns a tuple with the OprtMargainHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetOprtMargainHighOk() (*float32, bool) {
	if o == nil || IsNil(o.OprtMargainHigh) {
		return nil, false
	}
	return o.OprtMargainHigh, true
}

// HasOprtMargainHigh returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasOprtMargainHigh() bool {
	if o != nil && !IsNil(o.OprtMargainHigh) {
		return true
	}

	return false
}

// SetOprtMargainHigh gets a reference to the given float32 and assigns it to the OprtMargainHigh field.
func (o *StockProfileProfitability) SetOprtMargainHigh(v float32) {
	o.OprtMargainHigh = &v
}

// GetOprtMargainLow returns the OprtMargainLow field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetOprtMargainLow() float32 {
	if o == nil || IsNil(o.OprtMargainLow) {
		var ret float32
		return ret
	}
	return *o.OprtMargainLow
}

// GetOprtMargainLowOk returns a tuple with the OprtMargainLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetOprtMargainLowOk() (*float32, bool) {
	if o == nil || IsNil(o.OprtMargainLow) {
		return nil, false
	}
	return o.OprtMargainLow, true
}

// HasOprtMargainLow returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasOprtMargainLow() bool {
	if o != nil && !IsNil(o.OprtMargainLow) {
		return true
	}

	return false
}

// SetOprtMargainLow gets a reference to the given float32 and assigns it to the OprtMargainLow field.
func (o *StockProfileProfitability) SetOprtMargainLow(v float32) {
	o.OprtMargainLow = &v
}

// GetOprtMargainMed returns the OprtMargainMed field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetOprtMargainMed() float32 {
	if o == nil || IsNil(o.OprtMargainMed) {
		var ret float32
		return ret
	}
	return *o.OprtMargainMed
}

// GetOprtMargainMedOk returns a tuple with the OprtMargainMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetOprtMargainMedOk() (*float32, bool) {
	if o == nil || IsNil(o.OprtMargainMed) {
		return nil, false
	}
	return o.OprtMargainMed, true
}

// HasOprtMargainMed returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasOprtMargainMed() bool {
	if o != nil && !IsNil(o.OprtMargainMed) {
		return true
	}

	return false
}

// SetOprtMargainMed gets a reference to the given float32 and assigns it to the OprtMargainMed field.
func (o *StockProfileProfitability) SetOprtMargainMed(v float32) {
	o.OprtMargainMed = &v
}

// GetOprtMargainMed5y returns the OprtMargainMed5y field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetOprtMargainMed5y() float32 {
	if o == nil || IsNil(o.OprtMargainMed5y) {
		var ret float32
		return ret
	}
	return *o.OprtMargainMed5y
}

// GetOprtMargainMed5yOk returns a tuple with the OprtMargainMed5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetOprtMargainMed5yOk() (*float32, bool) {
	if o == nil || IsNil(o.OprtMargainMed5y) {
		return nil, false
	}
	return o.OprtMargainMed5y, true
}

// HasOprtMargainMed5y returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasOprtMargainMed5y() bool {
	if o != nil && !IsNil(o.OprtMargainMed5y) {
		return true
	}

	return false
}

// SetOprtMargainMed5y gets a reference to the given float32 and assigns it to the OprtMargainMed5y field.
func (o *StockProfileProfitability) SetOprtMargainMed5y(v float32) {
	o.OprtMargainMed5y = &v
}

// GetPretaxMargain returns the PretaxMargain field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetPretaxMargain() float32 {
	if o == nil || IsNil(o.PretaxMargain) {
		var ret float32
		return ret
	}
	return *o.PretaxMargain
}

// GetPretaxMargainOk returns a tuple with the PretaxMargain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetPretaxMargainOk() (*float32, bool) {
	if o == nil || IsNil(o.PretaxMargain) {
		return nil, false
	}
	return o.PretaxMargain, true
}

// HasPretaxMargain returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasPretaxMargain() bool {
	if o != nil && !IsNil(o.PretaxMargain) {
		return true
	}

	return false
}

// SetPretaxMargain gets a reference to the given float32 and assigns it to the PretaxMargain field.
func (o *StockProfileProfitability) SetPretaxMargain(v float32) {
	o.PretaxMargain = &v
}

// GetPretaxMargainHigh returns the PretaxMargainHigh field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetPretaxMargainHigh() float32 {
	if o == nil || IsNil(o.PretaxMargainHigh) {
		var ret float32
		return ret
	}
	return *o.PretaxMargainHigh
}

// GetPretaxMargainHighOk returns a tuple with the PretaxMargainHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetPretaxMargainHighOk() (*float32, bool) {
	if o == nil || IsNil(o.PretaxMargainHigh) {
		return nil, false
	}
	return o.PretaxMargainHigh, true
}

// HasPretaxMargainHigh returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasPretaxMargainHigh() bool {
	if o != nil && !IsNil(o.PretaxMargainHigh) {
		return true
	}

	return false
}

// SetPretaxMargainHigh gets a reference to the given float32 and assigns it to the PretaxMargainHigh field.
func (o *StockProfileProfitability) SetPretaxMargainHigh(v float32) {
	o.PretaxMargainHigh = &v
}

// GetPretaxMargainLow returns the PretaxMargainLow field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetPretaxMargainLow() float32 {
	if o == nil || IsNil(o.PretaxMargainLow) {
		var ret float32
		return ret
	}
	return *o.PretaxMargainLow
}

// GetPretaxMargainLowOk returns a tuple with the PretaxMargainLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetPretaxMargainLowOk() (*float32, bool) {
	if o == nil || IsNil(o.PretaxMargainLow) {
		return nil, false
	}
	return o.PretaxMargainLow, true
}

// HasPretaxMargainLow returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasPretaxMargainLow() bool {
	if o != nil && !IsNil(o.PretaxMargainLow) {
		return true
	}

	return false
}

// SetPretaxMargainLow gets a reference to the given float32 and assigns it to the PretaxMargainLow field.
func (o *StockProfileProfitability) SetPretaxMargainLow(v float32) {
	o.PretaxMargainLow = &v
}

// GetPretaxMargainMed returns the PretaxMargainMed field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetPretaxMargainMed() float32 {
	if o == nil || IsNil(o.PretaxMargainMed) {
		var ret float32
		return ret
	}
	return *o.PretaxMargainMed
}

// GetPretaxMargainMedOk returns a tuple with the PretaxMargainMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetPretaxMargainMedOk() (*float32, bool) {
	if o == nil || IsNil(o.PretaxMargainMed) {
		return nil, false
	}
	return o.PretaxMargainMed, true
}

// HasPretaxMargainMed returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasPretaxMargainMed() bool {
	if o != nil && !IsNil(o.PretaxMargainMed) {
		return true
	}

	return false
}

// SetPretaxMargainMed gets a reference to the given float32 and assigns it to the PretaxMargainMed field.
func (o *StockProfileProfitability) SetPretaxMargainMed(v float32) {
	o.PretaxMargainMed = &v
}

// GetPretaxMargainMed5y returns the PretaxMargainMed5y field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetPretaxMargainMed5y() float32 {
	if o == nil || IsNil(o.PretaxMargainMed5y) {
		var ret float32
		return ret
	}
	return *o.PretaxMargainMed5y
}

// GetPretaxMargainMed5yOk returns a tuple with the PretaxMargainMed5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetPretaxMargainMed5yOk() (*float32, bool) {
	if o == nil || IsNil(o.PretaxMargainMed5y) {
		return nil, false
	}
	return o.PretaxMargainMed5y, true
}

// HasPretaxMargainMed5y returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasPretaxMargainMed5y() bool {
	if o != nil && !IsNil(o.PretaxMargainMed5y) {
		return true
	}

	return false
}

// SetPretaxMargainMed5y gets a reference to the given float32 and assigns it to the PretaxMargainMed5y field.
func (o *StockProfileProfitability) SetPretaxMargainMed5y(v float32) {
	o.PretaxMargainMed5y = &v
}

// GetProfitYearNum returns the ProfitYearNum field value if set, zero value otherwise.
func (o *StockProfileProfitability) GetProfitYearNum() float32 {
	if o == nil || IsNil(o.ProfitYearNum) {
		var ret float32
		return ret
	}
	return *o.ProfitYearNum
}

// GetProfitYearNumOk returns a tuple with the ProfitYearNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockProfileProfitability) GetProfitYearNumOk() (*float32, bool) {
	if o == nil || IsNil(o.ProfitYearNum) {
		return nil, false
	}
	return o.ProfitYearNum, true
}

// HasProfitYearNum returns a boolean if a field has been set.
func (o *StockProfileProfitability) HasProfitYearNum() bool {
	if o != nil && !IsNil(o.ProfitYearNum) {
		return true
	}

	return false
}

// SetProfitYearNum gets a reference to the given float32 and assigns it to the ProfitYearNum field.
func (o *StockProfileProfitability) SetProfitYearNum(v float32) {
	o.ProfitYearNum = &v
}

func (o StockProfileProfitability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StockProfileProfitability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FCFmargin) {
		toSerialize["FCFmargin"] = o.FCFmargin
	}
	if !IsNil(o.FCFmarginHigh) {
		toSerialize["FCFmargin_high"] = o.FCFmarginHigh
	}
	if !IsNil(o.FCFmarginLow) {
		toSerialize["FCFmargin_low"] = o.FCFmarginLow
	}
	if !IsNil(o.FCFmarginMed) {
		toSerialize["FCFmargin_med"] = o.FCFmarginMed
	}
	if !IsNil(o.FCFmarginMed5y) {
		toSerialize["FCFmargin_med_5y"] = o.FCFmarginMed5y
	}
	if !IsNil(o.NetInterestMargin) {
		toSerialize["NetInterestMargin"] = o.NetInterestMargin
	}
	if !IsNil(o.CashConversionRatio) {
		toSerialize["cash_conversion_ratio"] = o.CashConversionRatio
	}
	if !IsNil(o.CashConversionRatioHigh) {
		toSerialize["cash_conversion_ratio_high"] = o.CashConversionRatioHigh
	}
	if !IsNil(o.CashConversionRatioLow) {
		toSerialize["cash_conversion_ratio_low"] = o.CashConversionRatioLow
	}
	if !IsNil(o.CashConversionRatioMed) {
		toSerialize["cash_conversion_ratio_med"] = o.CashConversionRatioMed
	}
	if !IsNil(o.CashConversionRatioMed5y) {
		toSerialize["cash_conversion_ratio_med_5y"] = o.CashConversionRatioMed5y
	}
	if !IsNil(o.EbitMargin) {
		toSerialize["ebit_margin"] = o.EbitMargin
	}
	if !IsNil(o.EbitMarginHigh) {
		toSerialize["ebit_margin_high"] = o.EbitMarginHigh
	}
	if !IsNil(o.EbitMarginLow) {
		toSerialize["ebit_margin_low"] = o.EbitMarginLow
	}
	if !IsNil(o.EbitMarginMed) {
		toSerialize["ebit_margin_med"] = o.EbitMarginMed
	}
	if !IsNil(o.EbitdaMargin) {
		toSerialize["ebitda_margin"] = o.EbitdaMargin
	}
	if !IsNil(o.EbitdaMarginHigh) {
		toSerialize["ebitda_margin_high"] = o.EbitdaMarginHigh
	}
	if !IsNil(o.EbitdaMarginLow) {
		toSerialize["ebitda_margin_low"] = o.EbitdaMarginLow
	}
	if !IsNil(o.EbitdaMarginMed) {
		toSerialize["ebitda_margin_med"] = o.EbitdaMarginMed
	}
	if !IsNil(o.FcfYearNum) {
		toSerialize["fcf_year_num"] = o.FcfYearNum
	}
	if !IsNil(o.Grossmargin) {
		toSerialize["grossmargin"] = o.Grossmargin
	}
	if !IsNil(o.GrossmarginHigh) {
		toSerialize["grossmargin_high"] = o.GrossmarginHigh
	}
	if !IsNil(o.GrossmarginLow) {
		toSerialize["grossmargin_low"] = o.GrossmarginLow
	}
	if !IsNil(o.GrossmarginMed) {
		toSerialize["grossmargin_med"] = o.GrossmarginMed
	}
	if !IsNil(o.GrossmarginMed5y) {
		toSerialize["grossmargin_med_5y"] = o.GrossmarginMed5y
	}
	if !IsNil(o.NetMargain) {
		toSerialize["net_margain"] = o.NetMargain
	}
	if !IsNil(o.NetMargainHigh) {
		toSerialize["net_margain_high"] = o.NetMargainHigh
	}
	if !IsNil(o.NetMargainLow) {
		toSerialize["net_margain_low"] = o.NetMargainLow
	}
	if !IsNil(o.NetMargainMed) {
		toSerialize["net_margain_med"] = o.NetMargainMed
	}
	if !IsNil(o.NetMargainMed5y) {
		toSerialize["net_margain_med_5y"] = o.NetMargainMed5y
	}
	if !IsNil(o.OprtMargain) {
		toSerialize["oprt_margain"] = o.OprtMargain
	}
	if !IsNil(o.OprtMargainHigh) {
		toSerialize["oprt_margain_high"] = o.OprtMargainHigh
	}
	if !IsNil(o.OprtMargainLow) {
		toSerialize["oprt_margain_low"] = o.OprtMargainLow
	}
	if !IsNil(o.OprtMargainMed) {
		toSerialize["oprt_margain_med"] = o.OprtMargainMed
	}
	if !IsNil(o.OprtMargainMed5y) {
		toSerialize["oprt_margain_med_5y"] = o.OprtMargainMed5y
	}
	if !IsNil(o.PretaxMargain) {
		toSerialize["pretax_margain"] = o.PretaxMargain
	}
	if !IsNil(o.PretaxMargainHigh) {
		toSerialize["pretax_margain_high"] = o.PretaxMargainHigh
	}
	if !IsNil(o.PretaxMargainLow) {
		toSerialize["pretax_margain_low"] = o.PretaxMargainLow
	}
	if !IsNil(o.PretaxMargainMed) {
		toSerialize["pretax_margain_med"] = o.PretaxMargainMed
	}
	if !IsNil(o.PretaxMargainMed5y) {
		toSerialize["pretax_margain_med_5y"] = o.PretaxMargainMed5y
	}
	if !IsNil(o.ProfitYearNum) {
		toSerialize["profit_year_num"] = o.ProfitYearNum
	}
	return toSerialize, nil
}

type NullableStockProfileProfitability struct {
	value *StockProfileProfitability
	isSet bool
}

func (v NullableStockProfileProfitability) Get() *StockProfileProfitability {
	return v.value
}

func (v *NullableStockProfileProfitability) Set(val *StockProfileProfitability) {
	v.value = val
	v.isSet = true
}

func (v NullableStockProfileProfitability) IsSet() bool {
	return v.isSet
}

func (v *NullableStockProfileProfitability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStockProfileProfitability(val *StockProfileProfitability) *NullableStockProfileProfitability {
	return &NullableStockProfileProfitability{value: val, isSet: true}
}

func (v NullableStockProfileProfitability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStockProfileProfitability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


