/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EtfEtfPortfolioHoldings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EtfEtfPortfolioHoldings{}

// EtfEtfPortfolioHoldings struct for EtfEtfPortfolioHoldings
type EtfEtfPortfolioHoldings struct {
	Holdings []GuruTransaction `json:"holdings,omitempty"`
	// Portfolio date
	Portdate *string `json:"portdate,omitempty"`
}

// NewEtfEtfPortfolioHoldings instantiates a new EtfEtfPortfolioHoldings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEtfEtfPortfolioHoldings() *EtfEtfPortfolioHoldings {
	this := EtfEtfPortfolioHoldings{}
	return &this
}

// NewEtfEtfPortfolioHoldingsWithDefaults instantiates a new EtfEtfPortfolioHoldings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEtfEtfPortfolioHoldingsWithDefaults() *EtfEtfPortfolioHoldings {
	this := EtfEtfPortfolioHoldings{}
	return &this
}

// GetHoldings returns the Holdings field value if set, zero value otherwise.
func (o *EtfEtfPortfolioHoldings) GetHoldings() []GuruTransaction {
	if o == nil || IsNil(o.Holdings) {
		var ret []GuruTransaction
		return ret
	}
	return o.Holdings
}

// GetHoldingsOk returns a tuple with the Holdings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfPortfolioHoldings) GetHoldingsOk() ([]GuruTransaction, bool) {
	if o == nil || IsNil(o.Holdings) {
		return nil, false
	}
	return o.Holdings, true
}

// HasHoldings returns a boolean if a field has been set.
func (o *EtfEtfPortfolioHoldings) HasHoldings() bool {
	if o != nil && !IsNil(o.Holdings) {
		return true
	}

	return false
}

// SetHoldings gets a reference to the given []GuruTransaction and assigns it to the Holdings field.
func (o *EtfEtfPortfolioHoldings) SetHoldings(v []GuruTransaction) {
	o.Holdings = v
}

// GetPortdate returns the Portdate field value if set, zero value otherwise.
func (o *EtfEtfPortfolioHoldings) GetPortdate() string {
	if o == nil || IsNil(o.Portdate) {
		var ret string
		return ret
	}
	return *o.Portdate
}

// GetPortdateOk returns a tuple with the Portdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfPortfolioHoldings) GetPortdateOk() (*string, bool) {
	if o == nil || IsNil(o.Portdate) {
		return nil, false
	}
	return o.Portdate, true
}

// HasPortdate returns a boolean if a field has been set.
func (o *EtfEtfPortfolioHoldings) HasPortdate() bool {
	if o != nil && !IsNil(o.Portdate) {
		return true
	}

	return false
}

// SetPortdate gets a reference to the given string and assigns it to the Portdate field.
func (o *EtfEtfPortfolioHoldings) SetPortdate(v string) {
	o.Portdate = &v
}

func (o EtfEtfPortfolioHoldings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EtfEtfPortfolioHoldings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Holdings) {
		toSerialize["holdings"] = o.Holdings
	}
	if !IsNil(o.Portdate) {
		toSerialize["portdate"] = o.Portdate
	}
	return toSerialize, nil
}

type NullableEtfEtfPortfolioHoldings struct {
	value *EtfEtfPortfolioHoldings
	isSet bool
}

func (v NullableEtfEtfPortfolioHoldings) Get() *EtfEtfPortfolioHoldings {
	return v.value
}

func (v *NullableEtfEtfPortfolioHoldings) Set(val *EtfEtfPortfolioHoldings) {
	v.value = val
	v.isSet = true
}

func (v NullableEtfEtfPortfolioHoldings) IsSet() bool {
	return v.isSet
}

func (v *NullableEtfEtfPortfolioHoldings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEtfEtfPortfolioHoldings(val *EtfEtfPortfolioHoldings) *NullableEtfEtfPortfolioHoldings {
	return &NullableEtfEtfPortfolioHoldings{value: val, isSet: true}
}

func (v NullableEtfEtfPortfolioHoldings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEtfEtfPortfolioHoldings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


