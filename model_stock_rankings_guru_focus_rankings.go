/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StockRankingsGuruFocusRankings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StockRankingsGuruFocusRankings{}

// StockRankingsGuruFocusRankings struct for StockRankingsGuruFocusRankings
type StockRankingsGuruFocusRankings struct {
	// GF Score is a stock performance ranking system developed by GuruFocus using five aspects of valuation.
	GfScore *float32 `json:"gf_score,omitempty"`
	GfScoreHigh *float32 `json:"gf_score_high,omitempty"`
	GfScoreLow *float32 `json:"gf_score_low,omitempty"`
	GfScoreMed *float32 `json:"gf_score_med,omitempty"`
	GfScoreMed5y *float32 `json:"gf_score_med_5y,omitempty"`
	GfValue *float32 `json:"gf_value,omitempty"`
	// The estimated GF value at the end of the fiscal year immediately following the current fiscal year. FY1 represents the fiscal year immediately following the current fiscal year.
	GfValueEst *float32 `json:"gf_value_est,omitempty"`
	// The estimated GF value at the end of the second fiscal year after the current fiscal year. FY2 represents the second fiscal year after the current fiscal year.
	GfValueEst2nd *float32 `json:"gf_value_est_2nd,omitempty"`
	// The estimated GF value at the end of the third fiscal year after the current fiscal year. FY3 represents the third fiscal year after the current fiscal year.
	GfValueEst3rd *float32 `json:"gf_value_est_3rd,omitempty"`
	// The percentage change in a company's GF value from the previous month.
	GfValuePctChange *float32 `json:"gf_value_pct_change,omitempty"`
	// The difference between current price and intrinsic value based on GF Value model.
	MarginGfValue *float32 `json:"margin_gf_value,omitempty"`
	P2gfValue *float32 `json:"p2gf_value,omitempty"`
	P2gfValueEst *float32 `json:"p2gf_value_est,omitempty"`
	P2gfValueHigh *float32 `json:"p2gf_value_high,omitempty"`
	P2gfValueLow *float32 `json:"p2gf_value_low,omitempty"`
	P2gfValueMed *float32 `json:"p2gf_value_med,omitempty"`
	// <table class=\"normal-table\">         <thead>           <tr>             <th>Rank</th>             <th>Average Gain</th>             <th>% of Stocks that are in still loss if held for 10yrs</th>           </tr>         </thead>         <tbody>           <tr>             <td>               2 Star             </td>             <td>6% per year</td>             <td>16%</td>           </tr>            <tr>             <td>               2.5 Star             </td>             <td>7.3% per year</td>             <td>18%</td>           </tr>            <tr>             <td>               3 Star             </td>             <td>8.2% per year</td>             <td>11%</td>           </tr>            <tr>             <td>               3.5 Star             </td>             <td>9.3% per year</td>             <td>9%</td>           </tr>            <tr>             <td>               4 Star             </td>             <td>9.8% per year</td>             <td>8%</td>           </tr>            <tr>             <td>               4.5 Star             </td>             <td>10.6% per year</td>             <td>10%</td>           </tr>            <tr>             <td>               5 Star             </td>             <td>12.1% per year</td>             <td>3%</td>           </tr>         </tbody>       </table>
	Predictability *string `json:"predictability,omitempty"`
	// Financial Strength is a measure of a company's overall financial health, rated on a scale of 1 to 10. It evaluates key factors such as interest coverage, debt-to-revenue ratio, and the Altman Z-Score, among others. <br>A higher score indicates a stronger financial position, with companies rated 7 or above considered financially stable and unlikely to face distress. Conversely, a score of 3 or below suggests potential financial difficulties, indicating a higher risk of distress.
	RankBalancesheet *float32 `json:"rank_balancesheet,omitempty"`
	RankBalancesheetHigh *float32 `json:"rank_balancesheet_high,omitempty"`
	RankBalancesheetLow *float32 `json:"rank_balancesheet_low,omitempty"`
	RankBalancesheetMed *float32 `json:"rank_balancesheet_med,omitempty"`
	// GF Value Rank evaluates the exclusive GuruFocus valuation and performance of a stock, rated on a scale from 1 to 10. It is primarily determined by the price-to-GF value ratio and backtesting results. Stocks in the third lowest percentile of valuation receive the highest rank of 10. <br> A higher score indicates a stock with a relatively low valuation and substantial potential for outperformance. Conversely, a lower score often reflects stocks that are either highly overvalued or deeply undervalued, both of which tend to underperform.
	RankGfValue *float32 `json:"rank_gf_value,omitempty"`
	RankGfValueHigh *float32 `json:"rank_gf_value_high,omitempty"`
	RankGfValueLow *float32 `json:"rank_gf_value_low,omitempty"`
	// Growth Rank measures the growth of a company in terms of its revenue and profitability, rated on a scale from 1 to 10. It considers key factors such as revenue and EBITDA growth rates, as well as the consistency and predictability of revenue. <br> A higher score reflects a greater ability to drive business growth, with companies considered to have strong and sustainable expansion potential. Conversely, a lower score indicates challenges in achieving consistent growth and scalability.
	RankGrowth *float32 `json:"rank_growth,omitempty"`
	RankGrowthHigh *float32 `json:"rank_growth_high,omitempty"`
	RankGrowthLow *float32 `json:"rank_growth_low,omitempty"`
	RankGrowthMed *float32 `json:"rank_growth_med,omitempty"`
	// Momentum Rank measures the strength and persistence of a stock's price movement over time, rated on a scale of 1 to 10. It incorporates the standardized momentum ratio and several other performance metrics. Stocks in the 70th percentile of the momentum ratio receive the highest rank of 10, based on the backtesting result of the stock price performance and the momentum ratio. <br> A higher score reflects strong price momentum and indicates greater potential for superior performance. Conversely, a lower score indicates that momentum is either too high or too low, and stocks tend to underperform.
	RankMomentum *float32 `json:"rank_momentum,omitempty"`
	RankMomentumHigh *float32 `json:"rank_momentum_high,omitempty"`
	RankMomentumLow *float32 `json:"rank_momentum_low,omitempty"`
	RankMomentumMed *float32 `json:"rank_momentum_med,omitempty"`
	// Profitability Rank measures a company's profitability and financial stability, rated on a scale of 1 to 10. It takes into account critical factors such as operating margin and its growth, Piotroski F-Score, predictability, and revenue growth, among others. <br> A higher score indicates superior profitability, with companies rated 7 or above considered to have more robust and sustainable profit generation. Conversely, a score of 3 or lower suggests challenges in generating consistent profits.
	RankProfitability *float32 `json:"rank_profitability,omitempty"`
	RankProfitabilityHigh *float32 `json:"rank_profitability_high,omitempty"`
	RankProfitabilityLow *float32 `json:"rank_profitability_low,omitempty"`
	RankProfitabilityMed *float32 `json:"rank_profitability_med,omitempty"`
}

// NewStockRankingsGuruFocusRankings instantiates a new StockRankingsGuruFocusRankings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStockRankingsGuruFocusRankings() *StockRankingsGuruFocusRankings {
	this := StockRankingsGuruFocusRankings{}
	return &this
}

// NewStockRankingsGuruFocusRankingsWithDefaults instantiates a new StockRankingsGuruFocusRankings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStockRankingsGuruFocusRankingsWithDefaults() *StockRankingsGuruFocusRankings {
	this := StockRankingsGuruFocusRankings{}
	return &this
}

// GetGfScore returns the GfScore field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetGfScore() float32 {
	if o == nil || IsNil(o.GfScore) {
		var ret float32
		return ret
	}
	return *o.GfScore
}

// GetGfScoreOk returns a tuple with the GfScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetGfScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.GfScore) {
		return nil, false
	}
	return o.GfScore, true
}

// HasGfScore returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasGfScore() bool {
	if o != nil && !IsNil(o.GfScore) {
		return true
	}

	return false
}

// SetGfScore gets a reference to the given float32 and assigns it to the GfScore field.
func (o *StockRankingsGuruFocusRankings) SetGfScore(v float32) {
	o.GfScore = &v
}

// GetGfScoreHigh returns the GfScoreHigh field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetGfScoreHigh() float32 {
	if o == nil || IsNil(o.GfScoreHigh) {
		var ret float32
		return ret
	}
	return *o.GfScoreHigh
}

// GetGfScoreHighOk returns a tuple with the GfScoreHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetGfScoreHighOk() (*float32, bool) {
	if o == nil || IsNil(o.GfScoreHigh) {
		return nil, false
	}
	return o.GfScoreHigh, true
}

// HasGfScoreHigh returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasGfScoreHigh() bool {
	if o != nil && !IsNil(o.GfScoreHigh) {
		return true
	}

	return false
}

// SetGfScoreHigh gets a reference to the given float32 and assigns it to the GfScoreHigh field.
func (o *StockRankingsGuruFocusRankings) SetGfScoreHigh(v float32) {
	o.GfScoreHigh = &v
}

// GetGfScoreLow returns the GfScoreLow field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetGfScoreLow() float32 {
	if o == nil || IsNil(o.GfScoreLow) {
		var ret float32
		return ret
	}
	return *o.GfScoreLow
}

// GetGfScoreLowOk returns a tuple with the GfScoreLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetGfScoreLowOk() (*float32, bool) {
	if o == nil || IsNil(o.GfScoreLow) {
		return nil, false
	}
	return o.GfScoreLow, true
}

// HasGfScoreLow returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasGfScoreLow() bool {
	if o != nil && !IsNil(o.GfScoreLow) {
		return true
	}

	return false
}

// SetGfScoreLow gets a reference to the given float32 and assigns it to the GfScoreLow field.
func (o *StockRankingsGuruFocusRankings) SetGfScoreLow(v float32) {
	o.GfScoreLow = &v
}

// GetGfScoreMed returns the GfScoreMed field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetGfScoreMed() float32 {
	if o == nil || IsNil(o.GfScoreMed) {
		var ret float32
		return ret
	}
	return *o.GfScoreMed
}

// GetGfScoreMedOk returns a tuple with the GfScoreMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetGfScoreMedOk() (*float32, bool) {
	if o == nil || IsNil(o.GfScoreMed) {
		return nil, false
	}
	return o.GfScoreMed, true
}

// HasGfScoreMed returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasGfScoreMed() bool {
	if o != nil && !IsNil(o.GfScoreMed) {
		return true
	}

	return false
}

// SetGfScoreMed gets a reference to the given float32 and assigns it to the GfScoreMed field.
func (o *StockRankingsGuruFocusRankings) SetGfScoreMed(v float32) {
	o.GfScoreMed = &v
}

// GetGfScoreMed5y returns the GfScoreMed5y field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetGfScoreMed5y() float32 {
	if o == nil || IsNil(o.GfScoreMed5y) {
		var ret float32
		return ret
	}
	return *o.GfScoreMed5y
}

// GetGfScoreMed5yOk returns a tuple with the GfScoreMed5y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetGfScoreMed5yOk() (*float32, bool) {
	if o == nil || IsNil(o.GfScoreMed5y) {
		return nil, false
	}
	return o.GfScoreMed5y, true
}

// HasGfScoreMed5y returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasGfScoreMed5y() bool {
	if o != nil && !IsNil(o.GfScoreMed5y) {
		return true
	}

	return false
}

// SetGfScoreMed5y gets a reference to the given float32 and assigns it to the GfScoreMed5y field.
func (o *StockRankingsGuruFocusRankings) SetGfScoreMed5y(v float32) {
	o.GfScoreMed5y = &v
}

// GetGfValue returns the GfValue field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetGfValue() float32 {
	if o == nil || IsNil(o.GfValue) {
		var ret float32
		return ret
	}
	return *o.GfValue
}

// GetGfValueOk returns a tuple with the GfValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetGfValueOk() (*float32, bool) {
	if o == nil || IsNil(o.GfValue) {
		return nil, false
	}
	return o.GfValue, true
}

// HasGfValue returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasGfValue() bool {
	if o != nil && !IsNil(o.GfValue) {
		return true
	}

	return false
}

// SetGfValue gets a reference to the given float32 and assigns it to the GfValue field.
func (o *StockRankingsGuruFocusRankings) SetGfValue(v float32) {
	o.GfValue = &v
}

// GetGfValueEst returns the GfValueEst field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetGfValueEst() float32 {
	if o == nil || IsNil(o.GfValueEst) {
		var ret float32
		return ret
	}
	return *o.GfValueEst
}

// GetGfValueEstOk returns a tuple with the GfValueEst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetGfValueEstOk() (*float32, bool) {
	if o == nil || IsNil(o.GfValueEst) {
		return nil, false
	}
	return o.GfValueEst, true
}

// HasGfValueEst returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasGfValueEst() bool {
	if o != nil && !IsNil(o.GfValueEst) {
		return true
	}

	return false
}

// SetGfValueEst gets a reference to the given float32 and assigns it to the GfValueEst field.
func (o *StockRankingsGuruFocusRankings) SetGfValueEst(v float32) {
	o.GfValueEst = &v
}

// GetGfValueEst2nd returns the GfValueEst2nd field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetGfValueEst2nd() float32 {
	if o == nil || IsNil(o.GfValueEst2nd) {
		var ret float32
		return ret
	}
	return *o.GfValueEst2nd
}

// GetGfValueEst2ndOk returns a tuple with the GfValueEst2nd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetGfValueEst2ndOk() (*float32, bool) {
	if o == nil || IsNil(o.GfValueEst2nd) {
		return nil, false
	}
	return o.GfValueEst2nd, true
}

// HasGfValueEst2nd returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasGfValueEst2nd() bool {
	if o != nil && !IsNil(o.GfValueEst2nd) {
		return true
	}

	return false
}

// SetGfValueEst2nd gets a reference to the given float32 and assigns it to the GfValueEst2nd field.
func (o *StockRankingsGuruFocusRankings) SetGfValueEst2nd(v float32) {
	o.GfValueEst2nd = &v
}

// GetGfValueEst3rd returns the GfValueEst3rd field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetGfValueEst3rd() float32 {
	if o == nil || IsNil(o.GfValueEst3rd) {
		var ret float32
		return ret
	}
	return *o.GfValueEst3rd
}

// GetGfValueEst3rdOk returns a tuple with the GfValueEst3rd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetGfValueEst3rdOk() (*float32, bool) {
	if o == nil || IsNil(o.GfValueEst3rd) {
		return nil, false
	}
	return o.GfValueEst3rd, true
}

// HasGfValueEst3rd returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasGfValueEst3rd() bool {
	if o != nil && !IsNil(o.GfValueEst3rd) {
		return true
	}

	return false
}

// SetGfValueEst3rd gets a reference to the given float32 and assigns it to the GfValueEst3rd field.
func (o *StockRankingsGuruFocusRankings) SetGfValueEst3rd(v float32) {
	o.GfValueEst3rd = &v
}

// GetGfValuePctChange returns the GfValuePctChange field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetGfValuePctChange() float32 {
	if o == nil || IsNil(o.GfValuePctChange) {
		var ret float32
		return ret
	}
	return *o.GfValuePctChange
}

// GetGfValuePctChangeOk returns a tuple with the GfValuePctChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetGfValuePctChangeOk() (*float32, bool) {
	if o == nil || IsNil(o.GfValuePctChange) {
		return nil, false
	}
	return o.GfValuePctChange, true
}

// HasGfValuePctChange returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasGfValuePctChange() bool {
	if o != nil && !IsNil(o.GfValuePctChange) {
		return true
	}

	return false
}

// SetGfValuePctChange gets a reference to the given float32 and assigns it to the GfValuePctChange field.
func (o *StockRankingsGuruFocusRankings) SetGfValuePctChange(v float32) {
	o.GfValuePctChange = &v
}

// GetMarginGfValue returns the MarginGfValue field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetMarginGfValue() float32 {
	if o == nil || IsNil(o.MarginGfValue) {
		var ret float32
		return ret
	}
	return *o.MarginGfValue
}

// GetMarginGfValueOk returns a tuple with the MarginGfValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetMarginGfValueOk() (*float32, bool) {
	if o == nil || IsNil(o.MarginGfValue) {
		return nil, false
	}
	return o.MarginGfValue, true
}

// HasMarginGfValue returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasMarginGfValue() bool {
	if o != nil && !IsNil(o.MarginGfValue) {
		return true
	}

	return false
}

// SetMarginGfValue gets a reference to the given float32 and assigns it to the MarginGfValue field.
func (o *StockRankingsGuruFocusRankings) SetMarginGfValue(v float32) {
	o.MarginGfValue = &v
}

// GetP2gfValue returns the P2gfValue field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetP2gfValue() float32 {
	if o == nil || IsNil(o.P2gfValue) {
		var ret float32
		return ret
	}
	return *o.P2gfValue
}

// GetP2gfValueOk returns a tuple with the P2gfValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetP2gfValueOk() (*float32, bool) {
	if o == nil || IsNil(o.P2gfValue) {
		return nil, false
	}
	return o.P2gfValue, true
}

// HasP2gfValue returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasP2gfValue() bool {
	if o != nil && !IsNil(o.P2gfValue) {
		return true
	}

	return false
}

// SetP2gfValue gets a reference to the given float32 and assigns it to the P2gfValue field.
func (o *StockRankingsGuruFocusRankings) SetP2gfValue(v float32) {
	o.P2gfValue = &v
}

// GetP2gfValueEst returns the P2gfValueEst field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetP2gfValueEst() float32 {
	if o == nil || IsNil(o.P2gfValueEst) {
		var ret float32
		return ret
	}
	return *o.P2gfValueEst
}

// GetP2gfValueEstOk returns a tuple with the P2gfValueEst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetP2gfValueEstOk() (*float32, bool) {
	if o == nil || IsNil(o.P2gfValueEst) {
		return nil, false
	}
	return o.P2gfValueEst, true
}

// HasP2gfValueEst returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasP2gfValueEst() bool {
	if o != nil && !IsNil(o.P2gfValueEst) {
		return true
	}

	return false
}

// SetP2gfValueEst gets a reference to the given float32 and assigns it to the P2gfValueEst field.
func (o *StockRankingsGuruFocusRankings) SetP2gfValueEst(v float32) {
	o.P2gfValueEst = &v
}

// GetP2gfValueHigh returns the P2gfValueHigh field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetP2gfValueHigh() float32 {
	if o == nil || IsNil(o.P2gfValueHigh) {
		var ret float32
		return ret
	}
	return *o.P2gfValueHigh
}

// GetP2gfValueHighOk returns a tuple with the P2gfValueHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetP2gfValueHighOk() (*float32, bool) {
	if o == nil || IsNil(o.P2gfValueHigh) {
		return nil, false
	}
	return o.P2gfValueHigh, true
}

// HasP2gfValueHigh returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasP2gfValueHigh() bool {
	if o != nil && !IsNil(o.P2gfValueHigh) {
		return true
	}

	return false
}

// SetP2gfValueHigh gets a reference to the given float32 and assigns it to the P2gfValueHigh field.
func (o *StockRankingsGuruFocusRankings) SetP2gfValueHigh(v float32) {
	o.P2gfValueHigh = &v
}

// GetP2gfValueLow returns the P2gfValueLow field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetP2gfValueLow() float32 {
	if o == nil || IsNil(o.P2gfValueLow) {
		var ret float32
		return ret
	}
	return *o.P2gfValueLow
}

// GetP2gfValueLowOk returns a tuple with the P2gfValueLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetP2gfValueLowOk() (*float32, bool) {
	if o == nil || IsNil(o.P2gfValueLow) {
		return nil, false
	}
	return o.P2gfValueLow, true
}

// HasP2gfValueLow returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasP2gfValueLow() bool {
	if o != nil && !IsNil(o.P2gfValueLow) {
		return true
	}

	return false
}

// SetP2gfValueLow gets a reference to the given float32 and assigns it to the P2gfValueLow field.
func (o *StockRankingsGuruFocusRankings) SetP2gfValueLow(v float32) {
	o.P2gfValueLow = &v
}

// GetP2gfValueMed returns the P2gfValueMed field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetP2gfValueMed() float32 {
	if o == nil || IsNil(o.P2gfValueMed) {
		var ret float32
		return ret
	}
	return *o.P2gfValueMed
}

// GetP2gfValueMedOk returns a tuple with the P2gfValueMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetP2gfValueMedOk() (*float32, bool) {
	if o == nil || IsNil(o.P2gfValueMed) {
		return nil, false
	}
	return o.P2gfValueMed, true
}

// HasP2gfValueMed returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasP2gfValueMed() bool {
	if o != nil && !IsNil(o.P2gfValueMed) {
		return true
	}

	return false
}

// SetP2gfValueMed gets a reference to the given float32 and assigns it to the P2gfValueMed field.
func (o *StockRankingsGuruFocusRankings) SetP2gfValueMed(v float32) {
	o.P2gfValueMed = &v
}

// GetPredictability returns the Predictability field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetPredictability() string {
	if o == nil || IsNil(o.Predictability) {
		var ret string
		return ret
	}
	return *o.Predictability
}

// GetPredictabilityOk returns a tuple with the Predictability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetPredictabilityOk() (*string, bool) {
	if o == nil || IsNil(o.Predictability) {
		return nil, false
	}
	return o.Predictability, true
}

// HasPredictability returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasPredictability() bool {
	if o != nil && !IsNil(o.Predictability) {
		return true
	}

	return false
}

// SetPredictability gets a reference to the given string and assigns it to the Predictability field.
func (o *StockRankingsGuruFocusRankings) SetPredictability(v string) {
	o.Predictability = &v
}

// GetRankBalancesheet returns the RankBalancesheet field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankBalancesheet() float32 {
	if o == nil || IsNil(o.RankBalancesheet) {
		var ret float32
		return ret
	}
	return *o.RankBalancesheet
}

// GetRankBalancesheetOk returns a tuple with the RankBalancesheet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankBalancesheetOk() (*float32, bool) {
	if o == nil || IsNil(o.RankBalancesheet) {
		return nil, false
	}
	return o.RankBalancesheet, true
}

// HasRankBalancesheet returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankBalancesheet() bool {
	if o != nil && !IsNil(o.RankBalancesheet) {
		return true
	}

	return false
}

// SetRankBalancesheet gets a reference to the given float32 and assigns it to the RankBalancesheet field.
func (o *StockRankingsGuruFocusRankings) SetRankBalancesheet(v float32) {
	o.RankBalancesheet = &v
}

// GetRankBalancesheetHigh returns the RankBalancesheetHigh field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankBalancesheetHigh() float32 {
	if o == nil || IsNil(o.RankBalancesheetHigh) {
		var ret float32
		return ret
	}
	return *o.RankBalancesheetHigh
}

// GetRankBalancesheetHighOk returns a tuple with the RankBalancesheetHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankBalancesheetHighOk() (*float32, bool) {
	if o == nil || IsNil(o.RankBalancesheetHigh) {
		return nil, false
	}
	return o.RankBalancesheetHigh, true
}

// HasRankBalancesheetHigh returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankBalancesheetHigh() bool {
	if o != nil && !IsNil(o.RankBalancesheetHigh) {
		return true
	}

	return false
}

// SetRankBalancesheetHigh gets a reference to the given float32 and assigns it to the RankBalancesheetHigh field.
func (o *StockRankingsGuruFocusRankings) SetRankBalancesheetHigh(v float32) {
	o.RankBalancesheetHigh = &v
}

// GetRankBalancesheetLow returns the RankBalancesheetLow field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankBalancesheetLow() float32 {
	if o == nil || IsNil(o.RankBalancesheetLow) {
		var ret float32
		return ret
	}
	return *o.RankBalancesheetLow
}

// GetRankBalancesheetLowOk returns a tuple with the RankBalancesheetLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankBalancesheetLowOk() (*float32, bool) {
	if o == nil || IsNil(o.RankBalancesheetLow) {
		return nil, false
	}
	return o.RankBalancesheetLow, true
}

// HasRankBalancesheetLow returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankBalancesheetLow() bool {
	if o != nil && !IsNil(o.RankBalancesheetLow) {
		return true
	}

	return false
}

// SetRankBalancesheetLow gets a reference to the given float32 and assigns it to the RankBalancesheetLow field.
func (o *StockRankingsGuruFocusRankings) SetRankBalancesheetLow(v float32) {
	o.RankBalancesheetLow = &v
}

// GetRankBalancesheetMed returns the RankBalancesheetMed field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankBalancesheetMed() float32 {
	if o == nil || IsNil(o.RankBalancesheetMed) {
		var ret float32
		return ret
	}
	return *o.RankBalancesheetMed
}

// GetRankBalancesheetMedOk returns a tuple with the RankBalancesheetMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankBalancesheetMedOk() (*float32, bool) {
	if o == nil || IsNil(o.RankBalancesheetMed) {
		return nil, false
	}
	return o.RankBalancesheetMed, true
}

// HasRankBalancesheetMed returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankBalancesheetMed() bool {
	if o != nil && !IsNil(o.RankBalancesheetMed) {
		return true
	}

	return false
}

// SetRankBalancesheetMed gets a reference to the given float32 and assigns it to the RankBalancesheetMed field.
func (o *StockRankingsGuruFocusRankings) SetRankBalancesheetMed(v float32) {
	o.RankBalancesheetMed = &v
}

// GetRankGfValue returns the RankGfValue field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankGfValue() float32 {
	if o == nil || IsNil(o.RankGfValue) {
		var ret float32
		return ret
	}
	return *o.RankGfValue
}

// GetRankGfValueOk returns a tuple with the RankGfValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankGfValueOk() (*float32, bool) {
	if o == nil || IsNil(o.RankGfValue) {
		return nil, false
	}
	return o.RankGfValue, true
}

// HasRankGfValue returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankGfValue() bool {
	if o != nil && !IsNil(o.RankGfValue) {
		return true
	}

	return false
}

// SetRankGfValue gets a reference to the given float32 and assigns it to the RankGfValue field.
func (o *StockRankingsGuruFocusRankings) SetRankGfValue(v float32) {
	o.RankGfValue = &v
}

// GetRankGfValueHigh returns the RankGfValueHigh field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankGfValueHigh() float32 {
	if o == nil || IsNil(o.RankGfValueHigh) {
		var ret float32
		return ret
	}
	return *o.RankGfValueHigh
}

// GetRankGfValueHighOk returns a tuple with the RankGfValueHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankGfValueHighOk() (*float32, bool) {
	if o == nil || IsNil(o.RankGfValueHigh) {
		return nil, false
	}
	return o.RankGfValueHigh, true
}

// HasRankGfValueHigh returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankGfValueHigh() bool {
	if o != nil && !IsNil(o.RankGfValueHigh) {
		return true
	}

	return false
}

// SetRankGfValueHigh gets a reference to the given float32 and assigns it to the RankGfValueHigh field.
func (o *StockRankingsGuruFocusRankings) SetRankGfValueHigh(v float32) {
	o.RankGfValueHigh = &v
}

// GetRankGfValueLow returns the RankGfValueLow field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankGfValueLow() float32 {
	if o == nil || IsNil(o.RankGfValueLow) {
		var ret float32
		return ret
	}
	return *o.RankGfValueLow
}

// GetRankGfValueLowOk returns a tuple with the RankGfValueLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankGfValueLowOk() (*float32, bool) {
	if o == nil || IsNil(o.RankGfValueLow) {
		return nil, false
	}
	return o.RankGfValueLow, true
}

// HasRankGfValueLow returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankGfValueLow() bool {
	if o != nil && !IsNil(o.RankGfValueLow) {
		return true
	}

	return false
}

// SetRankGfValueLow gets a reference to the given float32 and assigns it to the RankGfValueLow field.
func (o *StockRankingsGuruFocusRankings) SetRankGfValueLow(v float32) {
	o.RankGfValueLow = &v
}

// GetRankGrowth returns the RankGrowth field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankGrowth() float32 {
	if o == nil || IsNil(o.RankGrowth) {
		var ret float32
		return ret
	}
	return *o.RankGrowth
}

// GetRankGrowthOk returns a tuple with the RankGrowth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankGrowthOk() (*float32, bool) {
	if o == nil || IsNil(o.RankGrowth) {
		return nil, false
	}
	return o.RankGrowth, true
}

// HasRankGrowth returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankGrowth() bool {
	if o != nil && !IsNil(o.RankGrowth) {
		return true
	}

	return false
}

// SetRankGrowth gets a reference to the given float32 and assigns it to the RankGrowth field.
func (o *StockRankingsGuruFocusRankings) SetRankGrowth(v float32) {
	o.RankGrowth = &v
}

// GetRankGrowthHigh returns the RankGrowthHigh field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankGrowthHigh() float32 {
	if o == nil || IsNil(o.RankGrowthHigh) {
		var ret float32
		return ret
	}
	return *o.RankGrowthHigh
}

// GetRankGrowthHighOk returns a tuple with the RankGrowthHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankGrowthHighOk() (*float32, bool) {
	if o == nil || IsNil(o.RankGrowthHigh) {
		return nil, false
	}
	return o.RankGrowthHigh, true
}

// HasRankGrowthHigh returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankGrowthHigh() bool {
	if o != nil && !IsNil(o.RankGrowthHigh) {
		return true
	}

	return false
}

// SetRankGrowthHigh gets a reference to the given float32 and assigns it to the RankGrowthHigh field.
func (o *StockRankingsGuruFocusRankings) SetRankGrowthHigh(v float32) {
	o.RankGrowthHigh = &v
}

// GetRankGrowthLow returns the RankGrowthLow field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankGrowthLow() float32 {
	if o == nil || IsNil(o.RankGrowthLow) {
		var ret float32
		return ret
	}
	return *o.RankGrowthLow
}

// GetRankGrowthLowOk returns a tuple with the RankGrowthLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankGrowthLowOk() (*float32, bool) {
	if o == nil || IsNil(o.RankGrowthLow) {
		return nil, false
	}
	return o.RankGrowthLow, true
}

// HasRankGrowthLow returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankGrowthLow() bool {
	if o != nil && !IsNil(o.RankGrowthLow) {
		return true
	}

	return false
}

// SetRankGrowthLow gets a reference to the given float32 and assigns it to the RankGrowthLow field.
func (o *StockRankingsGuruFocusRankings) SetRankGrowthLow(v float32) {
	o.RankGrowthLow = &v
}

// GetRankGrowthMed returns the RankGrowthMed field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankGrowthMed() float32 {
	if o == nil || IsNil(o.RankGrowthMed) {
		var ret float32
		return ret
	}
	return *o.RankGrowthMed
}

// GetRankGrowthMedOk returns a tuple with the RankGrowthMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankGrowthMedOk() (*float32, bool) {
	if o == nil || IsNil(o.RankGrowthMed) {
		return nil, false
	}
	return o.RankGrowthMed, true
}

// HasRankGrowthMed returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankGrowthMed() bool {
	if o != nil && !IsNil(o.RankGrowthMed) {
		return true
	}

	return false
}

// SetRankGrowthMed gets a reference to the given float32 and assigns it to the RankGrowthMed field.
func (o *StockRankingsGuruFocusRankings) SetRankGrowthMed(v float32) {
	o.RankGrowthMed = &v
}

// GetRankMomentum returns the RankMomentum field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankMomentum() float32 {
	if o == nil || IsNil(o.RankMomentum) {
		var ret float32
		return ret
	}
	return *o.RankMomentum
}

// GetRankMomentumOk returns a tuple with the RankMomentum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankMomentumOk() (*float32, bool) {
	if o == nil || IsNil(o.RankMomentum) {
		return nil, false
	}
	return o.RankMomentum, true
}

// HasRankMomentum returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankMomentum() bool {
	if o != nil && !IsNil(o.RankMomentum) {
		return true
	}

	return false
}

// SetRankMomentum gets a reference to the given float32 and assigns it to the RankMomentum field.
func (o *StockRankingsGuruFocusRankings) SetRankMomentum(v float32) {
	o.RankMomentum = &v
}

// GetRankMomentumHigh returns the RankMomentumHigh field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankMomentumHigh() float32 {
	if o == nil || IsNil(o.RankMomentumHigh) {
		var ret float32
		return ret
	}
	return *o.RankMomentumHigh
}

// GetRankMomentumHighOk returns a tuple with the RankMomentumHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankMomentumHighOk() (*float32, bool) {
	if o == nil || IsNil(o.RankMomentumHigh) {
		return nil, false
	}
	return o.RankMomentumHigh, true
}

// HasRankMomentumHigh returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankMomentumHigh() bool {
	if o != nil && !IsNil(o.RankMomentumHigh) {
		return true
	}

	return false
}

// SetRankMomentumHigh gets a reference to the given float32 and assigns it to the RankMomentumHigh field.
func (o *StockRankingsGuruFocusRankings) SetRankMomentumHigh(v float32) {
	o.RankMomentumHigh = &v
}

// GetRankMomentumLow returns the RankMomentumLow field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankMomentumLow() float32 {
	if o == nil || IsNil(o.RankMomentumLow) {
		var ret float32
		return ret
	}
	return *o.RankMomentumLow
}

// GetRankMomentumLowOk returns a tuple with the RankMomentumLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankMomentumLowOk() (*float32, bool) {
	if o == nil || IsNil(o.RankMomentumLow) {
		return nil, false
	}
	return o.RankMomentumLow, true
}

// HasRankMomentumLow returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankMomentumLow() bool {
	if o != nil && !IsNil(o.RankMomentumLow) {
		return true
	}

	return false
}

// SetRankMomentumLow gets a reference to the given float32 and assigns it to the RankMomentumLow field.
func (o *StockRankingsGuruFocusRankings) SetRankMomentumLow(v float32) {
	o.RankMomentumLow = &v
}

// GetRankMomentumMed returns the RankMomentumMed field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankMomentumMed() float32 {
	if o == nil || IsNil(o.RankMomentumMed) {
		var ret float32
		return ret
	}
	return *o.RankMomentumMed
}

// GetRankMomentumMedOk returns a tuple with the RankMomentumMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankMomentumMedOk() (*float32, bool) {
	if o == nil || IsNil(o.RankMomentumMed) {
		return nil, false
	}
	return o.RankMomentumMed, true
}

// HasRankMomentumMed returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankMomentumMed() bool {
	if o != nil && !IsNil(o.RankMomentumMed) {
		return true
	}

	return false
}

// SetRankMomentumMed gets a reference to the given float32 and assigns it to the RankMomentumMed field.
func (o *StockRankingsGuruFocusRankings) SetRankMomentumMed(v float32) {
	o.RankMomentumMed = &v
}

// GetRankProfitability returns the RankProfitability field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankProfitability() float32 {
	if o == nil || IsNil(o.RankProfitability) {
		var ret float32
		return ret
	}
	return *o.RankProfitability
}

// GetRankProfitabilityOk returns a tuple with the RankProfitability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankProfitabilityOk() (*float32, bool) {
	if o == nil || IsNil(o.RankProfitability) {
		return nil, false
	}
	return o.RankProfitability, true
}

// HasRankProfitability returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankProfitability() bool {
	if o != nil && !IsNil(o.RankProfitability) {
		return true
	}

	return false
}

// SetRankProfitability gets a reference to the given float32 and assigns it to the RankProfitability field.
func (o *StockRankingsGuruFocusRankings) SetRankProfitability(v float32) {
	o.RankProfitability = &v
}

// GetRankProfitabilityHigh returns the RankProfitabilityHigh field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankProfitabilityHigh() float32 {
	if o == nil || IsNil(o.RankProfitabilityHigh) {
		var ret float32
		return ret
	}
	return *o.RankProfitabilityHigh
}

// GetRankProfitabilityHighOk returns a tuple with the RankProfitabilityHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankProfitabilityHighOk() (*float32, bool) {
	if o == nil || IsNil(o.RankProfitabilityHigh) {
		return nil, false
	}
	return o.RankProfitabilityHigh, true
}

// HasRankProfitabilityHigh returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankProfitabilityHigh() bool {
	if o != nil && !IsNil(o.RankProfitabilityHigh) {
		return true
	}

	return false
}

// SetRankProfitabilityHigh gets a reference to the given float32 and assigns it to the RankProfitabilityHigh field.
func (o *StockRankingsGuruFocusRankings) SetRankProfitabilityHigh(v float32) {
	o.RankProfitabilityHigh = &v
}

// GetRankProfitabilityLow returns the RankProfitabilityLow field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankProfitabilityLow() float32 {
	if o == nil || IsNil(o.RankProfitabilityLow) {
		var ret float32
		return ret
	}
	return *o.RankProfitabilityLow
}

// GetRankProfitabilityLowOk returns a tuple with the RankProfitabilityLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankProfitabilityLowOk() (*float32, bool) {
	if o == nil || IsNil(o.RankProfitabilityLow) {
		return nil, false
	}
	return o.RankProfitabilityLow, true
}

// HasRankProfitabilityLow returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankProfitabilityLow() bool {
	if o != nil && !IsNil(o.RankProfitabilityLow) {
		return true
	}

	return false
}

// SetRankProfitabilityLow gets a reference to the given float32 and assigns it to the RankProfitabilityLow field.
func (o *StockRankingsGuruFocusRankings) SetRankProfitabilityLow(v float32) {
	o.RankProfitabilityLow = &v
}

// GetRankProfitabilityMed returns the RankProfitabilityMed field value if set, zero value otherwise.
func (o *StockRankingsGuruFocusRankings) GetRankProfitabilityMed() float32 {
	if o == nil || IsNil(o.RankProfitabilityMed) {
		var ret float32
		return ret
	}
	return *o.RankProfitabilityMed
}

// GetRankProfitabilityMedOk returns a tuple with the RankProfitabilityMed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockRankingsGuruFocusRankings) GetRankProfitabilityMedOk() (*float32, bool) {
	if o == nil || IsNil(o.RankProfitabilityMed) {
		return nil, false
	}
	return o.RankProfitabilityMed, true
}

// HasRankProfitabilityMed returns a boolean if a field has been set.
func (o *StockRankingsGuruFocusRankings) HasRankProfitabilityMed() bool {
	if o != nil && !IsNil(o.RankProfitabilityMed) {
		return true
	}

	return false
}

// SetRankProfitabilityMed gets a reference to the given float32 and assigns it to the RankProfitabilityMed field.
func (o *StockRankingsGuruFocusRankings) SetRankProfitabilityMed(v float32) {
	o.RankProfitabilityMed = &v
}

func (o StockRankingsGuruFocusRankings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StockRankingsGuruFocusRankings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GfScore) {
		toSerialize["gf_score"] = o.GfScore
	}
	if !IsNil(o.GfScoreHigh) {
		toSerialize["gf_score_high"] = o.GfScoreHigh
	}
	if !IsNil(o.GfScoreLow) {
		toSerialize["gf_score_low"] = o.GfScoreLow
	}
	if !IsNil(o.GfScoreMed) {
		toSerialize["gf_score_med"] = o.GfScoreMed
	}
	if !IsNil(o.GfScoreMed5y) {
		toSerialize["gf_score_med_5y"] = o.GfScoreMed5y
	}
	if !IsNil(o.GfValue) {
		toSerialize["gf_value"] = o.GfValue
	}
	if !IsNil(o.GfValueEst) {
		toSerialize["gf_value_est"] = o.GfValueEst
	}
	if !IsNil(o.GfValueEst2nd) {
		toSerialize["gf_value_est_2nd"] = o.GfValueEst2nd
	}
	if !IsNil(o.GfValueEst3rd) {
		toSerialize["gf_value_est_3rd"] = o.GfValueEst3rd
	}
	if !IsNil(o.GfValuePctChange) {
		toSerialize["gf_value_pct_change"] = o.GfValuePctChange
	}
	if !IsNil(o.MarginGfValue) {
		toSerialize["margin_gf_value"] = o.MarginGfValue
	}
	if !IsNil(o.P2gfValue) {
		toSerialize["p2gf_value"] = o.P2gfValue
	}
	if !IsNil(o.P2gfValueEst) {
		toSerialize["p2gf_value_est"] = o.P2gfValueEst
	}
	if !IsNil(o.P2gfValueHigh) {
		toSerialize["p2gf_value_high"] = o.P2gfValueHigh
	}
	if !IsNil(o.P2gfValueLow) {
		toSerialize["p2gf_value_low"] = o.P2gfValueLow
	}
	if !IsNil(o.P2gfValueMed) {
		toSerialize["p2gf_value_med"] = o.P2gfValueMed
	}
	if !IsNil(o.Predictability) {
		toSerialize["predictability"] = o.Predictability
	}
	if !IsNil(o.RankBalancesheet) {
		toSerialize["rank_balancesheet"] = o.RankBalancesheet
	}
	if !IsNil(o.RankBalancesheetHigh) {
		toSerialize["rank_balancesheet_high"] = o.RankBalancesheetHigh
	}
	if !IsNil(o.RankBalancesheetLow) {
		toSerialize["rank_balancesheet_low"] = o.RankBalancesheetLow
	}
	if !IsNil(o.RankBalancesheetMed) {
		toSerialize["rank_balancesheet_med"] = o.RankBalancesheetMed
	}
	if !IsNil(o.RankGfValue) {
		toSerialize["rank_gf_value"] = o.RankGfValue
	}
	if !IsNil(o.RankGfValueHigh) {
		toSerialize["rank_gf_value_high"] = o.RankGfValueHigh
	}
	if !IsNil(o.RankGfValueLow) {
		toSerialize["rank_gf_value_low"] = o.RankGfValueLow
	}
	if !IsNil(o.RankGrowth) {
		toSerialize["rank_growth"] = o.RankGrowth
	}
	if !IsNil(o.RankGrowthHigh) {
		toSerialize["rank_growth_high"] = o.RankGrowthHigh
	}
	if !IsNil(o.RankGrowthLow) {
		toSerialize["rank_growth_low"] = o.RankGrowthLow
	}
	if !IsNil(o.RankGrowthMed) {
		toSerialize["rank_growth_med"] = o.RankGrowthMed
	}
	if !IsNil(o.RankMomentum) {
		toSerialize["rank_momentum"] = o.RankMomentum
	}
	if !IsNil(o.RankMomentumHigh) {
		toSerialize["rank_momentum_high"] = o.RankMomentumHigh
	}
	if !IsNil(o.RankMomentumLow) {
		toSerialize["rank_momentum_low"] = o.RankMomentumLow
	}
	if !IsNil(o.RankMomentumMed) {
		toSerialize["rank_momentum_med"] = o.RankMomentumMed
	}
	if !IsNil(o.RankProfitability) {
		toSerialize["rank_profitability"] = o.RankProfitability
	}
	if !IsNil(o.RankProfitabilityHigh) {
		toSerialize["rank_profitability_high"] = o.RankProfitabilityHigh
	}
	if !IsNil(o.RankProfitabilityLow) {
		toSerialize["rank_profitability_low"] = o.RankProfitabilityLow
	}
	if !IsNil(o.RankProfitabilityMed) {
		toSerialize["rank_profitability_med"] = o.RankProfitabilityMed
	}
	return toSerialize, nil
}

type NullableStockRankingsGuruFocusRankings struct {
	value *StockRankingsGuruFocusRankings
	isSet bool
}

func (v NullableStockRankingsGuruFocusRankings) Get() *StockRankingsGuruFocusRankings {
	return v.value
}

func (v *NullableStockRankingsGuruFocusRankings) Set(val *StockRankingsGuruFocusRankings) {
	v.value = val
	v.isSet = true
}

func (v NullableStockRankingsGuruFocusRankings) IsSet() bool {
	return v.isSet
}

func (v *NullableStockRankingsGuruFocusRankings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStockRankingsGuruFocusRankings(val *StockRankingsGuruFocusRankings) *NullableStockRankingsGuruFocusRankings {
	return &NullableStockRankingsGuruFocusRankings{value: val, isSet: true}
}

func (v NullableStockRankingsGuruFocusRankings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStockRankingsGuruFocusRankings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


