/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ValuationsNNOREITDIRECT type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValuationsNNOREITDIRECT{}

// ValuationsNNOREITDIRECT struct for ValuationsNNOREITDIRECT
type ValuationsNNOREITDIRECT struct {
	BasicInformation *ValuationsNNOREITDIRECTBasicInformation `json:"basic_information,omitempty"`
	PerShareData *ValuationsNNOREITDIRECTPerShareData `json:"per_share_data,omitempty"`
	Ratios *ValuationsNNOREITDIRECTRatios `json:"ratios,omitempty"`
	ValuationRatios *ValuationsNNOREITDIRECTValuationRatios `json:"valuation_ratios,omitempty"`
	ValuationandQuality *ValuationsNNOREITDIRECTValuationandQuality `json:"valuationand_quality,omitempty"`
}

// NewValuationsNNOREITDIRECT instantiates a new ValuationsNNOREITDIRECT object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValuationsNNOREITDIRECT() *ValuationsNNOREITDIRECT {
	this := ValuationsNNOREITDIRECT{}
	return &this
}

// NewValuationsNNOREITDIRECTWithDefaults instantiates a new ValuationsNNOREITDIRECT object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValuationsNNOREITDIRECTWithDefaults() *ValuationsNNOREITDIRECT {
	this := ValuationsNNOREITDIRECT{}
	return &this
}

// GetBasicInformation returns the BasicInformation field value if set, zero value otherwise.
func (o *ValuationsNNOREITDIRECT) GetBasicInformation() ValuationsNNOREITDIRECTBasicInformation {
	if o == nil || IsNil(o.BasicInformation) {
		var ret ValuationsNNOREITDIRECTBasicInformation
		return ret
	}
	return *o.BasicInformation
}

// GetBasicInformationOk returns a tuple with the BasicInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValuationsNNOREITDIRECT) GetBasicInformationOk() (*ValuationsNNOREITDIRECTBasicInformation, bool) {
	if o == nil || IsNil(o.BasicInformation) {
		return nil, false
	}
	return o.BasicInformation, true
}

// HasBasicInformation returns a boolean if a field has been set.
func (o *ValuationsNNOREITDIRECT) HasBasicInformation() bool {
	if o != nil && !IsNil(o.BasicInformation) {
		return true
	}

	return false
}

// SetBasicInformation gets a reference to the given ValuationsNNOREITDIRECTBasicInformation and assigns it to the BasicInformation field.
func (o *ValuationsNNOREITDIRECT) SetBasicInformation(v ValuationsNNOREITDIRECTBasicInformation) {
	o.BasicInformation = &v
}

// GetPerShareData returns the PerShareData field value if set, zero value otherwise.
func (o *ValuationsNNOREITDIRECT) GetPerShareData() ValuationsNNOREITDIRECTPerShareData {
	if o == nil || IsNil(o.PerShareData) {
		var ret ValuationsNNOREITDIRECTPerShareData
		return ret
	}
	return *o.PerShareData
}

// GetPerShareDataOk returns a tuple with the PerShareData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValuationsNNOREITDIRECT) GetPerShareDataOk() (*ValuationsNNOREITDIRECTPerShareData, bool) {
	if o == nil || IsNil(o.PerShareData) {
		return nil, false
	}
	return o.PerShareData, true
}

// HasPerShareData returns a boolean if a field has been set.
func (o *ValuationsNNOREITDIRECT) HasPerShareData() bool {
	if o != nil && !IsNil(o.PerShareData) {
		return true
	}

	return false
}

// SetPerShareData gets a reference to the given ValuationsNNOREITDIRECTPerShareData and assigns it to the PerShareData field.
func (o *ValuationsNNOREITDIRECT) SetPerShareData(v ValuationsNNOREITDIRECTPerShareData) {
	o.PerShareData = &v
}

// GetRatios returns the Ratios field value if set, zero value otherwise.
func (o *ValuationsNNOREITDIRECT) GetRatios() ValuationsNNOREITDIRECTRatios {
	if o == nil || IsNil(o.Ratios) {
		var ret ValuationsNNOREITDIRECTRatios
		return ret
	}
	return *o.Ratios
}

// GetRatiosOk returns a tuple with the Ratios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValuationsNNOREITDIRECT) GetRatiosOk() (*ValuationsNNOREITDIRECTRatios, bool) {
	if o == nil || IsNil(o.Ratios) {
		return nil, false
	}
	return o.Ratios, true
}

// HasRatios returns a boolean if a field has been set.
func (o *ValuationsNNOREITDIRECT) HasRatios() bool {
	if o != nil && !IsNil(o.Ratios) {
		return true
	}

	return false
}

// SetRatios gets a reference to the given ValuationsNNOREITDIRECTRatios and assigns it to the Ratios field.
func (o *ValuationsNNOREITDIRECT) SetRatios(v ValuationsNNOREITDIRECTRatios) {
	o.Ratios = &v
}

// GetValuationRatios returns the ValuationRatios field value if set, zero value otherwise.
func (o *ValuationsNNOREITDIRECT) GetValuationRatios() ValuationsNNOREITDIRECTValuationRatios {
	if o == nil || IsNil(o.ValuationRatios) {
		var ret ValuationsNNOREITDIRECTValuationRatios
		return ret
	}
	return *o.ValuationRatios
}

// GetValuationRatiosOk returns a tuple with the ValuationRatios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValuationsNNOREITDIRECT) GetValuationRatiosOk() (*ValuationsNNOREITDIRECTValuationRatios, bool) {
	if o == nil || IsNil(o.ValuationRatios) {
		return nil, false
	}
	return o.ValuationRatios, true
}

// HasValuationRatios returns a boolean if a field has been set.
func (o *ValuationsNNOREITDIRECT) HasValuationRatios() bool {
	if o != nil && !IsNil(o.ValuationRatios) {
		return true
	}

	return false
}

// SetValuationRatios gets a reference to the given ValuationsNNOREITDIRECTValuationRatios and assigns it to the ValuationRatios field.
func (o *ValuationsNNOREITDIRECT) SetValuationRatios(v ValuationsNNOREITDIRECTValuationRatios) {
	o.ValuationRatios = &v
}

// GetValuationandQuality returns the ValuationandQuality field value if set, zero value otherwise.
func (o *ValuationsNNOREITDIRECT) GetValuationandQuality() ValuationsNNOREITDIRECTValuationandQuality {
	if o == nil || IsNil(o.ValuationandQuality) {
		var ret ValuationsNNOREITDIRECTValuationandQuality
		return ret
	}
	return *o.ValuationandQuality
}

// GetValuationandQualityOk returns a tuple with the ValuationandQuality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValuationsNNOREITDIRECT) GetValuationandQualityOk() (*ValuationsNNOREITDIRECTValuationandQuality, bool) {
	if o == nil || IsNil(o.ValuationandQuality) {
		return nil, false
	}
	return o.ValuationandQuality, true
}

// HasValuationandQuality returns a boolean if a field has been set.
func (o *ValuationsNNOREITDIRECT) HasValuationandQuality() bool {
	if o != nil && !IsNil(o.ValuationandQuality) {
		return true
	}

	return false
}

// SetValuationandQuality gets a reference to the given ValuationsNNOREITDIRECTValuationandQuality and assigns it to the ValuationandQuality field.
func (o *ValuationsNNOREITDIRECT) SetValuationandQuality(v ValuationsNNOREITDIRECTValuationandQuality) {
	o.ValuationandQuality = &v
}

func (o ValuationsNNOREITDIRECT) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValuationsNNOREITDIRECT) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BasicInformation) {
		toSerialize["basic_information"] = o.BasicInformation
	}
	if !IsNil(o.PerShareData) {
		toSerialize["per_share_data"] = o.PerShareData
	}
	if !IsNil(o.Ratios) {
		toSerialize["ratios"] = o.Ratios
	}
	if !IsNil(o.ValuationRatios) {
		toSerialize["valuation_ratios"] = o.ValuationRatios
	}
	if !IsNil(o.ValuationandQuality) {
		toSerialize["valuationand_quality"] = o.ValuationandQuality
	}
	return toSerialize, nil
}

type NullableValuationsNNOREITDIRECT struct {
	value *ValuationsNNOREITDIRECT
	isSet bool
}

func (v NullableValuationsNNOREITDIRECT) Get() *ValuationsNNOREITDIRECT {
	return v.value
}

func (v *NullableValuationsNNOREITDIRECT) Set(val *ValuationsNNOREITDIRECT) {
	v.value = val
	v.isSet = true
}

func (v NullableValuationsNNOREITDIRECT) IsSet() bool {
	return v.isSet
}

func (v *NullableValuationsNNOREITDIRECT) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValuationsNNOREITDIRECT(val *ValuationsNNOREITDIRECT) *NullableValuationsNNOREITDIRECT {
	return &NullableValuationsNNOREITDIRECT{value: val, isSet: true}
}

func (v NullableValuationsNNOREITDIRECT) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValuationsNNOREITDIRECT) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


