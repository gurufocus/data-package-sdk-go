/*
Gurufocus Data Package API

API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EtfEtfKeyStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EtfEtfKeyStatistics{}

// EtfEtfKeyStatistics struct for EtfEtfKeyStatistics
type EtfEtfKeyStatistics struct {
	// Beta measures the volatility or systematic risk of a security in comparison to the market. It is calculated using the latest three years of monthly returns of the stock and the benchmark.<br>- A beta of 1 indicates that the stock's price will move with the market. <br>- A beta of less than 1 indicates that the stock will be less volatile than the market. <br>- A beta greater than 1 indicates that the stock's price will be more volatile than the market.
	Beta *float32 `json:"beta,omitempty"`
	DisplayTimestamp *string `json:"display_timestamp,omitempty"`
	// The company's intraday high share price
	High *float32 `json:"high,omitempty"`
	// The company's intraday low share price
	Low *float32 `json:"low,omitempty"`
	// The company's share price at market open
	Open *float32 `json:"open,omitempty"`
	// The percent change of a company's share price based on the previous close.
	PPctChange *float32 `json:"p_pct_change,omitempty"`
	// The current share price of the stock
	Price *float32 `json:"price,omitempty"`
	// The highest share price over the past 52 weeks
	Price52whigh *float32 `json:"price52whigh,omitempty"`
	// The lowest share price over the past 52 weeks
	Price52wlow *float32 `json:"price52wlow,omitempty"`
	// The relative strength index, i.e., a value that closely captures the average gain on up days divided by the average loss non down days, over the past 14 days
	Rsi14 *float32 `json:"rsi_14,omitempty"`
	// The 3-Year Sharpe Ratio measures the risk-adjusted return of an investment over the past three years. It is calculated as the annualized result of the average monthly excess return divided by its standard deviation over the past three years. The monthly excess return is the monthly investment return minus the monthly risk-free rate (typically the 10-year Treasury Constant Maturity Rate). If the risk-free rate for a specific region is not available, U.S. data is used by default.
	SharpeRatio3y *float32 `json:"sharpe_ratio_3y,omitempty"`
	// The simple moving average, i.e., the arithmetic average share price, over the past 20 days.
	Sma20 *float32 `json:"sma_20,omitempty"`
	// The 3-Year Sortino Ratio measures the risk-adjusted return of an investment over the past three years, focusing specifically on downside risk rather than total risk. It is calculated as the annualized result of the average monthly excess return divided by its downside deviation (accounts for negative excess return) over the past three years. The monthly excess return is the monthly investment return minus the monthly risk-free rate (typically the 10-year Treasury Constant Maturity Rate). If the risk-free rate for a specific region is not available, U.S. data is used by default.
	SortinoRatio3y *float32 `json:"sortino_ratio_3y,omitempty"`
	// The annualized volatility of the stock over the past year
	Volatility *float32 `json:"volatility,omitempty"`
	// The daily trading volume of a security.
	VolumnDay *float32 `json:"volumn_day,omitempty"`
}

// NewEtfEtfKeyStatistics instantiates a new EtfEtfKeyStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEtfEtfKeyStatistics() *EtfEtfKeyStatistics {
	this := EtfEtfKeyStatistics{}
	return &this
}

// NewEtfEtfKeyStatisticsWithDefaults instantiates a new EtfEtfKeyStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEtfEtfKeyStatisticsWithDefaults() *EtfEtfKeyStatistics {
	this := EtfEtfKeyStatistics{}
	return &this
}

// GetBeta returns the Beta field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetBeta() float32 {
	if o == nil || IsNil(o.Beta) {
		var ret float32
		return ret
	}
	return *o.Beta
}

// GetBetaOk returns a tuple with the Beta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetBetaOk() (*float32, bool) {
	if o == nil || IsNil(o.Beta) {
		return nil, false
	}
	return o.Beta, true
}

// HasBeta returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasBeta() bool {
	if o != nil && !IsNil(o.Beta) {
		return true
	}

	return false
}

// SetBeta gets a reference to the given float32 and assigns it to the Beta field.
func (o *EtfEtfKeyStatistics) SetBeta(v float32) {
	o.Beta = &v
}

// GetDisplayTimestamp returns the DisplayTimestamp field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetDisplayTimestamp() string {
	if o == nil || IsNil(o.DisplayTimestamp) {
		var ret string
		return ret
	}
	return *o.DisplayTimestamp
}

// GetDisplayTimestampOk returns a tuple with the DisplayTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetDisplayTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayTimestamp) {
		return nil, false
	}
	return o.DisplayTimestamp, true
}

// HasDisplayTimestamp returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasDisplayTimestamp() bool {
	if o != nil && !IsNil(o.DisplayTimestamp) {
		return true
	}

	return false
}

// SetDisplayTimestamp gets a reference to the given string and assigns it to the DisplayTimestamp field.
func (o *EtfEtfKeyStatistics) SetDisplayTimestamp(v string) {
	o.DisplayTimestamp = &v
}

// GetHigh returns the High field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetHigh() float32 {
	if o == nil || IsNil(o.High) {
		var ret float32
		return ret
	}
	return *o.High
}

// GetHighOk returns a tuple with the High field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetHighOk() (*float32, bool) {
	if o == nil || IsNil(o.High) {
		return nil, false
	}
	return o.High, true
}

// HasHigh returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasHigh() bool {
	if o != nil && !IsNil(o.High) {
		return true
	}

	return false
}

// SetHigh gets a reference to the given float32 and assigns it to the High field.
func (o *EtfEtfKeyStatistics) SetHigh(v float32) {
	o.High = &v
}

// GetLow returns the Low field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetLow() float32 {
	if o == nil || IsNil(o.Low) {
		var ret float32
		return ret
	}
	return *o.Low
}

// GetLowOk returns a tuple with the Low field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetLowOk() (*float32, bool) {
	if o == nil || IsNil(o.Low) {
		return nil, false
	}
	return o.Low, true
}

// HasLow returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasLow() bool {
	if o != nil && !IsNil(o.Low) {
		return true
	}

	return false
}

// SetLow gets a reference to the given float32 and assigns it to the Low field.
func (o *EtfEtfKeyStatistics) SetLow(v float32) {
	o.Low = &v
}

// GetOpen returns the Open field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetOpen() float32 {
	if o == nil || IsNil(o.Open) {
		var ret float32
		return ret
	}
	return *o.Open
}

// GetOpenOk returns a tuple with the Open field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetOpenOk() (*float32, bool) {
	if o == nil || IsNil(o.Open) {
		return nil, false
	}
	return o.Open, true
}

// HasOpen returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasOpen() bool {
	if o != nil && !IsNil(o.Open) {
		return true
	}

	return false
}

// SetOpen gets a reference to the given float32 and assigns it to the Open field.
func (o *EtfEtfKeyStatistics) SetOpen(v float32) {
	o.Open = &v
}

// GetPPctChange returns the PPctChange field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetPPctChange() float32 {
	if o == nil || IsNil(o.PPctChange) {
		var ret float32
		return ret
	}
	return *o.PPctChange
}

// GetPPctChangeOk returns a tuple with the PPctChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetPPctChangeOk() (*float32, bool) {
	if o == nil || IsNil(o.PPctChange) {
		return nil, false
	}
	return o.PPctChange, true
}

// HasPPctChange returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasPPctChange() bool {
	if o != nil && !IsNil(o.PPctChange) {
		return true
	}

	return false
}

// SetPPctChange gets a reference to the given float32 and assigns it to the PPctChange field.
func (o *EtfEtfKeyStatistics) SetPPctChange(v float32) {
	o.PPctChange = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *EtfEtfKeyStatistics) SetPrice(v float32) {
	o.Price = &v
}

// GetPrice52whigh returns the Price52whigh field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetPrice52whigh() float32 {
	if o == nil || IsNil(o.Price52whigh) {
		var ret float32
		return ret
	}
	return *o.Price52whigh
}

// GetPrice52whighOk returns a tuple with the Price52whigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetPrice52whighOk() (*float32, bool) {
	if o == nil || IsNil(o.Price52whigh) {
		return nil, false
	}
	return o.Price52whigh, true
}

// HasPrice52whigh returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasPrice52whigh() bool {
	if o != nil && !IsNil(o.Price52whigh) {
		return true
	}

	return false
}

// SetPrice52whigh gets a reference to the given float32 and assigns it to the Price52whigh field.
func (o *EtfEtfKeyStatistics) SetPrice52whigh(v float32) {
	o.Price52whigh = &v
}

// GetPrice52wlow returns the Price52wlow field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetPrice52wlow() float32 {
	if o == nil || IsNil(o.Price52wlow) {
		var ret float32
		return ret
	}
	return *o.Price52wlow
}

// GetPrice52wlowOk returns a tuple with the Price52wlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetPrice52wlowOk() (*float32, bool) {
	if o == nil || IsNil(o.Price52wlow) {
		return nil, false
	}
	return o.Price52wlow, true
}

// HasPrice52wlow returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasPrice52wlow() bool {
	if o != nil && !IsNil(o.Price52wlow) {
		return true
	}

	return false
}

// SetPrice52wlow gets a reference to the given float32 and assigns it to the Price52wlow field.
func (o *EtfEtfKeyStatistics) SetPrice52wlow(v float32) {
	o.Price52wlow = &v
}

// GetRsi14 returns the Rsi14 field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetRsi14() float32 {
	if o == nil || IsNil(o.Rsi14) {
		var ret float32
		return ret
	}
	return *o.Rsi14
}

// GetRsi14Ok returns a tuple with the Rsi14 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetRsi14Ok() (*float32, bool) {
	if o == nil || IsNil(o.Rsi14) {
		return nil, false
	}
	return o.Rsi14, true
}

// HasRsi14 returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasRsi14() bool {
	if o != nil && !IsNil(o.Rsi14) {
		return true
	}

	return false
}

// SetRsi14 gets a reference to the given float32 and assigns it to the Rsi14 field.
func (o *EtfEtfKeyStatistics) SetRsi14(v float32) {
	o.Rsi14 = &v
}

// GetSharpeRatio3y returns the SharpeRatio3y field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetSharpeRatio3y() float32 {
	if o == nil || IsNil(o.SharpeRatio3y) {
		var ret float32
		return ret
	}
	return *o.SharpeRatio3y
}

// GetSharpeRatio3yOk returns a tuple with the SharpeRatio3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetSharpeRatio3yOk() (*float32, bool) {
	if o == nil || IsNil(o.SharpeRatio3y) {
		return nil, false
	}
	return o.SharpeRatio3y, true
}

// HasSharpeRatio3y returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasSharpeRatio3y() bool {
	if o != nil && !IsNil(o.SharpeRatio3y) {
		return true
	}

	return false
}

// SetSharpeRatio3y gets a reference to the given float32 and assigns it to the SharpeRatio3y field.
func (o *EtfEtfKeyStatistics) SetSharpeRatio3y(v float32) {
	o.SharpeRatio3y = &v
}

// GetSma20 returns the Sma20 field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetSma20() float32 {
	if o == nil || IsNil(o.Sma20) {
		var ret float32
		return ret
	}
	return *o.Sma20
}

// GetSma20Ok returns a tuple with the Sma20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetSma20Ok() (*float32, bool) {
	if o == nil || IsNil(o.Sma20) {
		return nil, false
	}
	return o.Sma20, true
}

// HasSma20 returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasSma20() bool {
	if o != nil && !IsNil(o.Sma20) {
		return true
	}

	return false
}

// SetSma20 gets a reference to the given float32 and assigns it to the Sma20 field.
func (o *EtfEtfKeyStatistics) SetSma20(v float32) {
	o.Sma20 = &v
}

// GetSortinoRatio3y returns the SortinoRatio3y field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetSortinoRatio3y() float32 {
	if o == nil || IsNil(o.SortinoRatio3y) {
		var ret float32
		return ret
	}
	return *o.SortinoRatio3y
}

// GetSortinoRatio3yOk returns a tuple with the SortinoRatio3y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetSortinoRatio3yOk() (*float32, bool) {
	if o == nil || IsNil(o.SortinoRatio3y) {
		return nil, false
	}
	return o.SortinoRatio3y, true
}

// HasSortinoRatio3y returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasSortinoRatio3y() bool {
	if o != nil && !IsNil(o.SortinoRatio3y) {
		return true
	}

	return false
}

// SetSortinoRatio3y gets a reference to the given float32 and assigns it to the SortinoRatio3y field.
func (o *EtfEtfKeyStatistics) SetSortinoRatio3y(v float32) {
	o.SortinoRatio3y = &v
}

// GetVolatility returns the Volatility field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetVolatility() float32 {
	if o == nil || IsNil(o.Volatility) {
		var ret float32
		return ret
	}
	return *o.Volatility
}

// GetVolatilityOk returns a tuple with the Volatility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetVolatilityOk() (*float32, bool) {
	if o == nil || IsNil(o.Volatility) {
		return nil, false
	}
	return o.Volatility, true
}

// HasVolatility returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasVolatility() bool {
	if o != nil && !IsNil(o.Volatility) {
		return true
	}

	return false
}

// SetVolatility gets a reference to the given float32 and assigns it to the Volatility field.
func (o *EtfEtfKeyStatistics) SetVolatility(v float32) {
	o.Volatility = &v
}

// GetVolumnDay returns the VolumnDay field value if set, zero value otherwise.
func (o *EtfEtfKeyStatistics) GetVolumnDay() float32 {
	if o == nil || IsNil(o.VolumnDay) {
		var ret float32
		return ret
	}
	return *o.VolumnDay
}

// GetVolumnDayOk returns a tuple with the VolumnDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtfEtfKeyStatistics) GetVolumnDayOk() (*float32, bool) {
	if o == nil || IsNil(o.VolumnDay) {
		return nil, false
	}
	return o.VolumnDay, true
}

// HasVolumnDay returns a boolean if a field has been set.
func (o *EtfEtfKeyStatistics) HasVolumnDay() bool {
	if o != nil && !IsNil(o.VolumnDay) {
		return true
	}

	return false
}

// SetVolumnDay gets a reference to the given float32 and assigns it to the VolumnDay field.
func (o *EtfEtfKeyStatistics) SetVolumnDay(v float32) {
	o.VolumnDay = &v
}

func (o EtfEtfKeyStatistics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EtfEtfKeyStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Beta) {
		toSerialize["beta"] = o.Beta
	}
	if !IsNil(o.DisplayTimestamp) {
		toSerialize["display_timestamp"] = o.DisplayTimestamp
	}
	if !IsNil(o.High) {
		toSerialize["high"] = o.High
	}
	if !IsNil(o.Low) {
		toSerialize["low"] = o.Low
	}
	if !IsNil(o.Open) {
		toSerialize["open"] = o.Open
	}
	if !IsNil(o.PPctChange) {
		toSerialize["p_pct_change"] = o.PPctChange
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Price52whigh) {
		toSerialize["price52whigh"] = o.Price52whigh
	}
	if !IsNil(o.Price52wlow) {
		toSerialize["price52wlow"] = o.Price52wlow
	}
	if !IsNil(o.Rsi14) {
		toSerialize["rsi_14"] = o.Rsi14
	}
	if !IsNil(o.SharpeRatio3y) {
		toSerialize["sharpe_ratio_3y"] = o.SharpeRatio3y
	}
	if !IsNil(o.Sma20) {
		toSerialize["sma_20"] = o.Sma20
	}
	if !IsNil(o.SortinoRatio3y) {
		toSerialize["sortino_ratio_3y"] = o.SortinoRatio3y
	}
	if !IsNil(o.Volatility) {
		toSerialize["volatility"] = o.Volatility
	}
	if !IsNil(o.VolumnDay) {
		toSerialize["volumn_day"] = o.VolumnDay
	}
	return toSerialize, nil
}

type NullableEtfEtfKeyStatistics struct {
	value *EtfEtfKeyStatistics
	isSet bool
}

func (v NullableEtfEtfKeyStatistics) Get() *EtfEtfKeyStatistics {
	return v.value
}

func (v *NullableEtfEtfKeyStatistics) Set(val *EtfEtfKeyStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableEtfEtfKeyStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableEtfEtfKeyStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEtfEtfKeyStatistics(val *EtfEtfKeyStatistics) *NullableEtfEtfKeyStatistics {
	return &NullableEtfEtfKeyStatistics{value: val, isSet: true}
}

func (v NullableEtfEtfKeyStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEtfEtfKeyStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


